<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0728.2252                               -->
<workbook original-version='10.3' source-build='10.3.2 (10300.17.0728.2252)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
        <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
        <members>
          <member value='&quot;01 - Estimated total population number&quot;' />
          <member value='&quot;02 - Estimated prevalence of TB (all forms) per 100 000 population&quot;' />
          <member value='&quot;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&quot;' />
          <member value='&quot;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&quot;' />
          <member value='&quot;05 - Estimated prevalence of TB (all forms)&quot;' />
          <member value='&quot;06 - Estimated prevalence of TB (all forms), low bound&quot;' />
          <member value='&quot;07 - Estimated prevalence of TB (all forms), high bound&quot;' />
          <member value='&quot;08 - Method to derive prevalence estimates&quot;' />
          <member value='&quot;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&quot;' />
          <member value='&quot;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&quot;' />
          <member value='&quot;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&quot;' />
          <member value='&quot;12 - Estimated number of deaths from TB (all forms, excluding HIV)&quot;' />
          <member value='&quot;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&quot;' />
          <member value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
          <member value='&quot;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&quot;' />
          <member value='&quot;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&quot;' />
          <member value='&quot;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&quot;' />
          <member value='&quot;18 - Estimated number of deaths from TB in people who are HIV-positive&quot;' />
          <member value='&quot;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&quot;' />
          <member value='&quot;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&quot;' />
          <member value='&quot;21 - Method to derive mortality estimates&quot;' />
          <member value='&quot;22 - Estimated incidence (all forms) per 100 000 population&quot;' />
          <member value='&quot;23 - Estimated incidence (all forms) per 100 000 population, low bound&quot;' />
          <member value='&quot;24 - Estimated incidence (all forms) per 100 000 population, high bound&quot;' />
          <member value='&quot;25 - Estimated number of incident cases (all forms)&quot;' />
          <member value='&quot;26 - Estimated number of incident cases (all forms), low bound&quot;' />
          <member value='&quot;27 - Estimated number of incident cases (all forms), high bound&quot;' />
          <member value='&quot;28 - Method to derive incidence estimates&quot;' />
          <member value='&quot;29 - Estimated HIV in incident TB (percent)&quot;' />
          <member value='&quot;29 - Estimated HIV in incident TB (percent), low bound&quot;' />
          <member value='&quot;30 - Estimated HIV in incident TB (percent), high bound&quot;' />
          <member value='&quot;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&quot;' />
          <member value='&quot;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&quot;' />
          <member value='&quot;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&quot;' />
          <member value='&quot;33 - Estimated incidence of TB cases who are HIV-positive&quot;' />
          <member value='&quot;34 - Estimated incidence of TB cases who are HIV-positive, low bound&quot;' />
          <member value='&quot;35 - Estimated incidence of TB cases who are HIV-positive, high bound&quot;' />
          <member value='&quot;36 - Method to derive TBHIV estimates&quot;' />
          <member value='&quot;31 - Case detection rate (all forms), percent&quot;' />
          <member value='&quot;37 - Case detection rate (all forms), percent, low bound&quot;' />
          <member value='&quot;38 - Case detection rate (all forms), percent, high bound&quot;' />
        </members>
      </column>
      <column caption='Ratio' datatype='integer' name='[Param1 (copy)]' param-domain-type='range' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <range max='10' min='1' />
      </column>
    </datasource>
    <datasource caption='DATA (hackathon)' inline='true' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hackathon' name='excel-direct.1c5om4w07dzzxx13ldjjl0m5b9ju'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/A159899/Desktop/hktn/hackathon.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1c5om4w07dzzxx13ldjjl0m5b9ju' name='DATA' table='[DATA$]' type='table'>
          <columns gridOrigin='A1:AW5121:no:A1:AW5121:0' header='yes' outcome='6'>
            <column datatype='string' name='Country or territory name' ordinal='0' />
            <column datatype='string' name='ISO 2-character country/territory code' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='string' name='ISO 3-character country/territory code' ordinal='4' />
            <column datatype='integer' name='ISO numeric country/territory code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='7' />
            <column datatype='integer' name='Estimated total population number' ordinal='8' />
            <column datatype='real' name='Estimated prevalence of TB (all forms) per 100 000 population' ordinal='9' />
            <column datatype='real' name='Estimated prevalence of TB (all forms) per 100 000 population, low bound' ordinal='10' />
            <column datatype='real' name='Estimated prevalence of TB (all forms) per 100 000 population, high bound' ordinal='11' />
            <column datatype='real' name='Estimated prevalence of TB (all forms)' ordinal='12' />
            <column datatype='real' name='Estimated prevalence of TB (all forms), low bound' ordinal='13' />
            <column datatype='real' name='Estimated prevalence of TB (all forms), high bound' ordinal='14' />
            <column datatype='string' name='Method to derive prevalence estimates' ordinal='15' />
            <column datatype='real' name='Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population' ordinal='16' />
            <column datatype='real' name='Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound' ordinal='17' />
            <column datatype='real' name='Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound' ordinal='18' />
            <column datatype='real' name='Estimated number of deaths from TB (all forms, excluding HIV)' ordinal='19' />
            <column datatype='real' name='Estimated number of deaths from TB (all forms, excluding HIV), low bound' ordinal='20' />
            <column datatype='real' name='Estimated number of deaths from TB (all forms, excluding HIV), high bound' ordinal='21' />
            <column datatype='real' name='Estimated mortality of TB cases who are HIV-positive, per 100 000 population' ordinal='22' />
            <column datatype='real' name='Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound' ordinal='23' />
            <column datatype='real' name='Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound' ordinal='24' />
            <column datatype='real' name='Estimated number of deaths from TB in people who are HIV-positive' ordinal='25' />
            <column datatype='real' name='Estimated number of deaths from TB in people who are HIV-positive, low bound' ordinal='26' />
            <column datatype='real' name='Estimated number of deaths from TB in people who are HIV-positive, high bound' ordinal='27' />
            <column datatype='string' name='Method to derive mortality estimates' ordinal='28' />
            <column datatype='real' name='Estimated incidence (all forms) per 100 000 population' ordinal='29' />
            <column datatype='real' name='Estimated incidence (all forms) per 100 000 population, low bound' ordinal='30' />
            <column datatype='real' name='Estimated incidence (all forms) per 100 000 population, high bound' ordinal='31' />
            <column datatype='real' name='Estimated number of incident cases (all forms)' ordinal='32' />
            <column datatype='real' name='Estimated number of incident cases (all forms), low bound' ordinal='33' />
            <column datatype='real' name='Estimated number of incident cases (all forms), high bound' ordinal='34' />
            <column datatype='string' name='Method to derive incidence estimates' ordinal='35' />
            <column datatype='real' name='Estimated HIV in incident TB (percent)' ordinal='36' />
            <column datatype='real' name='Estimated HIV in incident TB (percent), low bound' ordinal='37' />
            <column datatype='real' name='Estimated HIV in incident TB (percent), high bound' ordinal='38' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive per 100 000 population' ordinal='39' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound' ordinal='40' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound' ordinal='41' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive' ordinal='42' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive, low bound' ordinal='43' />
            <column datatype='real' name='Estimated incidence of TB cases who are HIV-positive, high bound' ordinal='44' />
            <column datatype='string' name='Method to derive TBHIV estimates' ordinal='45' />
            <column datatype='real' name='Case detection rate (all forms), percent' ordinal='46' />
            <column datatype='real' name='Case detection rate (all forms), percent, low bound' ordinal='47' />
            <column datatype='real' name='Case detection rate (all forms), percent, high bound' ordinal='48' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DATA]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>5</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AW5121:no:A1:AW5121:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country or territory name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country or territory name]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Country or territory name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO 2-character country/territory code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ISO 2-character country/territory code]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>ISO 2-character country/territory code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO 3-character country/territory code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ISO 3-character country/territory code]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>ISO 3-character country/territory code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO numeric country/territory code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ISO numeric country/territory code]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>ISO numeric country/territory code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated total population number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Estimated total population number]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated total population number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms) per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms) per 100 000 population]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms) per 100 000 population, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms) per 100 000 population, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population, low bound</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms) per 100 000 population, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms) per 100 000 population, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population, high bound</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms)]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms), low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms), low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms), low bound</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated prevalence of TB (all forms), high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated prevalence of TB (all forms), high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated prevalence of TB (all forms), high bound</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method to derive prevalence estimates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Method to derive prevalence estimates]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Method to derive prevalence estimates</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB (all forms, excluding HIV)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB (all forms, excluding HIV)]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB (all forms, excluding HIV), low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB (all forms, excluding HIV), low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV), low bound</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB (all forms, excluding HIV), high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB (all forms, excluding HIV), high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV), high bound</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB in people who are HIV-positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB in people who are HIV-positive]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB in people who are HIV-positive</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB in people who are HIV-positive, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB in people who are HIV-positive, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB in people who are HIV-positive, low bound</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of deaths from TB in people who are HIV-positive, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of deaths from TB in people who are HIV-positive, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of deaths from TB in people who are HIV-positive, high bound</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method to derive mortality estimates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Method to derive mortality estimates]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Method to derive mortality estimates</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence (all forms) per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence (all forms) per 100 000 population]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence (all forms) per 100 000 population</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence (all forms) per 100 000 population, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence (all forms) per 100 000 population, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence (all forms) per 100 000 population, low bound</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence (all forms) per 100 000 population, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence (all forms) per 100 000 population, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence (all forms) per 100 000 population, high bound</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of incident cases (all forms)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of incident cases (all forms)]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of incident cases (all forms)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of incident cases (all forms), low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of incident cases (all forms), low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of incident cases (all forms), low bound</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated number of incident cases (all forms), high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated number of incident cases (all forms), high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated number of incident cases (all forms), high bound</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method to derive incidence estimates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Method to derive incidence estimates]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Method to derive incidence estimates</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated HIV in incident TB (percent)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated HIV in incident TB (percent)]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated HIV in incident TB (percent)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated HIV in incident TB (percent), low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated HIV in incident TB (percent), low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated HIV in incident TB (percent), low bound</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated HIV in incident TB (percent), high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated HIV in incident TB (percent), high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated HIV in incident TB (percent), high bound</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive, low bound</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated incidence of TB cases who are HIV-positive, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated incidence of TB cases who are HIV-positive, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Estimated incidence of TB cases who are HIV-positive, high bound</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method to derive TBHIV estimates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Method to derive TBHIV estimates]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Method to derive TBHIV estimates</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case detection rate (all forms), percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Case detection rate (all forms), percent]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Case detection rate (all forms), percent</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case detection rate (all forms), percent, low bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Case detection rate (all forms), percent, low bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Case detection rate (all forms), percent, low bound</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case detection rate (all forms), percent, high bound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Case detection rate (all forms), percent, high bound]</local-name>
            <parent-name>[DATA]</parent-name>
            <remote-alias>Case detection rate (all forms), percent, high bound</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ROUND LATTITUDE' datatype='real' name='[Calculation_1821424610424832000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([latitude])' />
      </column>
      <column caption='ROUND LONGITUDE' datatype='real' name='[Calculation_1821424610424938497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([longitude])' />
      </column>
      <column caption='Hexlong' datatype='real' name='[Calculation_1821424610426744836]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='HEXBINX([longitude]*[Parameters].[Param1 (copy)],[latitude]*[Parameters].[Param1 (copy)])' />
      </column>
      <column caption='High-Low Points' datatype='real' name='[Calculation_1821424610432409607]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF WINDOW_MAX(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) OR&#13;&#10; WINDOW_MIN(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616])&#13;&#10;       THEN SUM([Calculation_716072376834543616]) &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max-Min-Points' datatype='string' name='[Calculation_1821424610435256328]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF WINDOW_MAX(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) THEN &apos;HIGH&apos;&#13;&#10;ELSEIF WINDOW_MIN(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) THEN &apos;LOW&apos;&#13;&#10;ELSE &apos;OTHER&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Hexlat' datatype='real' name='[Hexlong (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='HEXBINY([longitude]*[Parameters].[Param1 (copy)],[latitude]*[Parameters].[Param1 (copy)])' />
      </column>
      <column datatype='string' name='[ISO 2-character country/territory code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[ISO 3-character country/territory code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFR&quot;' value='Africa' />
          <alias key='&quot;AMR&quot;' value='Americas' />
          <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
          <alias key='&quot;EUR&quot;' value='Europe' />
          <alias key='&quot;SEA&quot;' value='South East Asia' />
          <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
        </aliases>
      </column>
      <column datatype='date' datatype-customized='true' name='[Year (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Year]' />
      </column>
      <column datatype='string' name='[Year: 5 YEAR]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Year (copy)]' new-bin='true'>
          <bin default-name='false' value='&quot;00 - 04&quot;'>
            <value>#2000-01-01#</value>
            <value>#2001-01-01#</value>
            <value>#2002-01-01#</value>
            <value>#2003-01-01#</value>
            <value>#2004-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;05 - 09&quot;'>
            <value>#2005-01-01#</value>
            <value>#2006-01-01#</value>
            <value>#2007-01-01#</value>
            <value>#2008-01-01#</value>
            <value>#2009-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;10-13&quot;'>
            <value>#2010-01-01#</value>
            <value>#2011-01-01#</value>
            <value>#2012-01-01#</value>
            <value>#2013-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;90 - 94&quot;'>
            <value>#1990-01-01#</value>
            <value>#1991-01-01#</value>
            <value>#1992-01-01#</value>
            <value>#1993-01-01#</value>
            <value>#1994-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;95 - 99&quot;'>
            <value>#1995-01-01#</value>
            <value>#1996-01-01#</value>
            <value>#1997-01-01#</value>
            <value>#1998-01-01#</value>
            <value>#1999-01-01#</value>
          </bin>
        </calculation>
      </column>
      <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1821424610435256328]' derivation='User' name='[usr:Calculation_1821424610435256328:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Contries]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Calculation_716072376834543616])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country or territory name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Region, Country or territory name'>
          <field>[Region]</field>
          <field>[Country or territory name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/A159899/AppData/Local/Temp/TableauTemp/DATA (hackathon).tde' schema='Extract' tablename='Extract' update-time='08/29/2018 04:57:57 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Year (copy)]' formula='[Year]' />
            <calculation column='[Year: 5 YEAR]' formula='CASE [Year (copy)]&#10;  WHEN #2000-01-01# THEN &quot;00 - 04&quot;&#10;  WHEN #2001-01-01# THEN &quot;00 - 04&quot;&#10;  WHEN #2002-01-01# THEN &quot;00 - 04&quot;&#10;  WHEN #2003-01-01# THEN &quot;00 - 04&quot;&#10;  WHEN #2004-01-01# THEN &quot;00 - 04&quot;&#10;  WHEN #2005-01-01# THEN &quot;05 - 09&quot;&#10;  WHEN #2006-01-01# THEN &quot;05 - 09&quot;&#10;  WHEN #2007-01-01# THEN &quot;05 - 09&quot;&#10;  WHEN #2008-01-01# THEN &quot;05 - 09&quot;&#10;  WHEN #2009-01-01# THEN &quot;05 - 09&quot;&#10;  WHEN #2010-01-01# THEN &quot;10-13&quot;&#10;  WHEN #2011-01-01# THEN &quot;10-13&quot;&#10;  WHEN #2012-01-01# THEN &quot;10-13&quot;&#10;  WHEN #2013-01-01# THEN &quot;10-13&quot;&#10;  WHEN #1990-01-01# THEN &quot;90 - 94&quot;&#10;  WHEN #1991-01-01# THEN &quot;90 - 94&quot;&#10;  WHEN #1992-01-01# THEN &quot;90 - 94&quot;&#10;  WHEN #1993-01-01# THEN &quot;90 - 94&quot;&#10;  WHEN #1994-01-01# THEN &quot;90 - 94&quot;&#10;  WHEN #1995-01-01# THEN &quot;95 - 99&quot;&#10;  WHEN #1996-01-01# THEN &quot;95 - 99&quot;&#10;  WHEN #1997-01-01# THEN &quot;95 - 99&quot;&#10;  WHEN #1998-01-01# THEN &quot;95 - 99&quot;&#10;  WHEN #1999-01-01# THEN &quot;95 - 99&quot;&#10;  ELSE STR([Year (copy)])&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5120' timestamp-start='2018-08-29 16:57:57.758' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Case detection rate (all forms), percent, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Case detection rate (all forms), percent, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Case detection rate (all forms), percent, high bound</remote-alias>
              <ordinal>0</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>354316.32999999996</statistic>
                <statistic aggregation='Avg' datatype='real'>75.854491543566681</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>380.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>29.277632505587075</statistic>
                <statistic aggregation='StdevP' datatype='real'>29.274498358759537</statistic>
                <statistic aggregation='Var' datatype='real'>857.1797651322089</statistic>
                <statistic aggregation='VarP' datatype='real'>856.99625415701473</statistic>
                <statistic aggregation='Count' datatype='integer'>4671</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30879514.560899995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Case detection rate (all forms), percent, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Case detection rate (all forms), percent, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Case detection rate (all forms), percent, low bound</remote-alias>
              <ordinal>1</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>289412.39999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>61.959409120102755</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>270.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>23.603154795711411</statistic>
                <statistic aggregation='StdevP' datatype='real'>23.600628097123032</statistic>
                <statistic aggregation='Var' datatype='real'>557.10891631031461</statistic>
                <statistic aggregation='VarP' datatype='real'>556.98964657871318</statistic>
                <statistic aggregation='Count' datatype='integer'>4671</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20533519.935199995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Case detection rate (all forms), percent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Case detection rate (all forms), percent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Case detection rate (all forms), percent</remote-alias>
              <ordinal>2</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>318645.5799999999</statistic>
                <statistic aggregation='Avg' datatype='real'>68.217850567330316</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>320.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>25.465390797784302</statistic>
                <statistic aggregation='StdevP' datatype='real'>25.46266474834141</statistic>
                <statistic aggregation='Var' datatype='real'>648.48612848387734</statistic>
                <statistic aggregation='VarP' datatype='real'>648.3472960864284</statistic>
                <statistic aggregation='Count' datatype='integer'>4671</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24765746.780399997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country or territory name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country or territory name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country or territory name</remote-alias>
              <ordinal>3</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated HIV in incident TB (percent), high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated HIV in incident TB (percent), high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated HIV in incident TB (percent), high bound</remote-alias>
              <ordinal>4</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>277</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>48727.289999999972</statistic>
                <statistic aggregation='Avg' datatype='real'>13.379266886326187</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>20.079531318168669</statistic>
                <statistic aggregation='StdevP' datatype='real'>20.076774466186407</statistic>
                <statistic aggregation='Var' datatype='real'>403.18757795731642</statistic>
                <statistic aggregation='VarP' datatype='real'>403.07687296611448</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2119941.3889000015</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated HIV in incident TB (percent), low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated HIV in incident TB (percent), low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated HIV in incident TB (percent), low bound</remote-alias>
              <ordinal>5</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33327.889999999898</statistic>
                <statistic aggregation='Avg' datatype='real'>9.1509857221306685</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>74.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.330585420152175</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.328617879067849</statistic>
                <statistic aggregation='Var' datatype='real'>205.36567848427808</statistic>
                <statistic aggregation='VarP' datatype='real'>205.30929032434281</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1052719.4808999971</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated HIV in incident TB (percent)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated HIV in incident TB (percent)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated HIV in incident TB (percent)</remote-alias>
              <ordinal>6</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>40747.889999999919</statistic>
                <statistic aggregation='Avg' datatype='real'>11.179119341563764</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>83.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.133550169277605</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.13119972682615</statistic>
                <statistic aggregation='Var' datatype='real'>293.55854140315267</statistic>
                <statistic aggregation='VarP' datatype='real'>293.47800408040831</statistic>
                <statistic aggregation='Count' datatype='integer'>3645</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1525252.8500999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence (all forms) per 100 000 population, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence (all forms) per 100 000 population, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence (all forms) per 100 000 population, high bound</remote-alias>
              <ordinal>7</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>802</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>776236.41999999818</statistic>
                <statistic aggregation='Avg' datatype='real'>154.44417429367255</statistic>
                <statistic aggregation='Min' datatype='real'>0.44</statistic>
                <statistic aggregation='Max' datatype='real'>1737.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>214.81776199278036</statistic>
                <statistic aggregation='StdevP' datatype='real'>214.79639028084438</statistic>
                <statistic aggregation='Var' datatype='real'>46146.670867586829</statistic>
                <statistic aggregation='VarP' datatype='real'>46137.489277680819</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>351772214.05319995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence (all forms) per 100 000 population, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence (all forms) per 100 000 population, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence (all forms) per 100 000 population, low bound</remote-alias>
              <ordinal>8</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>681</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>611401.91999999934</statistic>
                <statistic aggregation='Avg' datatype='real'>121.64781536012721</statistic>
                <statistic aggregation='Min' datatype='real'>0.34000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>1507.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>170.07724983865185</statistic>
                <statistic aggregation='StdevP' datatype='real'>170.06032925463359</statistic>
                <statistic aggregation='Var' datatype='real'>28926.2709126792</statistic>
                <statistic aggregation='VarP' datatype='real'>28920.515586194382</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>219730219.21120015</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence (all forms) per 100 000 population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence (all forms) per 100 000 population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence (all forms) per 100 000 population</remote-alias>
              <ordinal>9</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>732</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>689633.6699999983</statistic>
                <statistic aggregation='Avg' datatype='real'>134.69407617187466</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1662.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>190.032361042568</statistic>
                <statistic aggregation='StdevP' datatype='real'>190.01380228857653</statistic>
                <statistic aggregation='Var' datatype='real'>36112.298243412915</statistic>
                <statistic aggregation='VarP' datatype='real'>36105.245060162248</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>277748424.78569996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound</remote-alias>
              <ordinal>10</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>540</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>172362.67000000019</statistic>
                <statistic aggregation='Avg' datatype='real'>47.32637836353657</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1438.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>147.00484934906882</statistic>
                <statistic aggregation='StdevP' datatype='real'>146.98466607865737</statistic>
                <statistic aggregation='Var' datatype='real'>21610.425732142419</statistic>
                <statistic aggregation='VarP' datatype='real'>21604.492062254409</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>86840861.026899964</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound</remote-alias>
              <ordinal>11</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>491</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>123435.82999999962</statistic>
                <statistic aggregation='Avg' datatype='real'>33.892320153761567</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>981.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>105.55734821290227</statistic>
                <statistic aggregation='StdevP' datatype='real'>105.54285554471934</statistic>
                <statistic aggregation='Var' datatype='real'>11142.353761739903</statistic>
                <statistic aggregation='VarP' datatype='real'>11139.294356533495</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44752836.715300262</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive per 100 000 population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive per 100 000 population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive per 100 000 population</remote-alias>
              <ordinal>12</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>519</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>146632.06000000011</statistic>
                <statistic aggregation='Avg' datatype='real'>40.228274348422531</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1063.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>125.1755668430549</statistic>
                <statistic aggregation='StdevP' datatype='real'>125.1583948055445</statistic>
                <statistic aggregation='Var' datatype='real'>15668.922534480103</statistic>
                <statistic aggregation='VarP' datatype='real'>15664.623790300548</statistic>
                <statistic aggregation='Count' datatype='integer'>3645</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>62996308.453599848</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive, high bound</remote-alias>
              <ordinal>13</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>26818393.069999982</statistic>
                <statistic aggregation='Avg' datatype='real'>7363.6444453596878</statistic>
                <statistic aggregation='Min' datatype='real'>0.01</statistic>
                <statistic aggregation='Max' datatype='real'>350000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>26548.834113187535</statistic>
                <statistic aggregation='StdevP' datatype='real'>26545.189047732973</statistic>
                <statistic aggregation='Var' datatype='real'>704840592.76955009</statistic>
                <statistic aggregation='VarP' datatype='real'>704647061.5798825</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2763805709437.3101</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive, low bound</remote-alias>
              <ordinal>14</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>532</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>18993567.459999993</statistic>
                <statistic aggregation='Avg' datatype='real'>5215.1475727622164</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>290000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>19993.703600890512</statistic>
                <statistic aggregation='StdevP' datatype='real'>19990.958532764595</statistic>
                <statistic aggregation='Var' datatype='real'>399748183.68026221</statistic>
                <statistic aggregation='VarP' datatype='real'>399638423.05871356</statistic>
                <statistic aggregation='Count' datatype='integer'>3642</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1554537394016.9492</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated incidence of TB cases who are HIV-positive</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated incidence of TB cases who are HIV-positive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated incidence of TB cases who are HIV-positive</remote-alias>
              <ordinal>15</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22217831.340000004</statistic>
                <statistic aggregation='Avg' datatype='real'>6095.4269794238689</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>320000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>22807.804791529325</statistic>
                <statistic aggregation='StdevP' datatype='real'>22804.675934282761</statistic>
                <statistic aggregation='Var' datatype='real'>520195959.40850806</statistic>
                <statistic aggregation='VarP' datatype='real'>520053244.46765524</statistic>
                <statistic aggregation='Count' datatype='integer'>3645</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2031021244658.7283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population</remote-alias>
              <ordinal>16</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>367</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>103293.06000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>20.174425781250005</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>278.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>32.89380029568666</statistic>
                <statistic aggregation='StdevP' datatype='real'>32.890587853636355</statistic>
                <statistic aggregation='Var' datatype='real'>1082.0020978925158</statistic>
                <statistic aggregation='VarP' datatype='real'>1081.7907693577713</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7622646.9117999924</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound</remote-alias>
              <ordinal>17</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>140256.85000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>27.393916015625003</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>354.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.594121660308552</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.589766552953051</statistic>
                <statistic aggregation='Var' datatype='real'>1988.6356866544004</statistic>
                <statistic aggregation='VarP' datatype='real'>1988.2472812468507</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14022010.449499989</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound</remote-alias>
              <ordinal>18</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>68502.959999999817</statistic>
                <statistic aggregation='Avg' datatype='real'>13.379484374999965</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>202.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>22.322592621024903</statistic>
                <statistic aggregation='StdevP' datatype='real'>22.320412573886443</statistic>
                <statistic aggregation='Var' datatype='real'>498.29814132423542</statistic>
                <statistic aggregation='VarP' datatype='real'>498.20081746850803</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3467322.4684000057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound</remote-alias>
              <ordinal>19</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>434</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>78893.709999999934</statistic>
                <statistic aggregation='Avg' datatype='real'>24.824955947136544</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>765.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>74.167187420361046</statistic>
                <statistic aggregation='StdevP' datatype='real'>74.155517655924029</statistic>
                <statistic aggregation='Var' datatype='real'>5500.7716898469616</statistic>
                <statistic aggregation='VarP' datatype='real'>5499.0407988180605</statistic>
                <statistic aggregation='Count' datatype='integer'>3178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19434484.533899959</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound</remote-alias>
              <ordinal>20</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>371</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>45204.660000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>14.224247954688485</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>344.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.988778545953402</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.982171862166787</statistic>
                <statistic aggregation='Var' datatype='real'>1763.0575237811167</statistic>
                <statistic aggregation='VarP' datatype='real'>1762.5027542645084</statistic>
                <statistic aggregation='Count' datatype='integer'>3178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6244236.0455999952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated mortality of TB cases who are HIV-positive, per 100 000 population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated mortality of TB cases who are HIV-positive, per 100 000 population</remote-alias>
              <ordinal>21</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>396</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>60564.539999999863</statistic>
                <statistic aggregation='Avg' datatype='real'>11.829011718749973</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>481.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>45.436585954833276</statistic>
                <statistic aggregation='StdevP' datatype='real'>45.432148571556446</statistic>
                <statistic aggregation='Var' datatype='real'>2064.4833432309529</statistic>
                <statistic aggregation='VarP' datatype='real'>2064.0801238279782</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11284508.887399947</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB (all forms, excluding HIV), high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB (all forms, excluding HIV), high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV), high bound</remote-alias>
              <ordinal>22</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>536</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>46597935.390000172</statistic>
                <statistic aggregation='Avg' datatype='real'>9101.1592558594093</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>590000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>41925.477850311421</statistic>
                <statistic aggregation='StdevP' datatype='real'>41921.383365429319</statistic>
                <statistic aggregation='Var' datatype='real'>1757745692.9769535</statistic>
                <statistic aggregation='VarP' datatype='real'>1757402383.2712939</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9421995433327.6641</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB (all forms, excluding HIV), low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB (all forms, excluding HIV), low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV), low bound</remote-alias>
              <ordinal>23</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>533</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24148664.810000032</statistic>
                <statistic aggregation='Avg' datatype='real'>4716.5360957031317</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>290000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>20718.668326107567</statistic>
                <statistic aggregation='StdevP' datatype='real'>20716.644919849885</statistic>
                <statistic aggregation='Var' datatype='real'>429263217.20725286</statistic>
                <statistic aggregation='VarP' datatype='real'>429179376.73514205</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2311296458123.3286</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB (all forms, excluding HIV)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB (all forms, excluding HIV)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB (all forms, excluding HIV)</remote-alias>
              <ordinal>24</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>536</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>35143607.880000092</statistic>
                <statistic aggregation='Avg' datatype='real'>6863.9859140625176</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>420000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>30554.560699794558</statistic>
                <statistic aggregation='StdevP' datatype='real'>30551.57671026649</statistic>
                <statistic aggregation='Var' datatype='real'>933581179.55743015</statistic>
                <statistic aggregation='VarP' datatype='real'>933398839.48329782</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5020227287612.1426</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB in people who are HIV-positive, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB in people who are HIV-positive, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB in people who are HIV-positive, high bound</remote-alias>
              <ordinal>25</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12115149.5</statistic>
                <statistic aggregation='Avg' datatype='real'>3812.1930459408431</statistic>
                <statistic aggregation='Min' datatype='real'>0.72999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>140000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>12902.026168396698</statistic>
                <statistic aggregation='StdevP' datatype='real'>12899.996111556442</statistic>
                <statistic aggregation='Var' datatype='real'>166462279.24999321</statistic>
                <statistic aggregation='VarP' datatype='real'>166409899.67817131</statistic>
                <statistic aggregation='Count' datatype='integer'>3178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>575035949851.66211</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB in people who are HIV-positive, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB in people who are HIV-positive, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB in people who are HIV-positive, low bound</remote-alias>
              <ordinal>26</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>449</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6857174.8700000048</statistic>
                <statistic aggregation='Avg' datatype='real'>2157.7013436123361</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>76000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>7404.182343553558</statistic>
                <statistic aggregation='StdevP' datatype='real'>7403.017339637363</statistic>
                <statistic aggregation='Var' datatype='real'>54821916.176590264</statistic>
                <statistic aggregation='VarP' datatype='real'>54804665.730971456</statistic>
                <statistic aggregation='Count' datatype='integer'>3178</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>188964963123.41104</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of deaths from TB in people who are HIV-positive</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of deaths from TB in people who are HIV-positive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of deaths from TB in people who are HIV-positive</remote-alias>
              <ordinal>27</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>361</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9209498.8099999987</statistic>
                <statistic aggregation='Avg' datatype='real'>1798.7302363281246</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>96000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>7915.6918468981203</statistic>
                <statistic aggregation='StdevP' datatype='real'>7914.9187923675509</statistic>
                <statistic aggregation='Var' datatype='real'>62658177.415049382</statistic>
                <statistic aggregation='VarP' datatype='real'>62645939.489773005</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>337312614158.61267</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of incident cases (all forms), high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of incident cases (all forms), high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of incident cases (all forms), high bound</remote-alias>
              <ordinal>28</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>513</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>237499832.43000022</statistic>
                <statistic aggregation='Avg' datatype='real'>47254.244415041823</statistic>
                <statistic aggregation='Min' datatype='real'>0.14999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>2400000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>201583.66130375623</statistic>
                <statistic aggregation='StdevP' datatype='real'>201563.6062212509</statistic>
                <statistic aggregation='Var' datatype='real'>40635972504.62751</statistic>
                <statistic aggregation='VarP' datatype='real'>40627887352.915489</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>215418636965931.94</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of incident cases (all forms), low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of incident cases (all forms), low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of incident cases (all forms), low bound</remote-alias>
              <ordinal>29</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>494</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>196113144.71000007</statistic>
                <statistic aggregation='Avg' datatype='real'>39019.726364902519</statistic>
                <statistic aggregation='Min' datatype='real'>0.11</statistic>
                <statistic aggregation='Max' datatype='real'>2300000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>176254.04418372072</statistic>
                <statistic aggregation='StdevP' datatype='real'>176236.50908501705</statistic>
                <statistic aggregation='Var' datatype='real'>31065488091.116974</statistic>
                <statistic aggregation='VarP' datatype='real'>31059307134.473297</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>163756358901007.53</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated number of incident cases (all forms)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated number of incident cases (all forms)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated number of incident cases (all forms)</remote-alias>
              <ordinal>30</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>498</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>216004364.23000005</statistic>
                <statistic aggregation='Avg' datatype='real'>42188.352388671883</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2400000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>186570.11907673968</statistic>
                <statistic aggregation='StdevP' datatype='real'>186551.89844882605</statistic>
                <statistic aggregation='Var' datatype='real'>34808409332.308823</statistic>
                <statistic aggregation='VarP' datatype='real'>34801610814.861107</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>187297115607715.16</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms) per 100 000 population, high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms) per 100 000 population, high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population, high bound</remote-alias>
              <ordinal>31</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1221</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1637132.4700000011</statistic>
                <statistic aggregation='Avg' datatype='real'>321.00636666666691</statistic>
                <statistic aggregation='Min' datatype='real'>0.77000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>3038.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>421.32613883426222</statistic>
                <statistic aggregation='StdevP' datatype='real'>421.28483032503658</statistic>
                <statistic aggregation='Var' datatype='real'>177515.71526498799</statistic>
                <statistic aggregation='VarP' datatype='real'>177480.90826199486</statistic>
                <statistic aggregation='Count' datatype='integer'>5100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1430682578.0829003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms) per 100 000 population, low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms) per 100 000 population, low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population, low bound</remote-alias>
              <ordinal>32</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>674</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>519258.29999999946</statistic>
                <statistic aggregation='Avg' datatype='real'>101.81535294117637</statistic>
                <statistic aggregation='Min' datatype='real'>0.11</statistic>
                <statistic aggregation='Max' datatype='real'>1316.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>145.25934935185848</statistic>
                <statistic aggregation='StdevP' datatype='real'>145.2451075410147</statistic>
                <statistic aggregation='Var' datatype='real'>21100.278574125266</statistic>
                <statistic aggregation='VarP' datatype='real'>21096.141264600927</statistic>
                <statistic aggregation='Count' datatype='integer'>5100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>160458787.53159991</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms) per 100 000 population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms) per 100 000 population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms) per 100 000 population</remote-alias>
              <ordinal>33</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>914</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>995256.83000000031</statistic>
                <statistic aggregation='Avg' datatype='real'>194.38609960937507</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1762.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>259.01638479370689</statistic>
                <statistic aggregation='StdevP' datatype='real'>258.99108898967239</statistic>
                <statistic aggregation='Var' datatype='real'>67089.487591601632</statistic>
                <statistic aggregation='VarP' datatype='real'>67076.38417605641</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>536895180.27469969</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms), high bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms), high bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms), high bound</remote-alias>
              <ordinal>34</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>570</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>475309347.05000025</statistic>
                <statistic aggregation='Avg' datatype='real'>93197.911186274563</statistic>
                <statistic aggregation='Min' datatype='real'>0.16</statistic>
                <statistic aggregation='Max' datatype='real'>5200000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>393863.11783526163</statistic>
                <statistic aggregation='StdevP' datatype='real'>393824.50191107107</statistic>
                <statistic aggregation='Var' datatype='real'>155128155590.91318</statistic>
                <statistic aggregation='VarP' datatype='real'>155097738305.5032</statistic>
                <statistic aggregation='Count' datatype='integer'>5100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>835296303670438.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms), low bound</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms), low bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms), low bound</remote-alias>
              <ordinal>35</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>585</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>235411659.71000007</statistic>
                <statistic aggregation='Avg' datatype='real'>46159.148962745108</statistic>
                <statistic aggregation='Min' datatype='real'>0.02</statistic>
                <statistic aggregation='Max' datatype='real'>4000000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>271191.75949363172</statistic>
                <statistic aggregation='StdevP' datatype='real'>271165.17076279729</statistic>
                <statistic aggregation='Var' datatype='real'>73544970417.251785</statistic>
                <statistic aggregation='VarP' datatype='real'>73530549834.817032</statistic>
                <statistic aggregation='Count' datatype='integer'>5100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>385872206025687.81</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated prevalence of TB (all forms)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Estimated prevalence of TB (all forms)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated prevalence of TB (all forms)</remote-alias>
              <ordinal>36</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>340701775.76999992</statistic>
                <statistic aggregation='Avg' datatype='real'>66543.31558007811</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4600000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>324948.75313300715</statistic>
                <statistic aggregation='StdevP' datatype='real'>324917.01830670628</statistic>
                <statistic aggregation='Var' datatype='real'>105591692162.69601</statistic>
                <statistic aggregation='VarP' datatype='real'>105571068785.3205</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>563195297964597.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estimated total population number</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Estimated total population number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estimated total population number</remote-alias>
              <ordinal>37</ordinal>
              <family>DATA</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5114</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>149282363468.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29156711.614843749</statistic>
                <statistic aggregation='Min' datatype='integer'>1129</statistic>
                <statistic aggregation='Max' datatype='integer'>1385566537</statistic>
                <statistic aggregation='Stdev' datatype='real'>118372539.24008</statistic>
                <statistic aggregation='StdevP' datatype='real'>118360978.85729545</statistic>
                <statistic aggregation='Var' datatype='real'>14012058046144280.0</statistic>
                <statistic aggregation='VarP' datatype='real'>14009321316057142.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7.6080307959031333e+19</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO 2-character country/territory code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO 2-character country/territory code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO 2-character country/territory code</remote-alias>
              <ordinal>38</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AD&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZW&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO 3-character country/territory code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO 3-character country/territory code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO 3-character country/territory code</remote-alias>
              <ordinal>39</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO numeric country/territory code</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ISO numeric country/territory code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO numeric country/territory code</remote-alias>
              <ordinal>40</ordinal>
              <family>DATA</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2219912.0</statistic>
                <statistic aggregation='Avg' datatype='real'>433.57656250000002</statistic>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>894</statistic>
                <statistic aggregation='Stdev' datatype='real'>255.11601763721021</statistic>
                <statistic aggregation='StdevP' datatype='real'>255.09110274700603</statistic>
                <statistic aggregation='Var' datatype='real'>65084.182455069349</statistic>
                <statistic aggregation='VarP' datatype='real'>65071.470700683596</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1295667744.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Method to derive TBHIV estimates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Method to derive TBHIV estimates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Method to derive TBHIV estimates</remote-alias>
              <ordinal>41</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Method to derive incidence estimates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Method to derive incidence estimates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Method to derive incidence estimates</remote-alias>
              <ordinal>42</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Capture-recapture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Trends ARI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2987</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Method to derive mortality estimates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Method to derive mortality estimates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Method to derive mortality estimates</remote-alias>
              <ordinal>43</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Indirect&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VR imputed&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Method to derive prevalence estimates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Method to derive prevalence estimates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Method to derive prevalence estimates</remote-alias>
              <ordinal>44</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;NTP&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;survey imputed&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>45</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5120.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>46</ordinal>
              <family>DATA</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AFR&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WPR&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>47</ordinal>
              <family>DATA</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1990-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='Median' datatype='date'>#2002-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year (copy)</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year (copy)</remote-alias>
              <ordinal>47</ordinal>
              <family>DATA</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1990-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='Median' datatype='date'>#2002-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>48</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>91354.170685999867</statistic>
                <statistic aggregation='Avg' datatype='real'>17.84261146210935</statistic>
                <statistic aggregation='Min' datatype='real'>-40.900556999999999</statistic>
                <statistic aggregation='Max' datatype='real'>71.706935999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>23.805665255432544</statistic>
                <statistic aggregation='StdevP' datatype='real'>23.803340369909598</statistic>
                <statistic aggregation='Var' datatype='real'>566.70969825370821</statistic>
                <statistic aggregation='VarP' datatype='real'>566.59901276576807</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4530983.9183542477</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>49</ordinal>
              <family>DATA</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>67342.793967000107</statistic>
                <statistic aggregation='Avg' datatype='real'>13.152889446679708</statistic>
                <statistic aggregation='Min' datatype='real'>-177.15609699999999</statistic>
                <statistic aggregation='Max' datatype='real'>179.414413</statistic>
                <statistic aggregation='Stdev' datatype='real'>75.257660661848874</statistic>
                <statistic aggregation='StdevP' datatype='real'>75.250310922033322</statistic>
                <statistic aggregation='Var' datatype='real'>5663.7154882939958</statistic>
                <statistic aggregation='VarP' datatype='real'>5662.609293862688</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29878311.908655446</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year: 5 YEAR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year: 5 YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year: 5 YEAR</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00 - 04&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;95 - 99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5120</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;10-13&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.467742' group-percentage='0.0410557' measure-ordering='alphabetic' measure-percentage='0.414956' parameter-percentage='0.0762463' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country or territory name:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#21ad7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#24adc2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#2eb7bf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#2eb9a6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#36c0bb'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#3ba24d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and Gaza Strip&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4fa138'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#6577bd'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The Former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#7b73c0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#926ec3'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#a0b627'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#aa6cc1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia &amp; Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#c2bc21'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7bb21'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d86abc'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ea3648'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#eb571d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f13a5c'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f37316'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#f377af'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f64a73'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#f88a15'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fd76a3'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMR&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;WPR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1821424610435256328:nk]' type='palette'>
            <map to='#00a78e'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
            <map to='#414141'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#aa0061'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
          <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
        </column>
        <column caption='Ratio' datatype='integer' name='[Param1 (copy)]' param-domain-type='range' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='%YEAR_OVER_YEAR_CHANGE'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Avg' name='[pcdf:avg:Calculation_716072376834543616:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' ordering-field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' included-values='in-range'>
            <min>#1990-01-01 00:00:00#</min>
            <max>#2013-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:avg:Calculation_716072376834543616:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:avg:Calculation_716072376834543616:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:avg:Calculation_716072376834543616:qk]</rows>
        <cols>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk] / [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Africa'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='America'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AMR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Eastern Medeteranian'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;EMR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Europe'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;EUR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AMR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk] / [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk])</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[pcdf:sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' ordering-field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='140' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='0.29585635662078857' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='46' />
                <format attr='maxheight' value='46' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk] * [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk])</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[rank:sum:Calculation_716072376834543616:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[rank:sum:Calculation_716072376834543616:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Serbia &amp; Montenegro&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;West Bank and Gaza Strip&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;The Former Yugoslav Republic of Macedonia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' direction='ASC'>
            <dictionary>
              <bucket>2013</bucket>
              <bucket>2012</bucket>
              <bucket>2011</bucket>
              <bucket>2010</bucket>
              <bucket>2009</bucket>
              <bucket>2008</bucket>
              <bucket>2007</bucket>
              <bucket>2006</bucket>
              <bucket>2005</bucket>
              <bucket>2004</bucket>
              <bucket>1993</bucket>
              <bucket>2003</bucket>
              <bucket>1992</bucket>
              <bucket>1994</bucket>
              <bucket>1991</bucket>
              <bucket>1995</bucket>
              <bucket>2002</bucket>
              <bucket>2001</bucket>
              <bucket>1990</bucket>
              <bucket>1996</bucket>
              <bucket>2000</bucket>
              <bucket>1998</bucket>
              <bucket>1999</bucket>
              <bucket>1997</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk:1]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk:4]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='204' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</rows>
        <cols>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[:Measure Names] / [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]' field-type='quantitative' max='29430187.648263425' min='-28490734.905111741' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]' field-type='quantitative' max='19114870.288110219' min='-9845590.9885773566' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <text column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'>&lt;</run>
                <run bold='true' fontsize='15'>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</run>
                <run bold='true' fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='137' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;SEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' included-values='in-range'>
            <min>#1990-01-01 00:00:00#</min>
            <max>#2013-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk] / [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk])</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Avg' name='[avg:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;SEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' included-values='in-range'>
            <min>#1990-01-01 00:00:00#</min>
            <max>#2013-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]' />
              <text column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</rows>
        <cols>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk] / [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated number of incident cases (all forms)]' derivation='Sum' name='[pcto:sum:Estimated number of incident cases (all forms):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Estimated number of incident cases (all forms)]' derivation='Sum' name='[sum:Estimated number of incident cases (all forms):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='DESC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Estimated number of incident cases (all forms):qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcto:sum:Estimated number of incident cases (all forms):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</rows>
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Avg' name='[avg:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' included-values='in-range'>
            <min>#1990-01-01 00:00:00#</min>
            <max>#2013-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok] * [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='ROUND LATTITUDE' datatype='real' name='[Calculation_1821424610424832000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([latitude])' />
            </column>
            <column caption='ROUND LONGITUDE' datatype='real' name='[Calculation_1821424610424938497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([longitude])' />
            </column>
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1821424610424832000]' derivation='Sum' name='[sum:Calculation_1821424610424832000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1821424610424938497]' derivation='Sum' name='[sum:Calculation_1821424610424938497:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='square' />
                <format attr='size' value='2.022099494934082' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_1821424610424832000:qk]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_1821424610424938497:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SouthEastAsia'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;SEA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Top 10 Contries]' derivation='InOut' name='[io:Top 10 Contries:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[io:Top 10 Contries:nk]'>
            <groupfilter function='member' level='[io:Top 10 Contries:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='DESC' using='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AFR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[io:Top 10 Contries:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='95' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Western Pacific'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column-instance column='[Country or territory name]' derivation='Attribute' name='[attr:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;WPR&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[attr:Country or territory name:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' />
              <lod column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' />
              <geometry column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='sparklines'>
      <table>
        <view>
          <datasources>
            <datasource caption='DATA (hackathon)' name='federated.0aqvomm1r0ry4215pt6ck0gohqxd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Param1' datatype='string' name='[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;'>
              <calculation class='tableau' formula='&quot;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aqvomm1r0ry4215pt6ck0gohqxd'>
            <column caption='High-Low Points' datatype='real' name='[Calculation_1821424610432409607]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF WINDOW_MAX(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) OR&#13;&#10; WINDOW_MIN(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616])&#13;&#10;       THEN SUM([Calculation_716072376834543616]) &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Max-Min-Points' datatype='string' name='[Calculation_1821424610435256328]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF WINDOW_MAX(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) THEN &apos;HIGH&apos;&#13;&#10;ELSEIF WINDOW_MIN(SUM([Calculation_716072376834543616])) == SUM([Calculation_716072376834543616]) THEN &apos;LOW&apos;&#13;&#10;ELSE &apos;OTHER&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Value1' datatype='real' name='[Calculation_716072376834543616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]&#13;&#10; WHEN &apos;01 - Estimated total population number&apos; THEN [Estimated total population number]&#13;&#10; WHEN &apos;02 - Estimated prevalence of TB (all forms) per 100 000 population&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population]&#13;&#10; WHEN &apos;03 - Estimated prevalence of TB (all forms) per 100 000 population, low bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;04 - Estimated prevalence of TB (all forms) per 100 000 population, high bound&apos; THEN [Estimated prevalence of TB (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;05 - Estimated prevalence of TB (all forms)&apos; THEN [Estimated prevalence of TB (all forms)]&#13;&#10; WHEN &apos;06 - Estimated prevalence of TB (all forms), low bound&apos; THEN [Estimated prevalence of TB (all forms), low bound]&#13;&#10; WHEN &apos;07 - Estimated prevalence of TB (all forms), high bound&apos; THEN [Estimated prevalence of TB (all forms), high bound]&#13;&#10; WHEN &apos;09 - Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]&#13;&#10; WHEN &apos;10 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]&#13;&#10; WHEN &apos;11 - Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]&#13;&#10; WHEN &apos;12 - Estimated number of deaths from TB (all forms, excluding HIV)&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV)]&#13;&#10; WHEN &apos;13 - Estimated number of deaths from TB (all forms, excluding HIV), low bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), low bound]&#13;&#10; WHEN &apos;14 - Estimated number of deaths from TB (all forms, excluding HIV), high bound&apos; THEN [Estimated number of deaths from TB (all forms, excluding HIV), high bound]&#13;&#10; WHEN &apos;15 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population]&#13;&#10; WHEN &apos;16 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]&#13;&#10; WHEN &apos;17 - Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound&apos; THEN [Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]&#13;&#10; WHEN &apos;18 - Estimated number of deaths from TB in people who are HIV-positive&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive]&#13;&#10; WHEN &apos;19 - Estimated number of deaths from TB in people who are HIV-positive, low bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, low bound]&#13;&#10; WHEN &apos;20 - Estimated number of deaths from TB in people who are HIV-positive, high bound&apos; THEN [Estimated number of deaths from TB in people who are HIV-positive, high bound]&#13;&#10; WHEN &apos;22 - Estimated incidence (all forms) per 100 000 population&apos; THEN [Estimated incidence (all forms) per 100 000 population]&#13;&#10; WHEN &apos;23 - Estimated incidence (all forms) per 100 000 population, low bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, low bound]&#13;&#10; WHEN &apos;24 - Estimated incidence (all forms) per 100 000 population, high bound&apos; THEN [Estimated incidence (all forms) per 100 000 population, high bound]&#13;&#10; WHEN &apos;25 - Estimated number of incident cases (all forms)&apos; THEN [Estimated number of incident cases (all forms)]&#13;&#10; WHEN &apos;26 - Estimated number of incident cases (all forms), low bound&apos; THEN [Estimated number of incident cases (all forms), low bound]&#13;&#10; WHEN &apos;27 - Estimated number of incident cases (all forms), high bound&apos; THEN [Estimated number of incident cases (all forms), high bound]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent)&apos; THEN [Estimated HIV in incident TB (percent)]&#13;&#10; WHEN &apos;29 - Estimated HIV in incident TB (percent), low bound&apos; THEN [Estimated HIV in incident TB (percent), low bound]&#13;&#10; WHEN &apos;30 - Estimated HIV in incident TB (percent), high bound&apos; THEN [Estimated HIV in incident TB (percent), high bound]&#13;&#10; WHEN &apos;31 - Estimated incidence of TB cases who are HIV-positive per 100 000 population&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population]&#13;&#10; WHEN &apos;32 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]&#13;&#10; WHEN &apos;30 - Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]&#13;&#10; WHEN &apos;33 - Estimated incidence of TB cases who are HIV-positive&apos; THEN [Estimated incidence of TB cases who are HIV-positive]&#13;&#10; WHEN &apos;34 - Estimated incidence of TB cases who are HIV-positive, low bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, low bound]&#13;&#10; WHEN &apos;35 - Estimated incidence of TB cases who are HIV-positive, high bound&apos; THEN [Estimated incidence of TB cases who are HIV-positive, high bound]&#13;&#10; WHEN &apos;31 - Case detection rate (all forms), percent&apos; THEN [Case detection rate (all forms), percent]&#13;&#10; WHEN &apos;37 - Case detection rate (all forms), percent, low bound&apos; THEN [Case detection rate (all forms), percent, low bound]&#13;&#10; WHEN &apos;38 - Case detection rate (all forms), percent, high bound&apos; THEN [Case detection rate (all forms), percent, high bound]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Case detection rate (all forms), percent, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Case detection rate (all forms), percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or territory name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated HIV in incident TB (percent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated incidence of TB cases who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases (all forms, excluding HIV), per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated mortality of TB cases who are HIV-positive, per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB (all forms, excluding HIV)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of deaths from TB in people who are HIV-positive]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated number of incident cases (all forms)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population, low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms) per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), high bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms), low bound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated prevalence of TB (all forms)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Estimated total population number]' role='measure' type='quantitative' />
            <column aggregate-role-from='[Country or territory name]' datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFR&quot;' value='Africa' />
                <alias key='&quot;AMR&quot;' value='Americas' />
                <alias key='&quot;EMR&quot;' value='Easter Mediterranean Region' />
                <alias key='&quot;EUR&quot;' value='Europe' />
                <alias key='&quot;SEA&quot;' value='South East Asia' />
                <alias key='&quot;WPR&quot;' value='Western Pacific Region' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country or territory name]' derivation='None' name='[none:Country or territory name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_716072376834543616]' derivation='Sum' name='[sum:Calculation_716072376834543616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1821424610432409607]' derivation='User' name='[usr:Calculation_1821424610432409607:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1821424610435256328]' derivation='User' name='[usr:Calculation_1821424610435256328:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Action (Region)]'>
            <groupfilter function='member' level='[Region]' member='&quot;AFR&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</column>
            <column>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610432409607:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610432409607:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' value='9' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='212' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]' value='5' />
            <format attr='font-family' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='Open Sans' />
            <format attr='font-size' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' value='6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.29585635662078857' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='216' />
                <format attr='maxwidth' value='216' />
                <format attr='minheight' value='21' />
                <format attr='maxheight' value='21' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='46' />
                <format attr='maxheight' value='46' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610432409607:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#7d3e98' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='46' />
                <format attr='maxheight' value='46' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk] * ([federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk] + [federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610432409607:qk]))</rows>
        <cols>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='20' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' param='horz' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
                  <zone h='77125' id='22' type='layout-basic' w='99600' x='0' y='22875'>
                    <zone h='77125' id='10' param='horz' type='layout-flow' w='56100' x='0' y='22875'>
                      <zone h='77125' id='12' name='sparklines' show-title='false' w='56100' x='0' y='22875'>
                        <layout-cache cell-count-w='24' has-max-size-h='true' maxheight='1028' minheight='1028' non-cell-size-w='212' type-h='scalable' type-w='cell' />
                      </zone>
                    </zone>
                    <zone h='77125' id='23' param='horz' type='layout-flow' w='43500' x='56100' y='22875'>
                      <zone fixed-size='372' h='77125' id='21' is-fixed='true' type='empty' w='43500' x='56100' y='22875' />
                    </zone>
                  </zone>
                  <zone h='22875' id='17' mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='paramctrl' w='64200' x='35400' y='0' />
                  <zone h='22875' id='18' name='Sheet 2' show-title='false' w='35400' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='10625' id='16' name='sparklines' pane-specification-id='1' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]' type='color' w='14000' x='80400' y='10125' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[sum:Calculation_716072376834543616:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[qr:Year:ok]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[qr:Year:ok]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Year: 5 YEAR]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[qr:Year:ok]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='%YEAR_OVER_YEAR_CHANGE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Year: 5 YEAR]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[qr:Year:ok]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Year: 5 YEAR]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[avg:Calculation_716072376834543616:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[qr:Year:ok]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[tyr:Year:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Africa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='America'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Eastern Medeteranian'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Europe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SouthEastAsia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Western Pacific'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[pcdf:sum:Calculation_716072376834543616:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[:Measure Names]</field>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
                  <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
                  <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[:Measure Names]</field>
                  <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mauritania&quot;</value>
                <value>1996</value>
                <value>&quot;[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk:1]&quot;</value>
                <value>7.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[rank:sum:Calculation_716072376834543616:qk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='sparklines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[usr:Calculation_1821424610435256328:nk]</field>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]</field>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Geometry (generated)]</field>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Latitude (generated)]</field>
                    <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;AFR&quot;</value>
                  <value>&quot;MULTIPOLYGON (((57.61570 -20.49780, 57.59830 -20.50450, 57.59160 -20.50280, 57.57670 -20.51460, 57.56900 -20.51730, 57.55810 -20.51730, 57.55580 -20.52040, 57.54580 -20.51960, 57.53680 -20.52460, 57.51560 -20.52860, 57.50630 -20.52340, 57.49910 -20.52540, 57.49070 -20.51960, 57.47840 -20.52230, 57.46750 -20.52230, 57.44090 -20.50550, 57.43330 -20.50450, 57.43200 -20.50930, 57.42320 -20.51460, 57.40510 -20.51540, 57.39560 -20.50970, 57.38830 -20.50870, 57.38250 -20.50280, 57.37160 -20.50050, 57.36740 -20.49610, 57.35980 -20.49380, 57.35980 -20.48880, 57.35440 -20.49190, 57.34180 -20.49050, 57.34080 -20.48190, 57.33290 -20.47760, 57.32590 -20.46290, 57.30730 -20.46290, 57.30240 -20.47120, 57.29640 -20.47120, 57.29540 -20.46670, 57.29800 -20.45830, 57.30470 -20.44600, 57.30700 -20.43840, 57.31030 -20.44010, 57.30910 -20.44540, 57.33180 -20.44630, 57.34050 -20.43740, 57.35370 -20.41660, 57.35550 -20.40830, 57.35470 -20.39930, 57.36170 -20.39790, 57.36540 -20.39160, 57.35930 -20.38640, 57.35080 -20.38700, 57.34640 -20.38400, 57.34550 -20.37670, 57.35870 -20.36940, 57.35670 -20.36380, 57.35170 -20.36380, 57.34780 -20.35820, 57.35050 -20.34090, 57.35440 -20.33530, 57.36170 -20.33200, 57.36670 -20.32700, 57.35370 -20.31930, 57.34950 -20.29920, 57.34950 -20.29010, 57.35870 -20.27430, 57.36140 -20.26660, 57.36630 -20.26170, 57.36960 -20.25400, 57.37230 -20.23080, 57.38070 -20.21880, 57.38860 -20.21920, 57.39030 -20.20590, 57.38800 -20.20330, 57.40010 -20.19130, 57.40650 -20.18960, 57.42010 -20.17540, 57.43080 -20.17460, 57.44990 -20.16700, 57.45430 -20.16700, 57.46460 -20.17170, 57.46290 -20.16580, 57.47080 -20.15700, 57.47450 -20.15670, 57.47750 -20.16370, 57.48920 -20.16050, 57.47720 -20.15170, 57.48640 -20.15080, 57.49150 -20.14460, 57.48870 -20.14080, 57.48280 -20.13760, 57.48280 -20.12860, 57.48720 -20.11830, 57.49240 -20.11300, 57.50440 -20.10680, 57.49540 -20.09830, 57.49540 -20.09340, 57.50300 -20.08750, 57.49870 -20.08510, 57.49770 -20.07920, 57.50630 -20.06750, 57.50860 -20.05340, 57.51160 -20.04960, 57.52000 -20.04790, 57.52970 -20.04170, 57.53210 -20.03080, 57.54290 -20.02080, 57.54480 -20.00760, 57.54120 -20.00320, 57.54320 -19.99790, 57.54910 -20.00120, 57.55780 -20.00180, 57.55470 -20.01180, 57.55580 -20.01710, 57.56670 -20.01790, 57.57040 -20.01580, 57.56470 -20.00990, 57.56970 -20.00000, 57.58170 -19.99300, 57.58370 -19.98690, 57.59070 -19.98390, 57.59830 -19.98390, 57.60250 -19.98030, 57.61420 -19.98360, 57.62420 -19.98300, 57.62840 -19.99030, 57.63600 -19.99720, 57.64410 -19.99980, 57.64670 -19.99530, 57.65470 -19.99820, 57.64940 -20.00490, 57.65500 -20.00880, 57.67020 -20.01180, 57.66960 -20.03340, 57.67290 -20.04500, 57.67050 -20.04670, 57.66960 -20.05990, 57.67690 -20.06250, 57.67690 -20.07330, 57.67990 -20.07720, 57.69840 -20.08810, 57.69280 -20.09510, 57.69750 -20.10130, 57.70980 -20.10540, 57.71740 -20.10540, 57.73620 -20.11410, 57.74290 -20.12670, 57.74030 -20.13420, 57.74030 -20.14260, 57.73560 -20.14550, 57.73060 -20.14380, 57.72040 -20.15250, 57.72750 -20.15450, 57.73530 -20.15080, 57.73720 -20.15840, 57.72950 -20.16340, 57.73520 -20.17040, 57.74320 -20.16970, 57.74320 -20.16140, 57.75650 -20.16870, 57.75710 -20.17740, 57.76210 -20.18430, 57.76040 -20.19420, 57.76680 -20.19800, 57.77870 -20.20920, 57.77870 -20.21590, 57.79060 -20.22680, 57.79290 -20.23580, 57.79000 -20.24030, 57.77500 -20.24200, 57.77310 -20.24700, 57.78080 -20.24800, 57.78560 -20.25590, 57.78110 -20.26090, 57.78470 -20.27080, 57.77700 -20.28250, 57.78110 -20.29340, 57.77410 -20.29720, 57.76710 -20.29250, 57.76120 -20.30100, 57.76880 -20.30660, 57.76880 -20.31690, 57.75880 -20.32240, 57.75740 -20.33300, 57.76610 -20.33830, 57.76500 -20.34120, 57.75180 -20.34030, 57.75350 -20.34490, 57.75090 -20.35380, 57.74750 -20.35520, 57.73420 -20.35520, 57.73300 -20.36180, 57.72630 -20.37080, 57.71660 -20.37870, 57.70140 -20.37760, 57.69480 -20.37200, 57.68910 -20.37200, 57.69050 -20.38670, 57.68880 -20.39660, 57.68490 -20.39960, 57.68690 -20.40430, 57.69640 -20.40430, 57.69980 -20.42120, 57.70730 -20.41920, 57.71460 -20.42920, 57.71460 -20.43680, 57.70810 -20.44680, 57.68750 -20.45530, 57.67880 -20.46260, 57.67260 -20.47200, 57.66530 -20.47490, 57.66790 -20.47850, 57.64140 -20.49050, 57.63830 -20.49380, 57.62100 -20.49780, 57.61570 -20.49780)), ((63.46840 -19.66980, 63.49150 -19.67610, 63.49650 -19.68210, 63.50120 -19.68320, 63.49620 -19.69840, 63.50210 -19.70670, 63.50040 -19.71430, 63.47290 -19.73420, 63.46760 -19.73950, 63.45570 -19.73620, 63.44900 -19.74220, 63.43580 -19.73950, 63.42480 -19.74250, 63.41820 -19.74120, 63.39600 -19.74540, 63.39920 -19.76040, 63.37910 -19.76130, 63.38240 -19.76890, 63.37570 -19.76970, 63.37340 -19.76440, 63.35920 -19.76130, 63.35580 -19.75880, 63.35220 -19.75100, 63.35360 -19.74340, 63.34400 -19.74310, 63.34260 -19.74810, 63.33490 -19.74540, 63.32960 -19.73750, 63.33760 -19.73450, 63.33870 -19.72830, 63.33370 -19.71990, 63.33760 -19.71460, 63.34370 -19.71160, 63.35840 -19.70960, 63.36250 -19.71460, 63.36980 -19.70370, 63.37650 -19.70790, 63.37710 -19.70000, 63.38330 -19.69470, 63.38740 -19.68550, 63.39210 -19.68580, 63.39740 -19.68110, 63.40330 -19.68050, 63.40830 -19.68970, 63.41210 -19.68580, 63.41030 -19.68000, 63.43180 -19.67120, 63.44170 -19.66450, 63.45760 -19.66380, 63.46840 -19.66980)), ((56.68770 -10.45080, 56.69270 -10.46100, 56.69130 -10.47100, 56.68670 -10.47540, 56.67480 -10.48030, 56.66980 -10.47890, 56.66520 -10.47160, 56.66610 -10.46240, 56.66280 -10.45250, 56.65750 -10.44950, 56.64790 -10.44020, 56.64490 -10.43220, 56.64990 -10.43220, 56.65220 -10.43640, 56.66080 -10.43880, 56.68570 -10.44870, 56.68770 -10.45080)), ((56.60370 -10.37420, 56.60940 -10.37910, 56.61360 -10.39100, 56.62330 -10.39470, 56.62770 -10.40440, 56.63470 -10.41090, 56.63700 -10.41760, 56.63330 -10.41960, 56.62670 -10.41390, 56.62240 -10.41290, 56.60630 -10.39670, 56.59870 -10.38680, 56.59620 -10.37910, 56.58550 -10.36820, 56.58220 -10.35920, 56.57220 -10.34600, 56.57290 -10.33100, 56.57580 -10.32640, 56.58080 -10.32870, 56.59450 -10.35660, 56.60210 -10.36750, 56.60370 -10.37420)), ((48.27300 -13.19880, 48.33170 -13.28170, 48.35380 -13.40900, 48.19250 -13.38900, 48.18300 -13.30170, 48.26230 -13.26730, 48.27300 -13.19880)), ((43.78870 -12.30700, 43.85900 -12.36830, 43.66360 -12.34290, 43.63290 -12.28770, 43.63140 -12.24710, 43.70430 -12.25590, 43.78870 -12.30700)), ((47.88940 -22.50400, 47.85600 -22.75150, 47.73100 -23.26590, 47.64850 -23.47410, 47.58790 -23.79850, 47.41510 -24.13810, 47.30510 -24.42710, 47.20120 -24.77490, 47.16510 -24.78760, 47.08970 -24.97010, 47.04910 -24.95910, 46.95760 -25.06200, 46.63500 -25.19950, 46.51480 -25.16490, 46.26060 -25.20740, 45.87350 -25.36480, 45.60370 -25.54350, 45.47880 -25.57960, 45.14010 -25.59710, 45.10630 -25.52790, 44.96210 -25.46850, 44.93860 -25.41940, 44.80690 -25.34020, 44.51770 -25.28950, 44.43250 -25.26950, 44.31910 -25.15450, 44.20010 -25.08180, 44.11160 -25.08010, 44.02680 -25.00100, 44.01950 -24.87090, 43.91880 -24.71590, 43.93510 -24.63570, 43.73650 -24.44340, 43.66820 -24.31840, 43.66070 -23.91290, 43.63380 -23.75160, 43.65900 -23.61270, 43.75920 -23.57100, 43.74970 -23.43450, 43.64210 -23.35760, 43.59230 -23.06670, 43.48500 -23.00420, 43.36940 -22.84300, 43.29150 -22.59540, 43.28770 -22.49150, 43.21980 -22.25040, 43.27630 -21.90620, 43.32730 -21.86990, 43.34790 -21.74990, 43.46380 -21.64430, 43.45050 -21.45130, 43.52250 -21.31210, 43.57840 -21.27730, 43.71670 -21.29230, 43.83630 -21.14880, 43.88470 -20.90060, 43.97160 -20.74710, 44.04490 -20.71560, 44.11350 -20.48740, 44.24660 -20.37580, 44.27160 -20.29010, 44.48520 -19.98090, 44.45850 -19.86380, 44.39100 -19.78130, 44.41660 -19.65130, 44.46770 -19.62230, 44.46750 -19.45900, 44.28120 -19.17250, 44.31160 -19.16310, 44.27330 -19.16640, 44.23430 -18.97290, 44.26080 -18.85410, 44.23010 -18.74080, 44.11260 -18.49570, 44.03820 -18.39650, 44.05070 -18.29260, 44.01240 -18.03750, 44.03660 -17.80810, 43.96010 -17.72190, 43.92820 -17.51270, 43.99870 -17.34830, 44.09010 -17.24200, 44.09950 -17.16200, 44.21830 -17.03010, 44.34620 -16.79650, 44.42580 -16.71300, 44.42270 -16.58300, 44.47080 -16.50000, 44.40680 -16.34690, 44.45250 -16.18650, 44.76400 -16.20290, 44.83810 -16.25130, 44.88400 -16.21560, 45.02300 -16.11810, 45.11840 -16.01770, 45.26570 -15.93600, 45.28900 -16.13190, 45.41320 -16.03440, 45.42130 -15.98600, 45.56180 -15.95870, 45.63320 -15.89060, 45.67510 -15.78790, 45.88430 -15.76350, 46.00250 -15.81770, 46.09230 -15.71910, 46.23540 -15.72240, 46.23370 -15.82830, 46.30290 -15.82520, 46.36790 -15.73450, 46.29850 -15.71540, 46.40480 -15.57600, 46.86970 -15.22990, 46.94380 -15.19840, 46.96880 -15.28800, 47.06300 -15.35300, 46.95320 -15.50370, 47.14180 -15.45780, 47.17780 -15.41660, 47.14010 -15.29740, 47.09340 -15.31470, 47.04490 -15.18570, 47.19840 -15.05170, 47.21120 -14.99760, 47.31680 -14.91800, 47.27910 -14.86050, 47.44830 -14.67900, 47.49910 -14.71980, 47.51520 -14.82040, 47.40430 -14.97400, 47.39700 -15.10570, 47.48700 -15.08670, 47.62910 -14.79940, 47.73770 -14.61460, 47.68930 -14.44480, 47.79560 -14.21750, 47.92150 -14.25770, 48.00270 -14.20520, 48.04630 -14.11850, 48.00440 -13.99300, 47.89150 -13.89910, 47.85810 -13.76340, 47.89310 -13.59260, 48.06230 -13.52510, 48.15230 -13.63150, 48.16570 -13.74990, 48.22500 -13.81010, 48.30050 -13.79930, 48.32320 -13.56670, 48.49240 -13.51880, 48.58970 -13.45820, 48.76120 -13.40570, 48.80820 -13.25420, 48.80570 -13.13400, 48.93510 -12.89230, 48.94370 -12.81960, 48.85680 -12.66500, 48.80200 -12.50040, 48.85120 -12.41580, 48.95260 -12.37430, 49.08620 -12.26570, 49.13830 -12.27240, 49.19410 -12.14570, 49.14250 -12.10240, 49.24390 -11.95220, 49.29540 -11.97090, 49.35940 -12.10820, 49.25020 -12.29370, 49.34850 -12.30680, 49.44600 -12.38330, 49.50650 -12.35570, 49.56440 -12.46410, 49.54210 -12.64850, 49.60190 -12.66000, 49.64710 -12.80180, 49.70210 -12.74120, 49.78650 -12.80810, 49.80150 -12.89020, 49.92800 -13.04480, 49.91980 -13.20150, 50.01490 -13.35250, 50.02380 -13.51590, 50.13990 -13.79610, 50.13840 -14.01280, 50.16400 -14.05160, 50.14550 -14.24180, 50.20160 -14.30270, 50.17630 -14.46940, 50.22380 -14.76110, 50.33340 -15.02800, 50.43100 -15.14510, 50.48600 -15.26680, 50.43330 -15.52740, 50.29660 -15.87500, 50.16550 -15.99210, 50.14300 -15.94270, 50.02400 -15.88540, 50.01150 -15.83200, 49.95460 -15.73790, 49.96710 -15.63080, 49.89050 -15.56030, 49.90420 -15.44530, 49.85480 -15.42320, 49.67790 -15.47180, 49.61520 -15.55580, 49.63790 -15.69510, 49.73130 -15.90640, 49.67460 -16.03870, 49.70690 -16.12650, 49.85900 -16.22360, 49.81420 -16.35110, 49.86590 -16.45400, 49.83320 -16.57460, 49.72440 -16.75320, 49.80500 -16.85050, 49.58480 -16.91180, 49.57060 -16.97740, 49.44210 -17.25330, 49.41480 -17.38040, 49.47460 -17.48020, 49.47560 -17.57980, 49.52040 -17.69770, 49.43020 -17.97290, 49.33790 -18.40840, 49.29810 -18.47490, 48.99740 -19.23290, 48.98510 -19.33020, 48.86700 -19.61500, 48.81320 -19.85510, 48.82350 -19.90820, 48.58630 -20.41890, 48.50130 -20.71060, 48.44240 -20.99380, 48.34880 -21.23590, 48.31010 -21.40760, 48.13900 -21.87990, 47.95650 -22.29730, 47.88940 -22.50400)), ((44.47640 -12.08160, 44.52670 -12.21960, 44.52630 -12.32350, 44.50500 -12.35650, 44.46020 -12.33510, 44.37750 -12.25220, 44.22020 -12.17140, 44.29230 -12.16480, 44.33450 -12.17310, 44.37910 -12.16560, 44.40700 -12.12010, 44.41260 -12.09300, 44.45190 -12.07140, 44.47640 -12.08160)), ((34.61570 -12.01210, 34.61870 -12.01320, 34.62160 -12.01130, 34.62360 -12.01160, 34.62590 -12.01420, 34.62740 -12.01520, 34.62920 -12.01880, 34.62890 -12.02300, 34.62770 -12.02450, 34.62510 -12.02590, 34.62520 -12.02810, 34.62780 -12.02950, 34.62940 -12.03230, 34.62760 -12.03190, 34.62560 -12.03340, 34.62530 -12.03540, 34.62450 -12.03690, 34.62530 -12.03860, 34.62440 -12.04060, 34.62560 -12.04210, 34.62420 -12.04300, 34.62100 -12.04300, 34.62160 -12.04100, 34.62080 -12.03920, 34.62100 -12.03620, 34.61840 -12.03670, 34.61780 -12.03490, 34.61880 -12.03330, 34.61990 -12.03220, 34.61960 -12.02980, 34.62180 -12.02930, 34.62200 -12.02670, 34.61960 -12.02490, 34.61760 -12.02320, 34.61650 -12.02080, 34.61680 -12.01890, 34.61570 -12.01610, 34.61310 -12.01620, 34.61160 -12.01480, 34.60960 -12.01330, 34.60940 -12.01050, 34.60860 -12.00910, 34.61200 -12.00770, 34.61360 -12.00810, 34.61290 -12.00960, 34.61390 -12.01090, 34.61570 -12.01210)), ((43.46580 -11.90130, 43.44680 -11.91460, 43.35550 -11.85750, 43.30330 -11.84410, 43.22660 -11.75190, 43.25600 -11.43210, 43.28070 -11.39120, 43.29900 -11.37460, 43.34150 -11.36850, 43.39290 -11.40860, 43.37940 -11.61410, 43.44770 -11.75250, 43.49150 -11.86210, 43.46580 -11.90130)), ((34.73510 -12.04480, 34.74190 -12.04530, 34.74620 -12.03780, 34.74820 -12.04070, 34.74820 -12.04460, 34.74960 -12.04580, 34.75280 -12.04620, 34.75500 -12.04430, 34.75620 -12.04720, 34.75860 -12.04940, 34.75330 -12.05720, 34.75180 -12.05640, 34.75210 -12.05300, 34.74960 -12.05160, 34.74960 -12.05470, 34.74620 -12.05550, 34.74380 -12.05980, 34.74500 -12.06150, 34.74240 -12.06490, 34.74210 -12.06930, 34.73850 -12.06900, 34.73800 -12.07190, 34.73820 -12.07580, 34.74020 -12.07870, 34.74240 -12.07990, 34.74530 -12.07850, 34.74620 -12.08040, 34.74310 -12.08360, 34.74500 -12.09210, 34.74140 -12.09280, 34.73820 -12.09110, 34.73680 -12.09400, 34.73410 -12.09600, 34.73290 -12.09930, 34.73000 -12.09980, 34.72710 -12.09740, 34.71670 -12.09330, 34.71450 -12.08870, 34.70890 -12.08530, 34.71130 -12.08020, 34.71720 -12.07950, 34.71930 -12.06830, 34.72270 -12.06440, 34.72130 -12.06100, 34.72270 -12.05470, 34.72640 -12.04840, 34.72980 -12.03800, 34.72850 -12.02980, 34.73360 -12.03220, 34.73510 -12.04480)), ((39.81000 -7.96370, 39.80700 -7.98420, 39.78000 -8.02710, 39.76600 -8.03290, 39.75450 -8.02680, 39.75860 -7.99010, 39.77420 -7.97720, 39.78820 -7.98630, 39.81000 -7.96370)), ((39.61190 -7.97010, 39.58700 -7.94670, 39.61960 -7.92760, 39.65100 -7.91560, 39.68210 -7.88160, 39.71580 -7.81290, 39.79030 -7.79910, 39.86630 -7.68410, 39.89440 -7.64920, 39.90970 -7.64160, 39.89880 -7.75250, 39.83250 -7.91470, 39.77090 -7.90620, 39.73130 -7.94580, 39.74860 -7.97340, 39.68730 -7.99630, 39.63920 -7.99210, 39.61190 -7.97010)), ((39.39870 -6.02350, 39.42950 -6.06740, 39.42300 -6.13670, 39.45120 -6.19680, 39.50660 -6.12880, 39.53450 -6.19330, 39.53450 -6.28570, 39.57790 -6.38430, 39.55620 -6.44680, 39.52010 -6.47640, 39.48580 -6.47640, 39.30740 -6.23880, 39.27780 -6.26250, 39.29720 -6.30680, 39.29340 -6.32470, 39.26280 -6.30920, 39.24700 -6.27600, 39.21330 -6.25460, 39.18220 -6.16340, 39.21120 -6.13580, 39.20150 -6.03730, 39.18310 -5.99500, 39.18130 -5.91260, 39.27370 -5.86590, 39.29310 -5.78990, 39.28720 -5.74510, 39.30240 -5.72540, 39.32210 -5.74590, 39.35470 -5.80080, 39.35700 -5.93020, 39.39870 -6.02350)), ((39.85860 -5.18950, 39.85370 -5.24930, 39.80380 -5.39510, 39.76600 -5.44110, 39.64300 -5.43500, 39.63630 -5.39600, 39.66180 -5.29620, 39.72930 -5.24280, 39.71340 -5.22700, 39.68090 -5.22050, 39.68590 -5.21110, 39.72190 -5.20410, 39.74340 -5.17390, 39.71900 -5.17210, 39.67410 -5.04800, 39.67030 -4.93920, 39.67760 -4.86590, 39.74250 -4.91050, 39.79350 -4.95920, 39.86860 -4.90400, 39.87100 -4.99170, 39.86540 -5.02250, 39.85350 -5.02000, 39.83050 -5.05740, 39.86360 -5.11170, 39.85860 -5.18950)), ((55.52200 -4.76050, 55.52700 -4.76990, 55.52550 -4.78170, 55.52900 -4.78550, 55.53790 -4.79080, 55.54110 -4.80160, 55.53900 -4.80370, 55.53350 -4.80130, 55.52580 -4.80040, 55.52290 -4.80430, 55.50410 -4.79460, 55.50120 -4.78990, 55.50380 -4.78580, 55.49910 -4.78140, 55.49410 -4.78140, 55.49300 -4.77840, 55.49620 -4.77580, 55.49500 -4.77290, 55.48920 -4.77050, 55.48390 -4.76500, 55.48710 -4.75910, 55.48240 -4.75530, 55.47830 -4.75560, 55.47240 -4.76290, 55.46860 -4.76260, 55.46280 -4.75670, 55.46360 -4.74500, 55.46830 -4.73970, 55.47650 -4.74030, 55.48830 -4.73890, 55.49200 -4.73400, 55.48590 -4.72450, 55.48090 -4.72390, 55.47860 -4.72010, 55.48450 -4.71160, 55.48010 -4.70360, 55.47700 -4.70310, 55.47330 -4.70720, 55.47010 -4.70720, 55.45720 -4.69070, 55.45750 -4.68370, 55.45130 -4.67750, 55.44430 -4.67550, 55.43490 -4.67690, 55.42580 -4.67200, 55.41960 -4.66400, 55.41200 -4.66080, 55.40610 -4.65990, 55.40170 -4.66230, 55.39290 -4.65580, 55.39290 -4.65320, 55.39910 -4.65290, 55.39910 -4.64880, 55.38910 -4.64470, 55.38410 -4.64970, 55.37710 -4.64910, 55.36710 -4.64260, 55.36740 -4.63710, 55.38000 -4.64120, 55.38120 -4.63820, 55.37620 -4.63410, 55.37500 -4.62940, 55.38400 -4.62240, 55.39230 -4.61710, 55.39760 -4.61530, 55.41000 -4.61530, 55.42290 -4.61330, 55.42840 -4.61210, 55.43280 -4.60650, 55.43280 -4.59160, 55.43280 -4.58010, 55.43460 -4.57750, 55.43370 -4.56170, 55.43670 -4.55960, 55.44430 -4.56220, 55.45420 -4.56140, 55.46220 -4.56840, 55.46570 -4.57420, 55.46860 -4.58340, 55.45870 -4.59160, 55.45950 -4.59740, 55.46270 -4.60460, 55.45890 -4.60970, 55.45850 -4.61870, 55.46270 -4.61950, 55.46220 -4.62340, 55.46720 -4.62690, 55.46620 -4.62920, 55.46820 -4.63080, 55.47180 -4.63350, 55.47190 -4.63890, 55.48150 -4.64840, 55.49120 -4.65510, 55.49680 -4.65660, 55.49540 -4.66000, 55.49920 -4.66510, 55.50640 -4.66770, 55.51030 -4.66670, 55.51120 -4.66340, 55.51550 -4.66740, 55.53080 -4.67640, 55.53610 -4.67840, 55.53230 -4.68500, 55.52610 -4.69430, 55.52380 -4.70340, 55.52610 -4.71330, 55.52700 -4.72830, 55.53040 -4.73240, 55.51970 -4.74000, 55.51790 -4.74500, 55.51880 -4.75320, 55.52200 -4.76050)), ((55.50910 -4.60890, 55.50000 -4.61300, 55.49620 -4.61010, 55.49880 -4.60740, 55.49710 -4.60100, 55.50500 -4.59540, 55.51470 -4.60100, 55.51470 -4.60330, 55.50910 -4.60890)), ((55.85790 -4.36420, 55.85320 -4.36450, 55.84530 -4.37330, 55.84180 -4.38300, 55.83830 -4.38300, 55.83120 -4.37740, 55.82450 -4.36250, 55.82620 -4.35070, 55.83030 -4.34570, 55.83210 -4.33580, 55.83740 -4.33720, 55.84500 -4.34280, 55.84970 -4.34990, 55.85200 -4.35750, 55.85790 -4.36420)), ((55.76170 -4.35370, 55.75580 -4.36040, 55.74760 -4.35370, 55.73730 -4.34960, 55.72910 -4.34960, 55.72300 -4.34160, 55.72120 -4.33670, 55.72300 -4.33340, 55.71740 -4.32790, 55.70740 -4.32370, 55.69330 -4.32460, 55.68630 -4.31850, 55.68630 -4.31410, 55.68130 -4.30090, 55.67780 -4.29820, 55.68140 -4.29290, 55.68830 -4.29120, 55.69420 -4.29470, 55.70100 -4.29380, 55.70330 -4.28710, 55.71090 -4.29030, 55.72500 -4.31060, 55.73500 -4.30790, 55.73680 -4.30290, 55.74120 -4.30590, 55.74170 -4.31060, 55.75320 -4.31790, 55.76080 -4.31960, 55.76490 -4.31380, 55.77840 -4.31470, 55.78220 -4.31910, 55.78050 -4.32350, 55.78490 -4.32790, 55.79220 -4.33170, 55.78570 -4.33700, 55.77840 -4.33640, 55.77460 -4.33340, 55.77490 -4.32700, 55.76990 -4.32550, 55.76200 -4.33080, 55.75960 -4.33990, 55.76200 -4.34520, 55.76840 -4.34720, 55.77190 -4.35070, 55.76990 -4.35460, 55.76170 -4.35370)), ((55.72820 -4.27530, 55.73180 -4.27710, 55.74610 -4.27680, 55.74090 -4.28210, 55.72940 -4.28410, 55.73090 -4.29060, 55.72000 -4.28710, 55.71300 -4.28180, 55.71300 -4.27740, 55.71590 -4.27530, 55.72820 -4.27530)), ((5.60250 -1.41170, 5.61540 -1.40170, 5.63130 -1.41590, 5.63620 -1.43220, 5.63470 -1.45640, 5.62980 -1.46040, 5.61690 -1.45760, 5.61500 -1.46080, 5.61030 -1.44750, 5.61560 -1.44050, 5.60740 -1.42400, 5.60250 -1.41170)), ((6.66440 0.41570, 6.76090 0.29770, 6.65430 0.11240, 6.51720 0.08070, 6.46520 0.19240, 6.49180 0.31930, 6.60990 0.41190, 6.66440 0.41570)), ((32.85160 -2.02870, 32.86950 -1.96040, 32.90160 -1.90180, 32.94810 -1.89740, 32.92810 -1.93810, 32.95410 -1.96360, 32.99630 -1.98230, 33.03600 -1.96720, 33.09620 -1.95850, 33.11440 -1.98450, 33.10870 -2.04150, 33.14670 -2.05280, 33.12190 -2.06940, 33.17500 -2.12260, 33.14830 -2.17810, 33.09640 -2.12640, 33.06250 -2.13490, 32.98280 -2.09800, 32.91860 -2.08540, 32.88450 -2.07500, 32.83630 -2.04550, 32.85160 -2.02870)), ((-24.68810 14.95940, -24.69830 14.96410, -24.69440 14.97240, -24.67900 14.97400, -24.68810 14.95940)), ((-24.70590 14.80790, -24.71520 14.80780, -24.72540 14.81290, -24.73080 14.82780, -24.74760 14.83080, -24.75190 14.83860, -24.74350 14.84410, -24.74940 14.85720, -24.74550 14.86820, -24.73460 14.86880, -24.73630 14.88240, -24.72090 14.89040, -24.71430 14.88660, -24.69640 14.89090, -24.68220 14.88950, -24.66820 14.84740, -24.66700 14.83270, -24.67040 14.81770, -24.68690 14.81390, -24.69930 14.80290, -24.70590 14.80790)), ((-24.28530 14.95520, -24.28930 14.94880, -24.28180 14.93090, -24.27910 14.87770, -24.28620 14.86150, -24.29630 14.85660, -24.29700 14.85060, -24.31780 14.82830, -24.32750 14.82820, -24.35210 14.81420, -24.35700 14.81770, -24.36650 14.81190, -24.39990 14.81410, -24.41270 14.81780, -24.43410 14.83250, -24.44340 14.84200, -24.44760 14.85160, -24.46150 14.85400, -24.46540 14.86200, -24.48010 14.87590, -24.49660 14.88280, -24.49880 14.91030, -24.50410 14.93230, -24.49770 14.95230, -24.48790 14.96810, -24.48590 14.98000, -24.47420 14.98820, -24.47140 14.99420, -24.44770 15.00900, -24.43950 15.01640, -24.42170 15.02650, -24.40590 15.02830, -24.40070 15.03450, -24.39600 15.03900, -24.36870 15.04980, -24.33790 15.04540, -24.32950 15.03730, -24.31400 15.03270, -24.30890 15.02170, -24.29970 15.01270, -24.29850 14.99750, -24.29340 14.99450, -24.29170 14.98030, -24.28650 14.97160, -24.28530 14.95520)), ((-23.23250 15.18050, -23.22680 15.21240, -23.22740 15.21850, -23.21650 15.22400, -23.21540 15.24690, -23.21860 15.25520, -23.22930 15.26090, -23.22420 15.27330, -23.20260 15.29230, -23.19230 15.31310, -23.18240 15.31600, -23.18730 15.32610, -23.15950 15.32010, -23.15130 15.31330, -23.13710 15.30830, -23.12340 15.31600, -23.11530 15.30730, -23.10460 15.30720, -23.10570 15.28990, -23.09840 15.27280, -23.10530 15.26970, -23.10030 15.25830, -23.09430 15.25580, -23.09800 15.24200, -23.09110 15.23970, -23.09410 15.22110, -23.09330 15.20970, -23.08530 15.18650, -23.08980 15.18140, -23.08500 15.17160, -23.09870 15.16490, -23.10940 15.14370, -23.13240 15.13980, -23.15070 15.11830, -23.16400 15.11690, -23.18420 15.11920, -23.20540 15.12610, -23.21330 15.13870, -23.23010 15.14700, -23.23440 15.16260, -23.23250 15.18050)), ((-16.75530 13.88020, -16.74970 13.81850, -16.75910 13.80010, -16.75530 13.88020)), ((-23.45460 14.97620, -23.46090 14.96770, -23.45670 14.95860, -23.47040 14.94180, -23.47150 14.93200, -23.47930 14.92210, -23.47840 14.91220, -23.49830 14.90980, -23.50420 14.91700, -23.51550 14.90400, -23.53360 14.90260, -23.54610 14.90420, -23.55420 14.90330, -23.56520 14.90950, -23.58860 14.90710, -23.60860 14.91590, -23.62650 14.91140, -23.62890 14.91950, -23.64670 14.92500, -23.66070 14.93740, -23.67370 14.93930, -23.69400 14.95860, -23.70380 14.96530, -23.70670 14.97260, -23.71330 14.98100, -23.72690 14.98640, -23.71540 15.00310, -23.71510 15.01160, -23.72920 15.02650, -23.74280 15.03600, -23.74800 15.03130, -23.76330 15.05190, -23.76590 15.06030, -23.77830 15.06500, -23.77330 15.07470, -23.77820 15.09080, -23.77000 15.09650, -23.77080 15.10730, -23.76040 15.13700, -23.76290 15.15230, -23.76920 15.15980, -23.76430 15.16860, -23.75960 15.20080, -23.75360 15.20950, -23.75670 15.21620, -23.75300 15.22610, -23.74190 15.23560, -23.74090 15.24820, -23.75930 15.26960, -23.75270 15.28280, -23.77430 15.29940, -23.76930 15.30580, -23.76090 15.30520, -23.75980 15.31940, -23.75520 15.33250, -23.73670 15.33510, -23.72440 15.33190, -23.71400 15.33510, -23.70040 15.32860, -23.69560 15.33080, -23.68220 15.31190, -23.69180 15.28770, -23.68900 15.27330, -23.68110 15.25960, -23.67320 15.25420, -23.65230 15.24780, -23.64260 15.24470, -23.63120 15.23140, -23.61490 15.22790, -23.61010 15.21620, -23.59390 15.19640, -23.58220 15.17930, -23.57210 15.16950, -23.57480 15.16240, -23.56750 15.15670, -23.54670 15.15610, -23.52690 15.14470, -23.52680 15.13240, -23.50120 15.12430, -23.50180 15.11460, -23.48480 15.08320, -23.47480 15.06980, -23.47300 15.06190, -23.46340 15.05450, -23.44740 15.04770, -23.44090 15.02590, -23.43040 15.01610, -23.43670 15.00640, -23.43270 14.99780, -23.44030 14.98620, -23.45460 14.97620)), ((-16.72930 12.52160, -16.72960 12.55710, -16.67770 12.53920, -16.67820 12.51510, -16.70800 12.51040, -16.72930 12.52160)), ((-16.64650 13.79430, -16.62690 13.82050, -16.59600 13.82990, -16.60900 13.80370, -16.65360 13.77920, -16.64650 13.79430)), ((-24.91260 16.91940, -24.90170 16.90460, -24.91080 16.89650, -24.91360 16.88400, -24.90250 16.87140, -24.87880 16.86090, -24.86670 16.86450, -24.86080 16.85410, -24.86820 16.84810, -24.85960 16.83570, -24.86150 16.81810, -24.87380 16.81060, -24.89590 16.80730, -24.90770 16.80050, -24.92680 16.79480, -24.94390 16.79210, -24.95600 16.78660, -24.97040 16.78520, -24.97620 16.77730, -25.00100 16.78560, -25.00910 16.79300, -25.04440 16.80600, -25.05250 16.80390, -25.06030 16.81170, -25.06180 16.82320, -25.07390 16.82910, -25.08400 16.84360, -25.07090 16.85470, -25.07300 16.85840, -25.05580 16.86660, -25.05460 16.87650, -25.02590 16.88620, -25.02110 16.87790, -25.00650 16.87490, -24.99480 16.87870, -24.99230 16.89650, -24.99810 16.90090, -24.98970 16.91140, -24.97710 16.91050, -24.96960 16.91940, -24.96150 16.91100, -24.94980 16.90630, -24.93740 16.90870, -24.93220 16.92140, -24.92010 16.92280, -24.91260 16.91940)), ((-24.97090 17.07950, -24.99250 17.05330, -25.02470 17.03110, -25.03700 17.02660, -25.05010 17.01800, -25.08190 17.01580, -25.10510 17.00060, -25.13430 16.96490, -25.15690 16.95560, -25.16630 16.93580, -25.17930 16.92370, -25.19590 16.92120, -25.20690 16.90820, -25.21590 16.91910, -25.23220 16.91100, -25.24360 16.92140, -25.26100 16.92280, -25.29220 16.90790, -25.29720 16.90990, -25.31730 16.92680, -25.31790 16.94000, -25.30990 16.95110, -25.31130 16.96150, -25.31920 16.97370, -25.31980 17.00280, -25.32330 17.01160, -25.33350 17.02260, -25.34890 17.02420, -25.35640 17.04190, -25.35870 17.05510, -25.35260 17.07400, -25.34100 17.07780, -25.33640 17.09230, -25.31930 17.09690, -25.29760 17.10980, -25.28320 17.10680, -25.26370 17.12180, -25.24290 17.12320, -25.23250 17.12890, -25.22560 17.14290, -25.21650 17.14560, -25.21470 17.15110, -25.20380 17.15190, -25.19670 17.16050, -25.18240 17.15930, -25.17230 17.16250, -25.16340 17.17630, -25.14880 17.17680, -25.13860 17.18060, -25.12990 17.18980, -25.09650 17.20190, -25.08450 17.20000, -25.07840 17.19070, -25.05040 17.17950, -25.03640 17.18160, -25.01920 17.17520, -25.01650 17.17050, -25.01810 17.15370, -25.00520 17.12450, -24.99590 17.12180, -24.98360 17.11290, -24.97240 17.11120, -24.96730 17.08300, -24.97090 17.07950)), ((-22.74040 16.01560, -22.76040 16.00410, -22.76380 15.99900, -22.78440 15.98870, -22.79100 15.98070, -22.79460 15.96790, -22.81190 15.97490, -22.84060 15.97710, -22.87650 15.97370, -22.89670 15.99520, -22.92340 16.00200, -22.94850 16.01230, -22.96030 16.02470, -22.96590 16.04270, -22.96210 16.04840, -22.95900 16.06780, -22.95460 16.07490, -22.95850 16.08250, -22.94230 16.09840, -22.93460 16.09750, -22.91110 16.11820, -22.90660 16.12640, -22.90880 16.13550, -22.90560 16.14940, -22.91610 16.17430, -22.92200 16.17810, -22.91590 16.18960, -22.91330 16.20640, -22.92090 16.22240, -22.91440 16.23050, -22.89060 16.21120, -22.87270 16.20390, -22.86030 16.20230, -22.82720 16.20390, -22.79980 16.21230, -22.79150 16.22460, -22.77050 16.22070, -22.74420 16.20940, -22.71710 16.20610, -22.70500 16.19150, -22.70780 16.18220, -22.70310 16.17400, -22.67990 16.15020, -22.67340 16.14590, -22.67670 16.11590, -22.67060 16.10590, -22.66730 16.08880, -22.67300 16.07130, -22.67810 16.06700, -22.68240 16.04940, -22.70090 16.03440, -22.71570 16.02530, -22.74040 16.01560)), ((-24.75820 16.79770, -24.74620 16.79270, -24.74240 16.77700, -24.72920 16.76850, -24.72140 16.75210, -24.71160 16.74760, -24.69980 16.75490, -24.68830 16.75730, -24.67870 16.74990, -24.69140 16.73730, -24.70470 16.73350, -24.73760 16.73190, -24.74410 16.73740, -24.74900 16.74990, -24.77060 16.76360, -24.78470 16.76660, -24.78940 16.77960, -24.78400 16.78790, -24.78460 16.79640, -24.77590 16.80320, -24.75820 16.79770)), ((-24.31050 16.48550, -24.31550 16.47990, -24.32830 16.48390, -24.32450 16.50250, -24.34120 16.52710, -24.34890 16.53390, -24.35040 16.54440, -24.36010 16.55270, -24.35890 16.56950, -24.37180 16.58040, -24.39160 16.58260, -24.41750 16.60070, -24.42370 16.60770, -24.42250 16.64460, -24.40500 16.65630, -24.39620 16.65590, -24.38100 16.66920, -24.36490 16.66730, -24.34670 16.67830, -24.33910 16.67930, -24.33140 16.67110, -24.32330 16.66980, -24.30170 16.65610, -24.29920 16.64510, -24.28390 16.63820, -24.27780 16.62610, -24.26840 16.63580, -24.24320 16.63500, -24.22690 16.64610, -24.22120 16.64690, -24.20890 16.63510, -24.20350 16.64000, -24.18820 16.63880, -24.17700 16.63320, -24.16710 16.62000, -24.14600 16.60760, -24.12900 16.62010, -24.12160 16.61450, -24.10900 16.61940, -24.10520 16.61530, -24.06990 16.60810, -24.04600 16.59850, -24.04130 16.58530, -24.02250 16.58190, -24.01370 16.57690, -24.01140 16.56730, -24.01900 16.56030, -24.01720 16.55120, -24.03930 16.54730, -24.05410 16.55670, -24.06810 16.54790, -24.08840 16.55340, -24.10950 16.54980, -24.12290 16.56080, -24.14660 16.57410, -24.16190 16.57990, -24.17120 16.57980, -24.18050 16.58710, -24.20580 16.58610, -24.21960 16.59140, -24.23410 16.59200, -24.24610 16.57720, -24.26020 16.57840, -24.26950 16.56430, -24.27900 16.55850, -24.28260 16.54010, -24.28960 16.53310, -24.30570 16.50360, -24.31050 16.48550)), ((-24.57320 16.62440, -24.57870 16.60650, -24.59800 16.60830, -24.60290 16.62340, -24.57920 16.63240, -24.57320 16.62440)), ((-24.65670 16.64590, -24.67170 16.64780, -24.68410 16.66480, -24.67680 16.67220, -24.66510 16.66340, -24.65670 16.64590)), ((-22.93970 16.68870, -22.94920 16.69600, -22.96990 16.70040, -22.98050 16.69440, -22.98860 16.69960, -22.97910 16.71800, -22.98350 16.72030, -22.98700 16.73410, -22.97790 16.74780, -22.97800 16.75390, -22.98940 16.75870, -22.99140 16.78820, -22.99450 16.79410, -22.99440 16.81450, -22.98640 16.82310, -22.95950 16.83280, -22.95250 16.84470, -22.94700 16.84110, -22.93200 16.84290, -22.91820 16.85370, -22.91480 16.84390, -22.90530 16.84250, -22.88970 16.82920, -22.89710 16.81110, -22.90320 16.80600, -22.89350 16.79230, -22.88180 16.76970, -22.88390 16.76110, -22.89480 16.76100, -22.89450 16.73670, -22.89920 16.73430, -22.89120 16.71020, -22.88020 16.69670, -22.88150 16.68960, -22.87260 16.67100, -22.88710 16.65470, -22.88760 16.64320, -22.89860 16.63850, -22.89830 16.61670, -22.89170 16.60390, -22.89460 16.59520, -22.90860 16.59690, -22.91850 16.58670, -22.92830 16.59000, -22.92890 16.61700, -22.93430 16.63160, -22.94370 16.63900, -22.94870 16.65210, -22.93780 16.66300, -22.93640 16.67900, -22.93970 16.68870)), ((-16.39470 11.29990, -16.36370 11.29370, -16.38340 11.27900, -16.39470 11.29990)), ((-16.44840 11.31420, -16.40960 11.28760, -16.47710 11.27720, -16.47540 11.30980, -16.44840 11.31420)), ((-12.99920 7.58980, -12.96810 7.58760, -12.98370 7.56940, -12.99920 7.58980)), ((-13.02200 7.65770, -13.06280 7.61970, -13.06500 7.64220, -13.02200 7.65770)), ((-13.19980 8.13320, -13.22500 8.10020, -13.24390 8.10070, -13.19980 8.13320)), ((-13.22600 8.88690, -13.23840 8.90660, -13.22640 8.92310, -13.19680 8.90040, -13.22600 8.88690)), ((-13.76040 9.50740, -13.74130 9.46070, -13.76990 9.49930, -13.76040 9.50740)), ((-13.82790 9.45600, -13.84100 9.46760, -13.80320 9.51630, -13.79990 9.50570, -13.82790 9.45600)), ((-14.96930 10.86710, -14.96070 10.83130, -14.99320 10.83870, -14.93850 10.79350, -14.96210 10.76850, -15.01600 10.78070, -15.06820 10.84680, -15.07240 10.88740, -15.00760 10.94680, -14.95490 10.97490, -14.90570 10.93540, -14.90460 10.91680, -14.95150 10.85990, -14.96930 10.86710)), ((-14.89570 10.81510, -14.91710 10.81210, -14.93630 10.86100, -14.89510 10.91930, -14.88570 10.90150, -14.89820 10.89040, -14.89820 10.88130, -14.87820 10.84290, -14.89570 10.81510)), ((-14.87380 10.85540, -14.89760 10.88460, -14.88380 10.89900, -14.87040 10.89150, -14.87380 10.85540)), ((-14.88380 10.94600, -14.85820 10.93100, -14.85150 10.89850, -14.87620 10.90100, -14.88380 10.94600)), ((-15.24390 11.00890, -15.27180 11.02710, -15.26260 11.04100, -15.24390 11.00890)), ((-15.21610 10.99580, -15.23910 11.00410, -15.25920 11.03980, -15.23260 11.05990, -15.15240 11.07800, -15.13960 11.06520, -15.21610 10.99580)), ((-15.63930 11.02520, -15.64320 11.05440, -15.61650 11.05640, -15.61600 11.03880, -15.63930 11.02520)), ((-16.13780 11.03560, -16.14990 11.02150, -16.17920 11.02800, -16.22960 11.06770, -16.24780 11.09170, -16.23310 11.11050, -16.20710 11.10640, -16.17490 11.13490, -16.17210 11.16650, -16.12290 11.18120, -16.11670 11.20680, -16.08320 11.20300, -16.05360 11.18300, -16.06800 11.15670, -16.03950 11.11420, -16.04020 11.06780, -16.07520 11.02710, -16.13780 11.03560)), ((7.33740 1.62080, 7.36970 1.61500, 7.37780 1.67040, 7.37440 1.69120, 7.41240 1.69580, 7.44700 1.69460, 7.46550 1.68200, 7.42860 1.65660, 7.46200 1.63690, 7.43320 1.62190, 7.43320 1.58270, 7.41470 1.55960, 7.37320 1.57810, 7.35360 1.57120, 7.33970 1.59770, 7.33740 1.62080)), ((32.89230 -26.85650, 32.84150 -27.10910, 32.71470 -27.43010, 32.60040 -27.82220, 32.54840 -28.16610, 32.42910 -28.37170, 32.39490 -28.53410, 32.00910 -28.88050, 31.75790 -28.97060, 31.56240 -29.17620, 31.34040 -29.38300, 31.12720 -29.65330, 31.04600 -29.79670, 31.05990 -29.87920, 30.86200 -30.09360, 30.62470 -30.51240, 30.40390 -30.82830, 30.19330 -31.08590, 29.99530 -31.30930, 29.83670 -31.43240, 29.73520 -31.46540, 29.67170 -31.54400, 29.40270 -31.73310, 29.02330 -32.12010, 28.88500 -32.28000, 28.66670 -32.44240, 28.51060 -32.60360, 28.43450 -32.63150, 28.36720 -32.70890, 28.17690 -32.78630, 28.07920 -32.91320, 27.91420 -33.03250, 27.72900 -33.12130, 27.11220 -33.52490, 26.74170 -33.65300, 26.55770 -33.74820, 26.46760 -33.77230, 26.28620 -33.76090, 26.07680 -33.70630, 25.92960 -33.71010, 25.78870 -33.74310, 25.67580 -33.81040, 25.58320 -34.05020, 25.39410 -34.03120, 25.15430 -33.96260, 24.98930 -33.98040, 24.92200 -34.08070, 24.84340 -34.14160, 24.83450 -34.20500, 24.47410 -34.16060, 24.38150 -34.10220, 24.17460 -34.06540, 23.84600 -34.02740, 23.64670 -33.98040, 23.45130 -34.00450, 23.37520 -34.09840, 22.97550 -34.08450, 22.77240 -34.02740, 22.56430 -33.99560, 22.48440 -34.05150, 22.23950 -34.05650, 22.12780 -34.11240, 22.08980 -34.20880, 21.96920 -34.22280, 21.90320 -34.34330, 21.69640 -34.39540, 21.53520 -34.35600, 21.29030 -34.43720, 21.10250 -34.37760, 20.93370 -34.36620, 20.84870 -34.40170, 20.84750 -34.47400, 20.65330 -34.44870, 20.47560 -34.49180, 20.40840 -34.56160, 20.25490 -34.64030, 20.23450 -34.68980, 20.08860 -34.72910, 20.01250 -34.83060, 19.87290 -34.76590, 19.64580 -34.78110, 19.52390 -34.67070, 19.44780 -34.65550, 19.35390 -34.47910, 19.29170 -34.41570, 19.12420 -34.41690, 19.04300 -34.34080, 18.81840 -34.37380, 18.81210 -34.29760, 18.86410 -34.16310, 18.79810 -34.09330, 18.60780 -34.07690, 18.49610 -34.09970, 18.42630 -34.17960, 18.47710 -34.23170, 18.37930 -34.27100, 18.31970 -34.14920, 18.36790 -34.06290, 18.30960 -34.04260, 18.39710 -33.90050, 18.47070 -33.90680, 18.48720 -33.84590, 18.42250 -33.66190, 18.31080 -33.56800, 18.30070 -33.47540, 18.15860 -33.36370, 18.10650 -33.24060, 17.97070 -33.13780, 18.04180 -33.04770, 17.94540 -33.00590, 17.84770 -32.83200, 17.89460 -32.74190, 17.96820 -32.70640, 18.05450 -32.78380, 18.12810 -32.77740, 18.24740 -32.67850, 18.32350 -32.53510, 18.31460 -32.31940, 18.34250 -32.26610, 18.28040 -31.89550, 18.22330 -31.74450, 18.09760 -31.55930, 17.87810 -31.31940, 17.86290 -31.25720, 17.75760 -31.15190, 17.68270 -31.00350, 17.59510 -30.89940, 17.52280 -30.73440, 17.43270 -30.62020, 17.20180 -30.14060, 17.15480 -29.97560, 17.07490 -29.81190, 17.03430 -29.61650, 16.97080 -29.43760, 16.87690 -29.29160, 16.81220 -29.08730, 16.74750 -29.04290, 16.68910 -28.92620, 16.60280 -28.87540, 16.57110 -28.72820, 16.45560 -28.63430, 16.27290 -28.50360, 16.03430 -28.27140, 15.88210 -28.15850, 15.70310 -27.99100, 15.67400 -27.90090, 15.54580 -27.75500, 15.52170 -27.65220, 15.29830 -27.32860, 15.26030 -27.19150, 15.22090 -26.92760, 15.15500 -26.87300, 15.09280 -26.74490, 15.09150 -26.63950, 15.14860 -26.64340, 15.11940 -26.44920, 14.96710 -26.34390, 14.97730 -26.10280, 14.90880 -25.92640, 14.91130 -25.85910, 14.82880 -25.74490, 14.87960 -25.57240, 14.80980 -25.37570, 14.80090 -25.29570, 14.87710 -25.09020, 14.84530 -25.01780, 14.79330 -24.91250, 14.79710 -24.83890, 14.72600 -24.70440, 14.61560 -24.58770, 14.60300 -24.44170, 14.48490 -24.17650, 14.45960 -23.96210, 14.49760 -23.92530, 14.51410 -23.63090, 14.48240 -23.54080, 14.43930 -23.41770, 14.50400 -23.32510, 14.40880 -23.01040, 14.41390 -22.95960, 14.50020 -22.94690, 14.54080 -22.89740, 14.52940 -22.63860, 14.39230 -22.27940, 14.29210 -22.13860, 14.06490 -21.86830, 13.95200 -21.77440, 13.97740 -21.73380, 13.88090 -21.58790, 13.85680 -21.50410, 13.62840 -21.18940, 13.57760 -21.13740, 13.51550 -20.98510, 13.37970 -20.80110, 13.35560 -20.67170, 13.24010 -20.46360, 13.22870 -20.32400, 13.18940 -20.23900, 13.04470 -20.09300, 13.00790 -19.94970, 12.84170 -19.62860, 12.70720 -19.39510, 12.70210 -19.33930, 12.56120 -19.08420, 12.47110 -18.99160, 12.45460 -18.91290, 12.29600 -18.71240, 12.02450 -18.47890, 11.95340 -18.24930, 11.86330 -18.14390, 11.73260 -17.81020, 11.71610 -17.54880, 11.72500 -17.41680, 11.77190 -17.25690, 11.75290 -17.04120, 11.82900 -16.69100, 11.82780 -16.45120, 11.79100 -16.13650, 11.80870 -16.01720, 11.73260 -15.89030, 11.77570 -15.78620, 11.87090 -15.79260, 11.92800 -15.67580, 12.02060 -15.56920, 12.05870 -15.23040, 12.15640 -15.17840, 12.17420 -14.95630, 12.21480 -14.84340, 12.29220 -14.74700, 12.31500 -14.53250, 12.37090 -14.31170, 12.33410 -14.18480, 12.42670 -13.94370, 12.42800 -13.87270, 12.51550 -13.87900, 12.53580 -13.59860, 12.55490 -13.55420, 12.52820 -13.44760, 12.65390 -13.33840, 12.66530 -13.25600, 12.78200 -13.19380, 12.98120 -12.98060, 12.94190 -12.83340, 13.14240 -12.66460, 13.20200 -12.59360, 13.34290 -12.61260, 13.48370 -12.49460, 13.51550 -12.36900, 13.57640 -12.34740, 13.65760 -12.23450, 13.76160 -11.95400, 13.79840 -11.77510, 13.76670 -11.57970, 13.82640 -11.30940, 13.86320 -11.02130, 13.83020 -10.90710, 13.71720 -10.75610, 13.78320 -10.69010, 13.64490 -10.50740, 13.52820 -10.38810, 13.53320 -10.29680, 13.49140 -10.23840, 13.43930 -10.12290, 13.31240 -9.97830, 13.34420 -9.94910, 13.28580 -9.81460, 13.19570 -9.68640, 13.23760 -9.64450, 13.19320 -9.55570, 13.15380 -9.35140, 13.17670 -9.32480, 13.13350 -9.30450, 13.00030 -9.10010, 13.22360 -8.80580, 13.30610 -8.75500, 13.37210 -8.77280, 13.41400 -8.68270, 13.37080 -8.58500, 13.34420 -8.47330, 13.39750 -8.41490, 13.36830 -8.33120, 13.26420 -8.17380, 13.10310 -7.84900, 13.12590 -7.81340, 13.07010 -7.77920, 12.91020 -7.32740, 12.85430 -7.27160, 12.83150 -6.99750, 12.75280 -6.87190, 12.57640 -6.68410, 12.39500 -6.31860, 12.27320 -6.13970, 12.45840 -6.10040, 12.68050 -6.01150, 12.58410 -5.99630, 12.45210 -6.05850, 12.23000 -5.82120, 12.19830 -5.77040, 12.14750 -5.67910, 12.17930 -5.54710, 12.23000 -5.49250, 12.13740 -5.21460, 12.00540 -5.03190, 12.16660 -4.88470, 12.20590 -4.75910, 12.32650 -4.79330, 12.43180 -4.59790, 12.63100 -4.56110, 12.68560 -4.46850, 12.77440 -4.38470, 12.86450 -4.39110, 13.02060 -4.59790, 13.09670 -4.62330, 13.12590 -4.58650, 13.24650 -4.69560, 13.30230 -4.78190, 13.37330 -4.79840, 13.37460 -4.85680, 13.48760 -4.87070, 13.59410 -4.81360, 13.61700 -4.76420, 13.72870 -4.70960, 13.76290 -4.44440, 13.81870 -4.42280, 13.90500 -4.50910, 13.96850 -4.51160, 14.01800 -4.43420, 14.17790 -4.40000, 14.29080 -4.32510, 14.35810 -4.31370, 14.48110 -4.43680, 14.43170 -4.52050, 14.34920 -4.56370, 14.42910 -4.65500, 14.40120 -4.80600, 14.41260 -4.89360, 14.49000 -4.84790, 14.59150 -4.90370, 14.69050 -4.91770, 14.84410 -4.82510, 14.91260 -4.68170, 15.13590 -4.44950, 15.19430 -4.34790, 15.31360 -4.27940, 15.41510 -4.29590, 15.50390 -4.20070, 15.51410 -4.10680, 15.56100 -4.04720, 15.90240 -3.94950, 16.05840 -3.60940, 16.18660 -3.39500, 16.22210 -3.29600, 16.18410 -3.25030, 16.18030 -2.94190, 16.20690 -2.72620, 16.23610 -2.65640, 16.18410 -2.38230, 16.19170 -2.22500, 16.24240 -2.12220, 16.40610 -1.99150, 16.51910 -1.85450, 16.66750 -1.59050, 16.79570 -1.33040, 16.89720 -1.21360, 17.13070 -1.06390, 17.23730 -1.04740, 17.34130 -0.99030, 17.55330 -0.75940, 17.70050 -0.56770, 17.73980 -0.39770, 17.71570 -0.23270, 17.72460 -0.09570, 17.78670 0.14290, 17.85530 0.25960, 17.95420 0.36490, 17.95930 0.46640, 17.88570 0.57180, 17.89590 0.77480, 17.84510 0.91950, 17.85020 1.01210, 17.94160 1.16440, 17.97580 1.33820, 18.06850 1.52090, 18.08370 1.70370, 18.05830 1.80390, 18.09260 1.96250, 18.06720 2.02090, 18.09510 2.23790, 18.21180 2.39910, 18.24230 2.50690, 18.32990 2.58430, 18.42880 2.76830, 18.43900 2.88250, 18.53290 3.07030, 18.58490 3.09700, 18.64200 3.20860, 18.63570 3.47130, 18.59510 3.47640, 18.49100 3.65150, 18.40600 3.57790, 18.26510 3.58810, 18.24990 3.51450, 18.18900 3.48150, 18.12300 3.56650, 17.93270 3.59950, 17.85910 3.53350, 17.82860 3.62610, 17.73350 3.65150, 17.60660 3.64140, 17.47460 3.70350, 17.42000 3.67430, 17.34900 3.60460, 17.05840 3.54870, 16.86930 3.55380, 16.86040 3.51190, 16.75510 3.55760, 16.67260 3.54240, 16.59650 3.47770, 16.55840 3.25310, 16.50640 3.16040, 16.54440 3.06530, 16.49370 3.00430, 16.52030 2.84190, 16.45050 2.71120, 16.19170 2.22010, 16.08640 2.19220, 16.08380 2.04630, 16.05590 2.00190, 16.14730 1.76200, 16.11940 1.69610, 16.03180 1.65800, 16.03310 1.76200, 15.88710 1.77980, 15.76530 1.90920, 15.52550 1.95370, 15.49380 1.97520, 15.34530 1.91050, 15.25140 2.02600, 15.16260 2.03990, 15.10800 1.97780, 14.98740 2.03360, 14.93030 1.99680, 14.91510 2.06020, 14.80980 2.05770, 14.72990 2.12240, 14.65630 2.12750, 14.60680 2.19730, 14.42660 2.15540, 14.39740 2.18210, 14.25650 2.17190, 13.66140 2.17060, 13.29850 2.17060, 13.28830 2.04380, 13.16140 1.90160, 13.20080 1.80650, 13.13730 1.70240, 13.13220 1.59070, 13.25280 1.40550, 13.25790 1.31660, 13.18940 1.29250, 13.19190 1.22270, 13.31370 1.22530, 13.32260 1.26210, 13.43680 1.30010, 13.49520 1.26970, 13.73880 1.36990, 13.81370 1.42830, 13.99890 1.42070, 14.06620 1.38010, 14.18670 1.39530, 14.23620 1.36360, 14.30730 1.29380, 14.29590 1.23420, 14.39610 1.09330, 14.44560 0.96010, 14.49760 0.92830, 14.48880 0.82560, 14.35930 0.67200, 14.38470 0.63780, 14.23500 0.53620, 14.11950 0.55780, 14.05100 0.40680, 13.94180 0.31540, 13.88850 0.20250, 13.92790 0.12130, 13.92150 -0.09950, 13.90500 -0.22510, 14.01920 -0.23530, 14.16260 -0.33050, 14.17660 -0.43960, 14.25270 -0.43320, 14.40120 -0.47760, 14.46340 -0.55120, 14.49890 -0.68070, 14.41010 -0.90910, 14.48240 -1.28340, 14.45200 -1.36460, 14.50140 -1.42560, 14.47350 -1.55240, 14.37710 -1.60190, 14.45070 -1.69200, 14.39870 -1.87600, 14.36690 -1.89760, 14.25780 -1.98260, 14.25270 -2.10570, 14.15630 -2.19450, 14.21720 -2.28460, 14.10680 -2.46860, 13.92280 -2.46480, 13.86820 -2.42040, 13.91650 -2.35820, 13.81110 -2.15010, 13.74900 -2.12090, 13.64740 -2.21860, 13.64490 -2.28590, 13.48630 -2.43560, 13.38100 -2.42800, 13.19950 -2.35570, 13.13860 -2.37350, 13.02820 -2.30620, 13.02570 -2.23010, 12.88480 -2.09940, 12.84170 -1.93950, 12.74900 -1.87220, 12.57140 -1.85830, 12.52060 -1.90140, 12.45460 -1.86970, 12.47490 -2.01940, 12.52060 -2.08670, 12.53200 -2.21360, 12.49650 -2.26810, 12.52950 -2.32650, 12.49780 -2.42420, 12.17670 -2.42170, 12.09170 -2.43940, 11.99650 -2.34050, 11.82140 -2.38740, 11.77570 -2.45590, 11.65140 -2.42170, 11.63620 -2.52070, 11.70210 -2.66280, 11.64120 -2.69830, 11.61970 -2.79470, 12.06630 -2.96990, 12.01300 -3.13480, 11.94320 -3.20460, 12.00160 -3.24140, 12.04600 -3.35310, 11.87730 -3.57640, 11.94830 -3.62590, 11.86330 -3.74770, 11.69580 -3.67030, 11.63490 -3.57520, 11.52960 -3.51300, 11.45850 -3.58400, 11.33410 -3.61450, 11.24910 -3.71850, 11.25170 -3.81120, 11.20850 -3.97740, 11.01310 -3.82640, 11.00420 -3.73630, 10.95090 -3.66400, 10.70860 -3.45590, 10.66290 -3.33790, 10.53720 -3.25160, 10.47890 -3.16530, 10.37610 -3.08410, 10.30380 -2.97750, 10.08300 -2.84040, 9.86980 -2.66150, 9.63000 -2.41910, 9.58170 -2.34680, 9.54750 -2.20210, 9.28730 -1.92040, 9.23400 -1.64380, 9.19600 -1.57280, 9.01450 -1.34560, 9.02090 -1.28470, 8.91430 -1.05500, 8.79120 -0.87360, 8.69980 -0.66800, 8.79630 -0.72890, 8.79750 -0.79230, 8.85970 -0.80630, 8.89140 -0.72640, 9.01070 -0.64640, 9.14390 -0.60960, 9.27850 -0.42050, 9.30260 -0.27840, 9.32410 -0.05260, 9.35080 0.00460, 9.30380 0.29640, 9.49420 0.14920, 9.51320 0.17460, 9.74540 0.11490, 9.83680 0.14920, 9.53100 0.30780, 9.50690 0.28370, 9.38500 0.49440, 9.31020 0.51210, 9.31020 0.59210, 9.49670 0.66950, 9.52590 0.55910, 9.61600 0.52860, 9.61220 0.77100, 9.55130 0.93850, 9.58050 1.00830, 9.69720 1.06410, 9.58550 1.03240, 9.55250 1.11360, 9.47890 1.13390, 9.40920 1.09580, 9.34320 1.17580, 9.45990 1.32550, 9.45860 1.38900, 9.56780 1.49940, 9.61090 1.66430, 9.70100 1.75440, 9.81140 1.92950, 9.76570 2.09070, 9.79490 2.16300, 9.77710 2.32420, 9.83680 2.30900, 9.81900 2.48790, 9.84820 2.66930, 9.89260 2.80380, 9.91420 2.98150, 9.97510 3.07920, 9.90660 3.24670, 9.97130 3.29110, 9.90150 3.26070, 9.85580 3.34440, 9.66420 3.52840, 9.61350 3.73910, 9.69590 3.74540, 9.71120 3.86340, 9.49930 4.08930, 9.44340 4.06520, 9.39900 3.97130, 9.32790 3.91670, 9.24550 3.93320, 9.21370 3.99410, 9.12620 4.00170, 8.97390 4.09940, 8.99800 4.17810, 8.90790 4.28470, 8.88250 4.42050, 8.88510 4.57910, 8.82040 4.64380, 8.75950 4.62100, 8.80260 4.54360, 8.69220 4.48270, 8.55520 4.48270, 8.50310 4.55750, 8.58050 4.61720, 8.58310 4.79990, 8.53850 4.80060, 8.52000 4.74450, 8.53160 4.71400, 8.50900 4.69420, 8.47990 4.68940, 8.42580 4.72770, 8.40270 4.73230, 8.37970 4.76570, 8.33450 4.80340, 8.29160 4.77660, 8.31750 4.74820, 8.31380 4.72140, 8.32340 4.70810, 8.32860 4.64140, 8.31890 4.61380, 8.30640 4.61150, 8.30770 4.59280, 8.29470 4.57300, 8.28110 4.53450, 8.20520 4.54440, 8.07530 4.54350, 7.93660 4.53710, 7.87800 4.52560, 7.82490 4.52300, 7.69660 4.50290, 7.59740 4.46480, 7.58150 4.45190, 7.50870 4.45290, 7.42910 4.43760, 7.32460 4.44740, 7.32700 4.41860, 7.19780 4.37910, 7.13900 4.38140, 7.13220 4.40270, 7.16860 4.45230, 7.11490 4.46250, 7.10810 4.44750, 7.07230 4.45590, 7.06060 4.43810, 7.03080 4.43360, 7.01240 4.41370, 7.02720 4.40160, 6.99440 4.37510, 6.94730 4.37650, 6.89830 4.39260, 6.85820 4.39610, 6.87160 4.35760, 6.78400 4.34820, 6.72310 4.35750, 6.70700 4.34060, 6.66180 4.33700, 6.63950 4.31710, 6.61600 4.33740, 6.54870 4.32720, 6.44720 4.31760, 6.43150 4.32930, 6.42030 4.30610, 6.25390 4.29260, 6.23560 4.30060, 6.21610 4.28130, 6.08390 4.27410, 6.06000 4.28950, 5.97650 4.31450, 5.96730 4.33790, 5.89470 4.37040, 5.84740 4.40190, 5.82240 4.42760, 5.70790 4.51550, 5.70200 4.53210, 5.62570 4.61440, 5.54460 4.73740, 5.56670 4.72720, 5.53100 4.76030, 5.53100 4.77420, 5.46390 4.89070, 5.46500 4.91680, 5.44860 4.94430, 5.44980 4.96810, 5.42740 5.03090, 5.38600 5.10820, 5.39040 5.13420, 5.35560 5.17960, 5.35550 5.24080, 5.33750 5.29400, 5.32580 5.35980, 5.32480 5.40640, 5.25590 5.43770, 5.23030 5.45690, 5.21020 5.47640, 5.16440 5.54120, 5.19330 5.57950, 5.13150 5.63770, 5.11210 5.68990, 5.08690 5.72570, 5.08470 5.76870, 5.04950 5.78870, 4.98390 5.89850, 4.95180 5.94140, 4.76120 6.11870, 4.65760 6.20590, 4.49870 6.32390, 4.46050 6.34330, 4.35080 6.37100, 4.24110 6.38230, 4.19770 6.38820, 3.99710 6.42520, 3.95970 6.43140, 3.90670 6.43680, 3.79910 6.43760, 3.73470 6.42770, 3.63080 6.42260, 3.41910 6.41870, 3.40230 6.40070, 3.40640 6.39020, 3.31300 6.40010, 3.20500 6.40090, 3.07270 6.39940, 2.85050 6.39180, 2.70410 6.37490, 2.61560 6.36320, 2.49980 6.35860, 2.41950 6.34800, 2.36280 6.34810, 2.25300 6.34420, 2.09120 6.32360, 1.94850 6.29920, 1.89710 6.28890, 1.87810 6.28630, 1.85260 6.28320, 1.62800 6.23000, 1.38990 6.17860, 1.31020 6.15320, 1.19400 6.10570, 1.08110 6.04470, 0.92750 5.78330, 0.72570 5.76560, 0.63440 5.85060, 0.64450 5.76560, 0.33110 5.78080, 0.07350 5.68940, 0.00500 5.62350, -0.22470 5.52700, -0.35920 5.49780, -0.50390 5.37470, -0.72720 5.29860, -0.80970 5.21360, -1.07490 5.19710, -1.24370 5.10060, -1.56980 5.03090, -1.59090 5.01860, -1.59760 5.01470, -1.62090 5.00120, -1.69410 4.95850, -1.75120 4.87600, -1.91620 4.82150, -1.98220 4.75420, -2.08620 4.74150, -2.24740 4.85320, -2.27280 4.89630, -2.48850 4.96360, -3.11440 5.09090, -3.11530 5.09110, -2.97960 5.08290, -2.89080 5.12350, -2.80760 5.10920, -2.75750 5.10060, -2.72710 5.13740, -2.78800 5.28590, -2.76560 5.30690, -2.72710 5.34300, -2.74020 5.41350, -2.77780 5.61580, -2.85650 5.64760, -2.93640 5.61580, -2.95670 5.70850, -3.02530 5.70720, -3.01890 5.86200, -3.07980 6.00410, -3.10650 6.15260, -3.17890 6.24050, -3.18390 6.24650, -3.25370 6.63990, -3.19910 6.72240, -3.22960 6.81750, -3.09380 7.04590, -3.07350 7.05950, -3.07340 7.06010, -3.07250 7.06010, -3.07090 7.06120, -2.95420 7.23500, -2.97700 7.27690, -2.92370 7.60810, -2.78040 7.94940, -2.74610 7.93040, -2.69150 8.01540, -2.59260 8.05220, -2.61920 8.14870, -2.49480 8.20580, -2.50500 8.33390, -2.55410 8.59350, -2.59030 8.78380, -2.66360 8.94810, -2.65850 9.00390, -2.77780 9.04580, -2.77660 9.13210, -2.67500 9.22850, -2.71820 9.33000, -2.68390 9.36180, -2.68790 9.44110, -2.69040 9.45070, -2.68890 9.46040, -2.68990 9.48140, -2.75810 9.40820, -2.78830 9.41980, -2.83640 9.46140, -2.93550 9.57980, -2.94570 9.62290, -2.96680 9.65180, -3.00070 9.73940, -3.05650 9.72530, -3.08860 9.77120, -3.08860 9.80810, -3.13860 9.84860, -3.18200 9.83480, -3.18860 9.88100, -3.18770 9.93760, -3.19690 9.93250, -3.21500 9.90150, -3.23310 9.89630, -3.27090 9.84850, -3.31120 9.87020, -3.30650 9.90600, -3.36120 9.90740, -3.40790 9.92940, -3.42840 9.92000, -3.46710 9.93620, -3.48490 9.93190, -3.59330 9.93790, -3.61340 9.95810, -3.65460 9.93230, -3.70610 9.93580, -3.77720 9.92370, -3.79790 9.89620, -3.89130 9.90560, -3.91250 9.88280, -3.96740 9.87510, -3.96650 9.84070, -3.98870 9.82950, -4.03110 9.83240, -4.04660 9.80880, -4.09020 9.81870, -4.13010 9.84570, -4.16350 9.81300, -4.19110 9.77380, -4.26440 9.76100, -4.27600 9.74130, -4.26490 9.71210, -4.28600 9.67340, -4.28730 9.62700, -4.31260 9.59660, -4.34110 9.62540, -4.36130 9.62300, -4.37450 9.59160, -4.39870 9.60160, -4.40830 9.64460, -4.42940 9.66440, -4.50300 9.64610, -4.52090 9.67580, -4.52030 9.70260, -4.50220 9.72550, -4.51480 9.75150, -4.55360 9.74150, -4.54300 9.71750, -4.57840 9.69140, -4.60950 9.72450, -4.62220 9.70230, -4.65000 9.71070, -4.65620 9.68700, -4.68660 9.67750, -4.70920 9.69600, -4.73260 9.74690, -4.77980 9.75450, -4.81680 9.78420, -4.78610 9.78170, -4.79860 9.84480, -4.82400 9.84740, -4.82490 9.86570, -4.89680 9.87680, -4.91170 9.89110, -4.93110 9.87890, -4.96680 9.89230, -4.95660 9.91980, -4.96370 9.94620, -4.94190 9.95660, -4.98610 9.98770, -4.98230 10.01440, -4.95960 10.00960, -4.97200 10.04720, -5.01380 10.07840, -4.99870 10.10730, -5.03400 10.08230, -5.04010 10.10100, -5.07310 10.11130, -5.03720 10.12010, -5.06920 10.13850, -5.06050 10.18090, -5.09620 10.17220, -5.08040 10.19360, -5.08150 10.22320, -5.12180 10.20600, -5.10690 10.24060, -5.11640 10.26050, -5.09850 10.27150, -5.11300 10.29620, -5.19030 10.28920, -5.19950 10.32110, -5.25730 10.30550, -5.28090 10.31170, -5.32280 10.29110, -5.35200 10.30170, -5.35980 10.28200, -5.41590 10.30560, -5.43620 10.33490, -5.46140 10.34650, -5.50010 10.42500, -5.51850 10.43240, -5.56050 10.46300, -5.61000 10.45150, -5.68350 10.46130, -5.70500 10.43100, -5.74710 10.42810, -5.76870 10.43990, -5.80980 10.41600, -5.82290 10.39100, -5.87160 10.36670, -5.87290 10.31320, -5.89220 10.29960, -5.88070 10.27930, -5.89120 10.25640, -5.92780 10.27930, -5.95590 10.27150, -5.94900 10.24440, -5.96320 10.21350, -5.99280 10.19440, -6.04270 10.20150, -6.07180 10.21630, -6.10760 10.20320, -6.16840 10.21980, -6.19600 10.24030, -6.18890 10.25610, -6.21830 10.26520, -6.23380 10.30240, -6.20700 10.31550, -6.19230 10.30170, -6.17810 10.32350, -6.19230 10.33530, -6.16530 10.36570, -6.18720 10.38750, -6.18000 10.41270, -6.15520 10.41930, -6.18450 10.44840, -6.18450 10.47110, -6.16010 10.48500, -6.20360 10.50470, -6.21820 10.52800, -6.24160 10.51950, -6.24200 10.54530, -6.20630 10.57620, -6.21620 10.62420, -6.18270 10.63490, -6.23140 10.66050, -6.22800 10.70420, -6.21180 10.72700, -6.23510 10.73540, -6.26260 10.74560, -6.32540 10.68980, -6.40390 10.71440, -6.42080 10.70380, -6.41950 10.64800, -6.41070 10.60260, -6.43290 10.57530, -6.53870 10.59130, -6.56800 10.62100, -6.60680 10.64070, -6.61530 10.67180, -6.64170 10.67210, -6.67240 10.59870, -6.66060 10.58820, -6.66910 10.55020, -6.65880 10.53690, -6.68230 10.52650, -6.67020 10.48550, -6.67610 10.46630, -6.62620 10.43950, -6.65390 10.36060, -6.68460 10.34420, -6.73890 10.36370, -6.77720 10.36640, -6.79120 10.38370, -6.82240 10.38960, -6.82300 10.36770, -6.85830 10.34360, -6.93540 10.35660, -6.95190 10.34460, -6.96760 10.30700, -6.98380 10.30260, -7.01750 10.25720, -6.98260 10.21340, -6.99370 10.17440, -7.01080 10.15830, -7.05120 10.14700, -7.08620 10.17070, -7.07960 10.20870, -7.10760 10.21250, -7.13300 10.24110, -7.15620 10.24970, -7.26100 10.25630, -7.27360 10.26220, -7.32660 10.23920, -7.38040 10.24240, -7.39500 10.25800, -7.36710 10.26190, -7.35520 10.28430, -7.36670 10.34530, -7.42160 10.34330, -7.45690 10.38870, -7.45680 10.40940, -7.43650 10.41660, -7.44320 10.43570, -7.51120 10.45680, -7.54170 10.41470, -7.58910 10.42740, -7.62530 10.45960, -7.68060 10.40420, -7.71880 10.39620, -7.72300 10.34550, -7.75300 10.34410, -7.74990 10.32340, -7.76680 10.28430, -7.79220 10.27070, -7.79740 10.24830, -7.84500 10.20850, -7.86570 10.16990, -7.90900 10.16260, -7.93050 10.14760, -7.96250 10.15440, -7.97860 10.17510, -7.99140 10.14200, -8.01090 10.13090, -8.00990 10.08950, -8.07780 10.06000, -8.10790 10.05450, -8.11220 10.02300, -8.13060 9.99860, -8.14610 9.98600, -8.11580 9.95650, -8.16370 9.94710, -8.15110 9.90870, -8.12090 9.90350, -8.13900 9.86880, -8.09720 9.86720, -8.09420 9.81230, -8.11270 9.77870, -8.10230 9.76250, -8.12260 9.74100, -8.11230 9.70470, -8.12610 9.67840, -8.11680 9.64870, -8.14260 9.62670, -8.13360 9.61150, -8.14750 9.58410, -8.14000 9.53130, -8.08990 9.44800, -8.02880 9.39160, -7.96280 9.39550, -7.90470 9.41710, -7.85280 9.41670, -7.88240 9.33200, -7.87670 9.29410, -7.88920 9.28510, -7.92000 9.21330, -7.90830 9.18180, -7.86810 9.16120, -7.84650 9.18260, -7.80850 9.18070, -7.78890 9.16440, -7.80890 9.13570, -7.77670 9.10280, -7.71850 9.07150, -7.73450 9.06190, -7.79160 9.07050, -7.82160 9.05600, -7.83640 9.06950, -7.85760 9.03020, -7.88730 9.02910, -7.89540 9.00990, -7.93300 8.97920, -7.91670 8.93430, -7.93740 8.90670, -7.91100 8.88860, -7.93060 8.87340, -7.93600 8.84600, -7.95830 8.84820, -7.93890 8.78520, -7.91290 8.76860, -7.85860 8.78560, -7.81930 8.75320, -7.77580 8.76680, -7.78090 8.73350, -7.73490 8.72570, -7.73550 8.68440, -7.70700 8.65200, -7.68550 8.64960, -7.65980 8.61520, -7.69020 8.56590, -7.69010 8.55190, -7.65500 8.50090, -7.66730 8.42430, -7.63670 8.38020, -7.69770 8.37450, -7.74070 8.37750, -7.78610 8.47500, -7.82600 8.49540, -7.83390 8.47440, -7.82220 8.44650, -7.83730 8.42640, -7.87960 8.42530, -7.92070 8.45240, -7.90760 8.49110, -7.92910 8.50190, -7.97760 8.50030, -7.97490 8.48950, -8.06260 8.51100, -8.09030 8.50790, -8.09870 8.48660, -8.11910 8.48560, -8.18880 8.50670, -8.19730 8.48360, -8.23540 8.46530, -8.23700 8.43140, -8.23770 8.41750, -8.21040 8.34940, -8.22080 8.32060, -8.21430 8.27880, -8.23310 8.26330, -8.23970 8.23000, -8.18900 8.20560, -8.17150 8.18390, -8.11720 8.18560, -8.04530 8.15330, -8.03430 8.17990, -7.98440 8.18590, -7.99470 8.17060, -8.00680 8.09570, -7.97700 8.09030, -7.96040 8.05260, -7.94320 8.04750, -7.94350 8.02200, -7.96850 8.02400, -7.99550 8.04830, -8.01120 8.03430, -8.05260 8.04370, -8.05280 8.02690, -8.08350 7.99790, -8.09660 7.94790, -8.13040 7.88000, -8.12410 7.83070, -8.09430 7.79470, -8.11760 7.71860, -8.14960 7.67070, -8.14190 7.66100, -8.16910 7.63980, -8.18350 7.60540, -8.18040 7.55750, -8.21360 7.53080, -8.26760 7.57010, -8.30500 7.58620, -8.30910 7.60530, -8.33890 7.58510, -8.38180 7.58390, -8.37920 7.60800, -8.40040 7.62430, -8.42630 7.59010, -8.47160 7.55480, -8.41320 7.49260, -8.36120 7.24260, -8.29010 7.18170, -8.27360 7.00660, -8.32440 6.96600, -8.32140 6.90420, -8.31680 6.81120, -8.42790 6.66140, -8.42970 6.65890, -8.59980 6.50540, -8.49060 6.43300, -8.43610 6.48000, -8.38660 6.37470, -8.17210 6.27570, -8.00590 6.31500, -7.92210 6.28840, -7.82060 6.19320, -7.84850 6.09420, -7.76860 6.03210, -7.78760 5.98380, -7.69250 5.90520, -7.57570 5.89750, -7.53760 5.84930, -7.42220 5.84300, -7.44120 5.75420, -7.41210 5.67760, -7.39680 5.63740, -7.39430 5.55240, -7.43430 5.44830, -7.44500 5.42040, -7.36510 5.32780, -7.42610 5.29990, -7.46790 5.28080, -7.47040 5.15010, -7.55290 5.07650, -7.53380 4.95220, -7.59220 4.90520, -7.59090 4.80500, -7.55790 4.78590, -7.55030 4.38120, -7.55750 4.37930, -7.62900 4.36080, -7.78510 4.39000, -7.84090 4.45980, -7.93740 4.50420, -8.25710 4.57400, -8.50970 4.72630, -8.77110 4.84050, -8.86620 4.92550, -9.03880 4.98010, -9.25710 5.12980, -9.41950 5.26690, -9.49060 5.36590, -9.59460 5.43180, -9.57180 5.45850, -9.73420 5.58410, -10.00960 5.80870, -10.07680 5.91780, -10.19610 5.98640, -10.25700 6.06120, -10.37630 6.11450, -10.36990 6.15390, -10.38390 6.14120, -10.63770 6.21730, -10.81910 6.31120, -10.80900 6.39120, -10.85850 6.45590, -11.06280 6.57140, -11.08180 6.61700, -11.09830 6.59170, -11.20110 6.67670, -11.22520 6.77690, -11.36350 6.76550, -11.46880 6.90380, -11.58000 6.96650, -11.56750 6.98970, -11.59650 6.97800, -11.62740 7.01360, -11.71380 7.07000, -11.80630 7.12060, -11.94880 7.18550, -12.33960 7.33870, -12.47150 7.37770, -12.53250 7.39200, -12.55610 7.38750, -12.58200 7.45160, -12.69210 7.50080, -12.84950 7.54820, -12.95750 7.56870, -12.95250 7.57840, -12.93960 7.71670, -12.92420 7.86940, -12.96060 7.91280, -12.90800 7.94290, -12.84550 7.94060, -12.89310 7.96850, -12.90560 8.04300, -12.89560 8.07960, -12.91250 8.09160, -12.93840 8.15070, -12.99270 8.20830, -12.99130 8.22380, -13.01900 8.23810, -13.06230 8.23830, -13.10680 8.20130, -13.12920 8.19650, -13.15890 8.16990, -13.15590 8.21310, -13.17420 8.28180, -13.18380 8.28240, -13.20730 8.33600, -13.23380 8.34420, -13.26730 8.39560, -13.29120 8.43420, -13.27880 8.45780, -13.29010 8.49930, -13.24180 8.48830, -13.20340 8.49070, -13.18840 8.50660, -13.16900 8.52740, -13.19830 8.57430, -13.21340 8.61860, -13.23390 8.64480, -13.24450 8.67990, -13.24830 8.81350, -13.20580 8.85830, -13.13640 8.84110, -13.12870 8.85230, -13.16010 8.88670, -13.15140 8.90460, -13.19580 8.91300, -13.23600 8.94990, -13.28460 8.95530, -13.29240 8.96470, -13.29400 9.01990, -13.30370 9.04010, -13.31780 9.06120, -13.28990 9.10800, -13.22890 9.16680, -13.24150 9.17430, -13.27550 9.15540, -13.31900 9.15880, -13.31030 9.18900, -13.31040 9.25330, -13.32560 9.27910, -13.32590 9.31650, -13.30770 9.33110, -13.33720 9.33720, -13.34890 9.28130, -13.41200 9.27840, -13.42370 9.33570, -13.42320 9.38700, -13.41340 9.40990, -13.46910 9.40620, -13.50730 9.44810, -13.52020 9.49180, -13.55030 9.50310, -13.59530 9.56980, -13.65410 9.54730, -13.71520 9.50060, -13.72240 9.51110, -13.66660 9.56100, -13.66670 9.58270, -13.62750 9.65060, -13.61590 9.75290, -13.61850 9.78430, -13.63400 9.78500, -13.69560 9.73380, -13.75030 9.76370, -13.77250 9.78420, -13.79620 9.80450, -13.79170 9.82500, -13.82470 9.84850, -13.84100 9.87670, -13.88630 9.91950, -13.96600 9.97470, -14.02680 10.00020, -14.08790 10.06180, -14.12800 10.04930, -14.15560 10.06250, -14.20070 10.10260, -14.23600 10.12100, -14.26240 10.15870, -14.34850 10.22190, -14.38170 10.23590, -14.43010 10.22420, -14.45410 10.20670, -14.46850 10.25420, -14.45320 10.29640, -14.45930 10.33650, -14.51940 10.39480, -14.54700 10.42960, -14.60570 10.46590, -14.63340 10.45850, -14.64000 10.47220, -14.65300 10.45800, -14.66790 10.51600, -14.64710 10.53600, -14.65750 10.55450, -14.61040 10.58020, -14.62390 10.62480, -14.61170 10.67850, -14.64500 10.67780, -14.69920 10.63240, -14.71070 10.69750, -14.74230 10.69680, -14.78380 10.73130, -14.81480 10.80870, -14.82340 10.84970, -14.81230 10.86690, -14.81580 10.92920, -14.79550 10.98750, -14.82380 10.98610, -14.84490 10.96110, -14.87690 10.95280, -14.89790 10.96430, -14.91620 10.95210, -14.95120 10.97990, -14.97660 10.97650, -15.02550 10.93660, -15.07610 10.92280, -15.09850 10.94990, -15.09220 11.03560, -15.11350 11.05470, -15.15210 11.07900, -15.21110 11.07200, -15.20060 11.10390, -15.21280 11.11350, -15.28890 11.12140, -15.30170 11.13740, -15.32670 11.13290, -15.39240 11.18120, -15.40590 11.20240, -15.39990 11.25860, -15.43300 11.30630, -15.47170 11.32540, -15.49990 11.32630, -15.50410 11.34430, -15.48140 11.41930, -15.45880 11.43260, -15.47490 11.46580, -15.41680 11.48260, -15.42180 11.52710, -15.45960 11.59450, -15.44730 11.63560, -15.41390 11.68460, -15.44660 11.64880, -15.48600 11.65010, -15.48990 11.70160, -15.50860 11.67170, -15.53650 11.68010, -15.53320 11.70780, -15.59910 11.75340, -15.66110 11.79530, -15.70690 11.79420, -15.80230 11.74250, -15.83040 11.75720, -15.81660 11.80940, -15.83110 11.80210, -15.85300 11.76230, -15.92480 11.75540, -15.95510 11.73680, -16.00380 11.75020, -16.08780 11.76770, -16.15420 11.80830, -16.16020 11.87090, -16.19640 11.86860, -16.23130 11.83970, -16.26930 11.84950, -16.33160 11.85310, -16.31150 11.87570, -16.29290 11.94390, -16.29800 11.96880, -16.28650 12.00040, -16.31110 12.00050, -16.33490 12.01990, -16.32740 12.04460, -16.34710 12.10080, -16.32900 12.14690, -16.34280 12.17090, -16.35570 12.19660, -16.39570 12.20690, -16.40010 12.19420, -16.44560 12.18540, -16.47600 12.19070, -16.49850 12.22060, -16.55870 12.27870, -16.59660 12.28670, -16.64930 12.33220, -16.69050 12.34630, -16.71690 12.33970, -16.73480 12.37820, -16.77120 12.40490, -16.79140 12.48490, -16.77780 12.51970, -16.74790 12.54350, -16.72790 12.50920, -16.66920 12.50050, -16.67600 12.54630, -16.69370 12.57470, -16.70150 12.58990, -16.74790 12.56880, -16.76800 12.58080, -16.76530 12.61310, -16.78490 12.66750, -16.76890 12.68990, -16.76500 12.72420, -16.78800 12.69780, -16.77630 12.74020, -16.79090 12.76840, -16.76260 12.86980, -16.73550 13.01790, -16.74790 13.06530, -16.77300 13.07850, -16.76650 13.12180, -16.78810 13.15950, -16.78590 13.24930, -16.80720 13.27540, -16.80400 13.32140, -16.81410 13.33840, -16.79900 13.36010, -16.79590 13.38080, -16.74480 13.40950, -16.71880 13.45400, -16.66760 13.48960, -16.62800 13.46840, -16.57120 13.45660, -16.56090 13.46920, -16.53260 13.51100, -16.52710 13.54410, -16.54440 13.59150, -16.54520 13.59370, -16.58680 13.63310, -16.58490 13.64410, -16.61950 13.65800, -16.63910 13.71030, -16.62140 13.77210, -16.58240 13.81170, -16.58620 13.84130, -16.63920 13.82420, -16.69290 13.77940, -16.70680 13.80190, -16.73650 13.91230, -16.74340 13.96820, -16.75370 13.97380, -16.76400 13.93380, -16.77440 14.05550, -16.80390 14.13370, -16.81960 14.13550, -16.86740 14.18440, -16.87470 14.23040, -16.91220 14.28110, -16.92940 14.28580, -16.93400 14.35340, -16.96090 14.39710, -17.00890 14.43820, -17.05670 14.45450, -17.08810 14.49370, -17.10860 14.54940, -17.14450 14.58860, -17.16020 14.62010, -17.20610 14.67060, -17.25600 14.70480, -17.30680 14.72020, -17.37180 14.73980, -17.41270 14.73330, -17.42860 14.72220, -17.41710 14.70170, -17.43420 14.68030, -17.43420 14.64740, -17.44820 14.67160, -17.51070 14.73330, -17.52990 14.74090, -17.47980 14.76580, -17.41900 14.77560, -17.38370 14.79020, -17.30290 14.82230, -17.17650 14.88500, -17.12800 14.91100, -17.10830 14.95200, -17.02930 15.03900, -16.94760 15.13510, -16.85880 15.25280, -16.81020 15.32860, -16.72710 15.45780, -16.65250 15.56520, -16.59320 15.66400, -16.54900 15.75350, -16.52280 15.85600, -16.51390 15.95730, -16.50910 16.06440, -16.52050 16.28130, -16.45070 16.48950, -16.44440 16.61380, -16.34540 16.87140, -16.16140 17.28760, -16.07260 17.57060, -16.03580 17.88530, -16.02940 18.17720, -16.05230 18.39030, -16.05860 18.46650, -16.13860 18.65810, -16.19190 18.94490, -16.22230 18.99560, -16.35560 19.19740, -16.46220 19.25070, -16.51420 19.34970, -16.33270 19.45880, -16.40000 19.49050, -16.27180 19.73290, -16.25530 19.87750, -16.30230 19.91430, -16.22490 20.00060, -16.25790 20.11990, -16.20330 20.18840, -16.37080 20.47010, -16.43040 20.61990, -16.52940 20.72010, -16.52560 20.58050, -16.56110 20.57420, -16.67910 20.68970, -16.77560 20.92820, -16.86060 21.02720, -16.93170 21.16300, -17.00400 21.01960, -17.05090 20.76960, -17.07020 20.88860, -17.03650 21.04040, -16.99510 21.15720, -16.95750 21.33010, -16.89920 21.33330, -14.29550 21.33340, -13.00000 21.33330, -13.01000 21.57100, -13.02890 22.01480, -13.04490 22.17470, -13.05560 22.28150, -13.07960 22.52070, -13.15020 22.76050, -13.11080 22.86820, -13.10830 22.93530, -13.07880 22.95910, -13.01490 23.01060, -12.58970 23.27890, -12.36000 23.31680, -12.14210 23.41980, -11.99990 23.45840, -11.99990 24.50240, -12.00690 24.78710, -11.99990 25.99870, -8.67460 25.99770, -8.67390 27.29800, -8.67020 27.65980, -8.67260 27.76580, -8.66920 28.71980, -8.52230 28.77160, -8.40360 28.84050, -8.31780 28.92140, -8.19470 29.00330, -8.19090 28.98770, -8.08910 29.05860, -7.96760 29.12690, -7.77150 29.26700, -7.66280 29.30290, -7.60030 29.37790, -7.49440 29.36560, -7.35580 29.39210, -7.23200 29.48620, -7.09800 29.53330, -7.07320 29.50440, -6.94640 29.49950, -6.76140 29.46280, -6.70280 29.51180, -6.54190 29.51620, -6.45550 29.56230, -6.30910 29.57020, -6.24520 29.57060, -6.18440 29.58160, -6.06580 29.56530, -5.89740 29.59720, -5.78060 29.61060, -5.71850 29.58890, -5.75060 29.51850, -5.67670 29.53050, -5.56970 29.48530, -5.45990 29.61420, -5.31600 29.79970, -5.32340 29.83750, -5.25100 29.91530, -5.13090 30.00460, -4.93920 30.13980, -4.60230 30.28920, -4.32410 30.53060, -4.14950 30.58520, -3.98690 30.59470, -3.64550 30.69790, -3.62250 30.76130, -3.65920 30.77060, -3.65500 30.85210, -3.57580 30.91530, -3.54700 31.00360, -3.57850 31.04610, -3.68060 31.08820, -3.69610 31.13730, -3.77310 31.11770, -3.80720 31.22190, -3.76670 31.27040, -3.76350 31.36160, -3.66670 31.37800, -3.66670 31.63330, -3.15990 31.73210, -2.82350 31.79770, -2.84780 31.88670, -2.94230 32.02170, -2.90870 32.11740, -2.84340 32.11400, -2.80110 32.11550, -2.70890 32.11030, -2.57730 32.12430, -2.45660 32.16190, -2.26000 32.15330, -2.09630 32.14610, -1.99590 32.17600, -1.87070 32.14740, -1.67500 32.13090, -1.55260 32.09200, -1.37420 32.08520, -1.23280 32.08070, -1.15400 32.10940, -1.19240 32.17770, -1.29220 32.16270, -1.23600 32.21680, -1.25000 32.33240, -1.18400 32.41090, -1.06730 32.45540, -1.02160 32.54040, -1.37930 32.73960, -1.54190 32.95790, -1.48710 32.97820, -1.46430 33.04680, -1.49170 33.09400, -1.56920 33.14760, -1.66930 33.28240, -1.66340 33.37270, -1.61840 33.46100, -1.59330 33.57310, -1.65040 33.68500, -1.70450 33.68600, -1.72960 33.73420, -1.67690 33.77630, -1.70280 33.87290, -1.64840 34.10850, -1.78040 34.39680, -1.69160 34.49710, -1.74950 34.52370, -1.84770 34.62530, -1.74620 34.75470, -1.88830 34.81810, -1.89110 34.85520, -1.97940 34.88760, -1.98120 34.93370, -2.03330 34.93240, -2.17720 35.02320, -2.21140 35.08730, -1.95810 35.07570, -1.77540 35.12010, -1.55710 35.27240, -1.35530 35.32060, -1.27670 35.36630, -1.18400 35.58080, -1.03940 35.67340, -0.93530 35.72920, -0.88840 35.70770, -0.82490 35.76730, -0.62700 35.71270, -0.50890 35.78380, -0.46710 35.88660, -0.33510 35.90690, -0.27420 35.81930, -0.11560 35.79010, 0.03670 35.87520, 0.12680 36.03630, 0.34510 36.19620, 0.43130 36.21400, 0.64710 36.32180, 0.73210 36.33070, 0.89960 36.38660, 0.92620 36.43350, 1.18380 36.51470, 1.25740 36.50460, 1.33990 36.55020, 1.60770 36.53760, 1.71550 36.55530, 2.12030 36.58320, 2.37790 36.64030, 2.43370 36.59340, 2.64950 36.61880, 2.83470 36.72540, 2.90200 36.80660, 2.96290 36.81290, 2.99000 36.81440, 3.01250 36.82080, 3.02470 36.81300, 3.04130 36.80960, 3.07200 36.78610, 3.06180 36.76510, 3.07500 36.76120, 3.08520 36.74900, 3.13700 36.74320, 3.18370 36.74820, 3.22500 36.77140, 3.23570 36.80280, 3.22570 36.81350, 3.24580 36.81440, 3.49330 36.76850, 3.70650 36.85480, 3.73950 36.88910, 3.92350 36.92210, 3.98570 36.89920, 4.21280 36.89410, 4.42220 36.91190, 4.60870 36.88530, 4.92470 36.85350, 5.11000 36.77740, 5.10360 36.69740, 5.25590 36.64160, 5.43350 36.65810, 5.55790 36.72030, 5.57190 36.76720, 5.68990 36.81930, 5.80530 36.80910, 6.01470 36.84590, 6.23810 36.92080, 6.26720 37.02610, 6.36880 37.07810, 6.48680 37.08700, 6.56670 36.98680, 6.72790 36.94490, 6.85100 36.95380, 6.94360 36.88140, 7.16310 36.91820, 7.25320 36.98800, 7.28490 37.07050, 7.41310 37.03750, 7.51330 37.04260, 7.62120 36.96270, 7.76710 36.96010, 7.76330 36.87890, 7.85720 36.84210, 8.04630 36.87510, 8.22520 36.95120, 8.27220 36.91820, 8.42700 36.89670, 8.64020 36.94240, 8.62490 36.85860, 8.67190 36.82430, 8.57930 36.78120, 8.47900 36.77610, 8.44220 36.62130, 8.15920 36.48550, 8.20870 36.45130, 8.40920 36.42460, 8.39150 36.36630, 8.31150 36.17210, 8.34070 36.13400, 8.29250 35.96530, 8.25570 35.76350, 8.35720 35.63030, 8.36480 35.51350, 8.31790 35.36000, 8.32420 35.29150, 8.42570 35.24070, 8.42190 35.18110, 8.35090 35.09100, 8.26200 34.88540, 8.31280 34.73690, 8.24550 34.68360, 8.25190 34.61380, 8.12500 34.53260, 7.91940 34.41840, 7.84830 34.40830, 7.79890 34.21280, 7.63640 34.19640, 7.61110 34.11010, 7.55270 34.06560, 7.52480 33.90320, 7.53370 33.79280, 7.58060 33.76110, 7.60090 33.62910, 7.74300 33.42860, 7.74300 33.42610, 7.73800 33.25100, 7.81410 33.17230, 7.89660 33.17610, 8.05260 33.09870, 8.11480 33.10000, 8.32670 32.80940, 8.35090 32.53150, 8.35340 32.51630, 9.07160 32.09620, 9.12870 31.99980, 9.13760 31.87670, 9.34570 31.11030, 9.57540 30.24100, 9.39520 30.17120, 9.44980 30.02150, 9.54870 29.91490, 9.79240 29.43150, 9.87740 29.04440, 9.87490 28.65990, 9.83550 28.28940, 9.86980 28.14470, 9.96110 27.88840, 9.93830 27.83260, 9.92430 27.70060, 9.85070 27.49880, 9.80630 27.46970, 9.77330 27.26410, 9.83040 27.14230, 9.84190 26.98490, 9.93450 26.84280, 9.90790 26.72730, 9.92820 26.64230, 9.87610 26.52050, 9.52080 26.37460, 9.38760 26.18420, 9.77460 25.68930, 10.04240 25.32770, 10.04110 24.87720, 10.18580 24.79340, 10.23900 24.61200, 10.39640 24.51050, 10.49280 24.48890, 10.69460 24.56760, 11.01310 24.46100, 11.12480 24.40130, 11.43440 24.19070, 11.44840 24.20080, 11.60570 24.24910, 11.70850 24.00040, 11.98000 23.52450, 12.00030 23.51560, 13.39750 23.21740, 13.54470 23.15650, 13.68040 23.07280, 14.18930 22.64380, 14.99630 23.00170, 15.40110 23.18700, 15.99880 23.45090, 16.98220 22.99660, 18.72580 22.16800, 18.99990 22.03350, 19.07090 21.99920, 20.35000 21.37360, 21.00730 21.04370, 21.68110 20.70490, 23.99950 19.50830, 23.99950 15.99960, 24.00210 15.70520, 23.80540 15.74330, 23.57820 15.75350, 23.41710 15.69260, 23.12010 15.71160, 22.93110 15.55040, 22.93230 15.46410, 22.99070 15.41590, 22.99960 15.23700, 22.75720 14.97430, 22.75720 14.90330, 22.66840 14.84490, 22.71660 14.68630, 22.41330 14.59620, 22.38410 14.50740, 22.45010 14.47180, 22.42860 14.29160, 22.47930 14.23200, 22.55800 14.22950, 22.53640 14.11910, 22.39300 14.05050, 22.21030 13.91600, 22.09230 13.77640, 22.14300 13.62920, 22.21280 13.56710, 22.22050 13.45160, 22.28390 13.35010, 22.12780 13.16480, 22.02000 13.13940, 21.92610 13.04680, 21.83850 12.80190, 21.93370 12.63950, 22.13670 12.66610, 22.19760 12.74990, 22.45900 12.61920, 22.37150 12.44150, 22.42220 12.38820, 22.43870 12.27780, 22.54020 12.05190, 22.63540 12.05700, 22.55420 11.68780, 22.56560 11.62050, 22.66200 11.51520, 22.75470 11.47460, 22.78890 11.40350, 22.94500 11.41750, 22.98560 11.19920, 22.88160 10.93150, 23.00720 10.71570, 23.05540 10.69040, 23.30160 10.47460, 23.66830 9.89090, 23.69750 9.66760, 23.62900 9.54200, 23.67720 9.43920, 23.65560 9.28560, 23.47420 9.12830, 23.46400 8.98360, 23.58840 8.93410, 23.50840 8.81490, 23.51990 8.72730, 23.63790 8.74250, 23.73940 8.71590, 23.82950 8.73490, 24.13150 8.69180, 24.23810 8.64860, 24.38400 8.78950, 24.58070 8.91890, 24.54390 9.07250, 24.62510 9.32370, 24.59720 9.37950, 24.74950 9.49250, 24.72540 9.74370, 24.85860 9.87060, 24.95250 9.93030, 25.03750 10.04190, 25.03500 10.17260, 25.10600 10.31350, 25.21140 10.34390, 25.34590 10.33630, 25.46900 10.37310, 25.56920 10.36680, 25.81790 10.43660, 25.93210 10.37570, 25.93090 10.18280, 26.05010 10.11680, 26.11610 9.99500, 26.21130 9.91120, 26.31410 9.63710, 26.39660 9.56610, 26.70360 9.48870, 26.99300 9.59400, 27.13760 9.62440, 27.46760 9.62060, 27.75810 9.60290, 27.90790 9.61050, 28.03860 9.34270, 28.76820 9.34780, 28.75810 9.40240, 28.81140 9.49370, 28.97760 9.64090, 29.02070 9.70950, 29.11210 9.74880, 29.53850 9.75010, 29.53970 10.08250, 29.94200 10.28810, 29.99660 10.28940, 30.52950 9.96070, 30.79220 9.74880, 31.27440 9.75770, 31.35180 9.80340, 31.51170 10.00390, 31.78710 10.30210, 31.97360 10.62690, 32.14740 10.73730, 32.44060 11.02660, 32.47100 11.04310, 32.40120 11.17380, 32.39230 11.24620, 32.39230 11.66620, 32.36950 11.71570, 32.10680 11.94540, 32.72350 11.94920, 32.75020 12.00750, 32.75910 12.21560, 32.89740 12.23090, 33.25650 12.21560, 33.17650 11.74230, 33.13590 11.62560, 33.26540 10.82870, 33.21970 10.73480, 33.48240 10.65740, 33.66760 10.44160, 33.79450 10.33760, 33.90110 10.16120, 33.96580 10.15360, 33.99630 10.06220, 33.99250 9.91120, 33.92400 9.76660, 33.88720 9.62320, 33.90110 9.49880, 34.11300 9.50010, 34.10880 9.56250, 34.11210 9.58520, 34.20150 9.83560, 34.22220 9.89350, 34.23220 10.03730, 34.23310 10.03870, 34.33130 10.12310, 34.34060 10.16530, 34.33790 10.19110, 34.34230 10.21090, 34.33520 10.25230, 34.31880 10.29420, 34.30180 10.37000, 34.29320 10.38770, 34.29600 10.42310, 34.31740 10.46310, 34.32130 10.47940, 34.28360 10.51610, 34.29850 10.58330, 34.30230 10.59030, 34.38460 10.67260, 34.46900 10.81090, 34.49190 10.82940, 34.59660 10.90010, 34.60240 10.90000, 34.69900 10.82850, 34.70070 10.82660, 34.74160 10.76550, 34.77670 10.71320, 34.79070 10.71890, 34.80530 10.73360, 34.83060 10.74430, 34.84590 10.74620, 34.90430 10.81430, 34.90910 10.83200, 34.93620 10.86710, 34.97100 10.90470, 34.96090 10.94000, 34.94700 10.96380, 34.96520 11.01080, 35.00540 11.15610, 34.99330 11.18410, 34.95790 11.24950, 34.96420 11.26900, 35.05970 11.43780, 35.09270 11.62300, 35.05460 11.73470, 35.10920 11.81590, 35.24200 11.91160, 35.25490 11.92640, 35.27340 11.93810, 35.29510 11.97210, 35.29680 11.98200, 35.39740 12.18400, 35.41010 12.20960, 35.42890 12.24740, 35.64210 12.60270, 35.66850 12.60410, 35.68450 12.62710, 35.68250 12.64150, 35.70940 12.66740, 35.78300 12.65340, 35.96950 12.71440, 35.97300 12.71530, 35.98540 12.71940, 36.05720 12.72380, 36.07010 12.72370, 36.15480 12.68130, 36.16410 12.75080, 36.17640 12.75780, 36.16710 12.77290, 36.17430 12.82640, 36.17390 12.83840, 36.18150 12.88800, 36.17860 12.89590, 36.14970 12.94150, 36.19730 13.10170, 36.21340 13.16370, 36.22100 13.20780, 36.23950 13.26230, 36.25130 13.28730, 36.27820 13.31230, 36.30250 13.35440, 36.32130 13.41300, 36.34290 13.47100, 36.34450 13.48910, 36.36970 13.53050, 36.37030 13.56950, 36.37180 13.57640, 36.38080 13.61040, 36.39250 13.63100, 36.41770 13.72520, 36.45090 13.76790, 36.46970 13.80400, 36.48460 13.81240, 36.49110 13.83350, 36.49990 13.83100, 36.49130 13.83380, 36.49510 13.84630, 36.45300 13.98070, 36.50690 14.11900, 36.56080 14.25740, 36.56160 14.25790, 36.56570 14.26950, 36.55470 14.28140, 36.52660 14.32970, 36.47070 14.91980, 36.43900 15.15710, 36.54180 15.22810, 36.61290 15.41340, 36.69910 15.71290, 36.76770 15.82960, 36.89960 16.22680, 36.96310 16.28640, 36.93390 16.35370, 36.96310 16.43490, 36.89960 16.49580, 36.90090 16.67600, 36.95550 16.68610, 37.02910 16.80160, 36.98590 16.98560, 37.00240 17.06810, 37.02720 17.10730, 37.08190 17.08500, 37.12420 17.05790, 37.30060 17.09350, 37.38950 17.04780, 37.46180 17.14420, 37.51510 17.33710, 37.61280 17.37390, 37.76510 17.38410, 37.78790 17.49570, 37.85900 17.45890, 37.97570 17.49070, 38.00620 17.55790, 38.18060 17.57950, 38.24220 17.55070, 38.27770 17.62500, 38.34520 17.65220, 38.45280 17.89800, 38.56450 18.00330, 38.70030 17.78000, 38.82210 17.61500, 38.93880 17.37010, 39.06830 16.88540, 39.14570 16.69760, 39.13930 16.60110, 39.20410 16.34230, 39.23960 16.07320, 39.31060 15.89180, 39.43370 15.80930, 39.42480 15.75470, 39.47940 15.65070, 39.44010 15.60120, 39.46420 15.52380, 39.60000 15.52000, 39.66090 15.33600, 39.71670 15.23450, 39.69510 15.12530, 39.76870 15.06060, 39.81570 15.07200, 39.85380 15.16850, 39.78650 15.26110, 39.77510 15.39690, 39.83470 15.47680, 39.88550 15.47560, 40.06190 15.35760, 40.08220 15.30170, 40.02250 15.24210, 40.16590 15.02130, 40.15580 14.99210, 40.31060 14.90450, 40.42100 14.96670, 40.52570 14.94070, 40.63670 14.95780, 40.62400 14.89440, 40.70010 14.91720, 40.73190 14.77130, 40.81690 14.70910, 40.90190 14.72690, 40.98570 14.66470, 41.19120 14.62280, 41.29910 14.50860, 41.33970 14.41220, 41.49320 14.23960, 41.55030 14.13050, 41.64930 14.03400, 41.69120 13.93380, 41.81430 13.92110, 41.99950 13.82340, 42.11250 13.63560, 42.14670 13.65080, 42.35480 13.40460, 42.38530 13.21180, 42.56420 13.19910, 42.68350 13.04930, 42.74060 13.04050, 42.75960 12.87680, 42.90810 12.78790, 42.98170 12.81710, 43.00070 12.89450, 43.08830 12.80820, 43.12730 12.71020, 42.96150 12.64290, 42.89610 12.61790, 42.82790 12.54370, 42.79640 12.50240, 42.82180 12.44280, 42.69620 12.36030, 42.54140 12.49590, 42.46400 12.52400, 42.40430 12.46860, 42.33940 12.39690, 42.30830 12.30830, 42.25560 12.26330, 42.01350 11.89210, 41.97800 11.83500, 41.89720 11.77390, 41.89200 11.75540, 41.83700 11.72800, 41.83600 11.72540, 41.80530 11.63010, 41.80350 11.59630, 41.77610 11.50470, 41.77550 11.47270, 41.79460 11.39740, 41.80700 11.32260, 41.80790 11.31850, 41.79270 10.99620, 41.79180 10.97960, 41.80160 10.97140, 41.94160 10.94560, 41.98510 10.93760, 42.06680 10.92260, 42.11940 10.96020, 42.14180 10.97630, 42.14270 10.97670, 42.18900 10.97730, 42.19340 10.97310, 42.20970 10.98810, 42.28900 10.98450, 42.29190 10.98480, 42.35890 11.01920, 42.40470 10.98280, 42.50110 11.06360, 42.62500 11.08540, 42.64090 11.08830, 42.66340 11.07150, 42.67830 11.07090, 42.69790 11.05300, 42.74630 11.07220, 42.76450 11.06420, 42.78470 11.02880, 42.78890 10.99500, 42.79600 10.98550, 42.84100 10.97550, 42.91080 10.97760, 42.93060 11.01060, 42.94260 11.00290, 42.96680 10.99720, 42.93060 10.94060, 42.93110 10.93820, 42.93420 10.92030, 42.90990 10.87810, 42.88820 10.86010, 42.87180 10.85700, 42.86230 10.85520, 42.85170 10.84090, 42.83610 10.80490, 42.83010 10.79090, 42.81550 10.77660, 42.77610 10.73810, 42.77120 10.73150, 42.72230 10.65100, 42.69300 10.62520, 42.68470 10.59760, 42.69790 10.55420, 42.79870 10.45210, 42.79900 10.37510, 42.83260 10.27790, 42.85230 10.24440, 42.85370 10.21920, 43.00900 10.08650, 43.02480 10.04880, 43.08380 9.90740, 43.12140 9.88710, 43.24130 9.85090, 43.25560 9.84330, 43.28190 9.70290, 43.29210 9.64860, 43.29880 9.60650, 43.39090 9.55810, 43.49160 9.40140, 43.49290 9.40080, 43.64530 9.35830, 43.64670 9.35830, 43.68070 9.32360, 44.00350 8.99850, 44.00580 8.99650, 44.05100 8.98140, 44.65040 8.78440, 44.69020 8.77090, 44.81030 8.73020, 44.83080 8.71990, 44.86690 8.71070, 44.91370 8.69550, 45.48480 8.50710, 45.49990 8.50290, 45.79270 8.40550, 46.46240 8.18460, 46.52410 8.16230, 46.57910 8.14610, 46.75020 8.08510, 46.88930 8.03700, 46.91860 8.02880, 46.98970 8.00000, 47.01220 8.00000, 47.92100 8.00000, 47.98620 8.00000, 47.55770 7.56030, 47.35060 7.34790, 46.54040 6.51650, 45.94250 5.90310, 45.67200 5.62560, 45.53330 5.48320, 45.20770 5.14920, 45.15840 5.09470, 45.13060 5.07920, 45.02260 4.95240, 45.00000 4.93600, 44.98170 4.91730, 44.92240 4.91990, 44.58870 4.93480, 44.13800 4.95490, 44.01460 4.96110, 43.69070 4.87660, 43.65910 4.86800, 43.62970 4.85870, 43.45490 4.80140, 43.43490 4.79470, 43.41920 4.78710, 43.23550 4.69590, 43.04870 4.57590, 43.04430 4.57210, 43.04180 4.56810, 43.02020 4.51890, 43.00720 4.46770, 42.96940 4.40370, 42.96900 4.40270, 42.96800 4.40180, 42.92570 4.34810, 42.89800 4.31860, 42.88290 4.30610, 42.87600 4.31830, 42.81670 4.26440, 42.73300 4.26310, 42.58830 4.21490, 42.58160 4.21410, 42.52660 4.20290, 42.48910 4.20330, 42.37400 4.18980, 42.37100 4.18940, 42.19670 4.17890, 42.14120 4.17920, 42.10390 4.16130, 42.08240 4.15100, 42.02790 4.12490, 42.00000 4.09340, 41.98290 4.09470, 41.94620 4.03630, 41.94620 4.01140, 41.93440 4.00020, 41.92430 3.99850, 41.42270 3.28720, 41.29400 3.10460, 40.97930 2.80000, 40.97550 2.30900, 40.97300 1.31280, 40.96920 -0.11470, 40.97040 -0.82280, 41.56560 -1.61080, 41.56710 -1.64670, 41.30800 -1.96100, 41.21410 -1.89760, 41.07450 -1.98140, 41.02630 -2.04860, 40.90190 -2.01690, 40.91460 -2.18310, 40.74580 -2.27450, 40.82580 -2.39000, 40.60880 -2.55870, 40.51490 -2.51940, 40.37280 -2.57520, 40.16210 -2.72500, 40.17860 -2.82140, 40.14810 -2.94320, 40.16340 -3.12850, 40.12020 -3.28960, 39.97180 -3.40510, 39.86640 -3.63860, 39.87530 -3.69570, 39.77130 -3.95840, 39.62530 -4.19820, 39.53780 -4.43800, 39.47310 -4.51670, 39.39570 -4.53830, 39.42100 -4.63470, 39.32840 -4.63090, 39.33600 -4.56490, 39.26620 -4.58020, 39.22050 -4.67790, 39.21330 -4.85380, 39.13610 -4.91930, 39.13960 -5.11990, 39.10680 -5.17450, 38.99970 -5.46080, 38.89620 -5.71010, 38.81780 -5.85740, 38.80110 -5.95920, 38.77290 -6.02670, 38.79960 -6.10910, 38.85860 -6.17660, 38.83370 -6.31830, 38.90990 -6.44970, 39.02900 -6.49220, 39.12090 -6.56470, 39.22290 -6.67410, 39.23970 -6.74330, 39.35990 -6.84950, 39.47700 -6.86650, 39.54360 -6.98680, 39.54330 -7.09300, 39.48350 -7.16550, 39.43240 -7.17870, 39.42710 -7.24090, 39.37960 -7.28750, 39.35200 -7.39840, 39.31450 -7.44240, 39.27690 -7.58000, 39.30130 -7.68000, 39.28630 -7.72080, 39.43180 -7.81110, 39.41360 -7.90500, 39.44710 -8.00830, 39.36610 -8.18170, 39.28980 -8.26970, 39.26670 -8.32630, 39.30450 -8.42160, 39.29220 -8.51260, 39.33330 -8.54540, 39.36290 -8.62580, 39.35550 -8.68510, 39.44940 -8.79510, 39.49170 -8.81620, 39.43010 -8.90040, 39.47960 -8.96930, 39.50370 -9.12680, 39.59790 -9.13150, 39.62840 -9.17960, 39.64710 -9.36010, 39.59760 -9.41290, 39.67500 -9.49530, 39.73630 -9.65840, 39.74540 -9.77840, 39.79120 -9.83410, 39.78120 -9.92920, 39.81170 -9.98460, 39.90530 -10.04090, 39.97280 -10.13100, 39.96600 -10.20020, 39.98660 -10.12630, 40.12180 -10.17210, 40.12880 -10.25600, 40.15680 -10.26210, 40.18380 -10.25340, 40.20630 -10.27040, 40.24590 -10.28150, 40.28840 -10.26480, 40.32920 -10.35540, 40.42250 -10.36890, 40.42310 -10.47510, 40.39560 -10.51500, 40.52880 -10.48580, 40.58470 -10.60130, 40.58590 -10.69010, 40.48950 -10.74600, 40.57200 -10.81960, 40.48820 -11.00360, 40.56440 -11.03020, 40.49080 -11.14950, 40.50980 -11.19650, 40.43620 -11.23330, 40.37910 -11.33220, 40.47550 -11.40840, 40.43620 -11.72690, 40.48440 -11.91090, 40.53770 -12.00220, 40.49080 -12.13420, 40.51490 -12.32580, 40.48190 -12.53010, 40.57070 -12.53140, 40.57450 -12.71670, 40.63030 -12.74840, 40.56060 -12.80930, 40.51740 -12.91080, 40.47300 -12.88030, 40.40450 -12.95010, 40.44000 -13.03010, 40.55800 -13.05550, 40.56560 -13.31560, 40.58590 -13.36130, 40.52500 -13.50720, 40.48190 -13.52370, 40.57070 -13.56940, 40.53770 -13.63540, 40.57450 -13.71660, 40.59230 -14.00840, 40.63800 -14.01860, 40.60620 -14.14290, 40.62270 -14.21780, 40.69380 -14.18740, 40.72930 -14.33840, 40.62270 -14.47410, 40.80800 -14.41200, 40.83970 -14.54650, 40.79910 -14.62900, 40.83850 -14.68350, 40.83590 -14.82440, 40.75470 -14.87510, 40.71280 -15.08320, 40.63920 -15.08700, 40.62020 -15.14670, 40.67860 -15.26600, 40.58340 -15.41440, 40.57450 -15.48040, 40.42350 -15.62510, 40.36770 -15.72530, 40.12530 -15.95500, 40.10370 -16.07810, 39.96160 -16.24310, 39.86390 -16.23800, 39.78140 -16.30780, 39.85250 -16.43590, 39.78400 -16.49050, 39.46930 -16.68850, 39.33980 -16.74430, 39.18630 -16.84830, 39.12920 -16.85850, 39.06450 -16.93460, 39.07970 -17.00700, 38.95030 -17.02090, 38.81960 -17.06530, 38.68890 -17.07550, 38.44650 -17.15800, 38.19400 -17.26200, 38.08360 -17.32170, 37.83490 -17.41050, 37.33110 -17.67060, 37.10900 -17.85340, 36.88060 -18.16040, 36.60020 -18.44210, 36.37810 -18.69850, 36.38700 -18.78100, 36.27910 -18.88250, 36.16110 -18.90280, 36.15860 -18.79490, 36.11040 -18.91550, 35.98090 -18.90530, 35.84010 -19.00680, 35.60530 -19.22000, 35.43530 -19.42050, 35.29060 -19.56140, 34.99500 -19.78720, 34.87950 -19.85320, 34.80330 -19.76570, 34.75390 -19.78600, 34.73990 -19.88240, 34.78050 -20.14000, 34.67900 -20.17680, 34.73740 -20.24020, 34.65610 -20.41920, 34.69930 -20.43190, 34.74880 -20.54480, 34.89470 -20.69450, 34.97720 -20.70210, 35.06220 -20.88610, 35.05080 -20.97240, 35.11040 -20.96100, 35.06600 -21.13490, 35.13450 -21.41020, 35.27540 -21.65260, 35.28430 -21.81750, 35.31980 -21.91020, 35.33000 -22.18680, 35.41370 -22.19820, 35.46320 -22.09670, 35.53680 -22.19320, 35.53930 -22.43430, 35.50380 -22.58530, 35.51900 -22.83140, 35.54820 -22.92660, 35.60400 -22.92530, 35.48600 -23.18290, 35.48860 -23.32890, 35.42510 -23.50780, 35.43400 -23.64740, 35.37820 -23.69810, 35.35280 -23.80090, 35.39470 -23.90500, 35.49750 -23.85040, 35.55580 -23.86820, 35.49870 -24.00140, 35.50000 -24.10930, 35.40990 -24.25270, 35.20310 -24.49760, 35.14980 -24.58130, 34.83000 -24.74120, 34.47340 -24.86300, 33.99500 -25.03430, 33.73360 -25.11680, 33.35420 -25.27040, 33.13340 -25.38200, 32.85930 -25.55840, 32.80730 -25.61680, 32.69690 -25.85280, 32.61190 -26.04190, 32.68170 -26.18400, 32.72480 -26.18400, 32.83390 -26.28930, 32.90630 -26.11930, 32.95190 -26.09140, 32.89480 -26.65730, 32.89230 -26.85650), (31.77540 -0.99670, 31.77890 -1.05880, 31.84640 -1.05880, 31.86720 -1.15750, 31.84640 -1.31860, 31.79440 -1.48500, 31.74250 -1.50580, 31.76850 -1.60450, 31.72170 -1.67730, 31.68530 -1.89040, 31.61250 -2.01510, 31.69050 -2.06190, 31.63330 -2.36850, 31.75810 -2.33210, 31.78920 -2.48280, 31.71650 -2.51400, 31.74770 -2.55560, 31.78920 -2.73230, 31.94000 -2.65440, 31.98150 -2.77390, 32.01790 -2.76350, 31.96080 -2.62320, 31.98670 -2.49840, 32.10110 -2.50880, 32.09550 -2.48440, 32.06990 -2.37370, 32.16860 -2.38930, 32.22060 -2.27500, 32.30380 -2.26980, 32.37130 -2.43610, 32.54290 -2.49320, 32.62080 -2.47760, 32.65720 -2.42570, 32.69880 -2.48800, 32.81830 -2.49320, 32.80790 -2.66990, 32.85990 -2.71670, 32.84430 -2.83110, 32.75590 -2.92980, 32.81310 -2.96100, 32.84950 -2.84670, 32.89110 -2.83110, 32.98980 -2.88300, 33.00540 -2.84670, 32.93780 -2.79470, 32.86510 -2.63360, 32.87030 -2.50360, 32.95340 -2.39450, 33.10420 -2.38930, 33.20810 -2.51920, 33.35360 -2.50880, 33.42640 -2.55560, 33.42640 -2.48280, 33.47240 -2.44650, 33.64470 -2.31130, 33.83180 -2.22820, 33.83080 -2.19600, 33.82140 -2.13460, 33.77460 -2.08780, 33.68630 -2.11900, 33.60310 -2.18140, 33.44200 -2.15540, 33.35880 -2.17100, 33.26010 -2.10860, 33.24450 -2.05670, 33.40560 -1.96830, 33.54590 -2.03590, 33.57190 -1.98910, 33.44200 -1.88000, 33.30170 -1.94750, 33.33280 -1.83320, 33.44200 -1.80200, 33.47320 -1.84880, 33.56150 -1.79680, 33.59270 -1.68250, 33.70190 -1.67730, 33.64470 -1.57330, 33.68630 -1.51610, 33.85260 -1.43300, 33.77980 -1.40180, 33.80060 -1.32900, 33.90450 -1.32380, 33.87340 -1.27190, 33.90970 -1.19910, 33.98250 -1.16270, 33.98770 -1.10560, 34.06570 -1.06400, 34.06870 -1.01300, 34.07090 -0.97560, 34.11760 -1.00160, 34.18000 -0.85610, 34.07090 -0.79890, 34.03970 -0.66900, 34.09680 -0.53390, 34.13840 -0.53910, 34.19560 -0.42470, 34.34110 -0.48710, 34.39830 -0.45070, 34.45030 -0.51310, 34.50740 -0.47150, 34.43990 -0.38830, 34.45550 -0.34680, 34.56460 -0.32080, 34.63740 -0.34680, 34.75690 -0.33640, 34.85050 -0.27920, 34.68930 -0.09210, 34.50220 -0.18560, 34.45550 -0.16480, 34.34630 -0.19600, 34.38270 -0.30520, 34.32030 -0.34680, 34.24760 -0.32600, 34.25800 -0.26880, 34.18520 -0.19080, 34.12800 -0.07130, 34.02410 -0.07650, 33.95130 0.10020, 33.98250 0.10540, 33.98590 0.21120, 33.98770 0.26650, 33.89420 0.17300, 33.82660 0.19900, 33.70700 0.19900, 33.72780 0.24570, 33.69150 0.32890, 33.61870 0.31850, 33.62390 0.23530, 33.56670 0.17820, 33.43160 0.22490, 33.44720 0.29250, 33.36920 0.36530, 33.35360 0.44840, 33.22890 0.38610, 33.26530 0.36530, 33.15610 0.31330, 33.16130 0.25610, 33.07820 0.26130, 33.08860 0.17820, 32.97940 0.08980, 32.89630 0.07940, 32.87550 0.13660, 32.80790 0.15740, 32.78190 0.11580, 32.66240 0.08980, 32.66760 0.27690, 32.57920 0.17820, 32.53770 0.07420, 32.44410 0.02750, 32.23100 -0.01410, 32.18940 -0.07650, 32.08550 -0.03490, 31.94000 -0.12850, 32.01790 -0.30520, 31.90880 -0.44030, 31.84120 -0.48190, 31.79440 -0.57020, 31.80480 -0.64300, 31.72690 -0.73660, 31.70090 -0.84570, 31.76850 -0.87170, 31.77540 -0.99670), (30.57510 -8.25140, 30.56880 -8.29690, 30.56790 -8.30380, 30.47430 -8.35060, 30.43790 -8.43890, 30.49510 -8.52730, 30.54190 -8.49610, 30.55290 -8.52040, 30.56790 -8.55330, 30.65620 -8.51690, 30.79140 -8.56370, 31.00970 -8.78720, 31.10320 -8.77160, 31.13960 -8.70920, 31.18640 -8.74560, 31.20200 -8.63640, 31.18400 -8.60650, 31.19450 -8.59790, 31.18430 -8.59380, 31.13960 -8.53250, 31.11880 -8.38180, 30.97850 -8.27780, 30.90050 -8.01800, 30.79550 -7.87280, 30.75500 -7.74770, 30.57830 -7.49300, 30.60430 -7.39950, 30.60950 -7.35270, 30.52630 -7.18120, 30.57830 -7.01490, 30.56790 -6.96810, 30.50410 -6.91330, 30.40680 -6.81740, 30.33920 -6.65630, 30.28200 -6.61990, 30.24190 -6.57150, 30.15730 -6.46920, 30.06890 -6.45880, 29.95460 -6.50560, 29.81430 -6.37040, 29.71550 -6.24050, 29.73110 -6.04820, 29.94420 -5.92350, 29.94940 -5.81950, 29.84550 -5.57000, 29.74670 -5.46090, 29.81950 -5.15430, 29.78310 -5.01910, 29.67910 -4.94640, 29.60120 -4.85800, 29.59600 -4.75930, 29.64280 -4.58770, 29.66150 -4.44680, 29.66360 -4.43180, 29.60120 -4.35910, 29.50870 -4.17400, 29.42970 -4.01600, 29.33090 -3.76140, 29.33220 -3.71440, 29.33860 -3.47890, 29.34130 -3.37680, 29.22810 -3.34190, 29.20670 -3.33540, 29.14900 -3.36120, 29.13340 -3.43390, 29.15420 -3.67300, 29.09700 -3.77700, 29.10740 -3.99530, 29.08150 -4.02640, 29.10220 -4.22910, 29.05030 -4.31230, 29.14380 -4.34870, 29.23220 -4.05760, 29.25820 -4.12520, 29.19580 -4.44220, 29.10740 -4.62930, 29.09180 -4.76970, 29.09600 -5.00020, 29.09700 -5.06070, 29.14380 -5.23220, 29.35690 -5.59080, 29.32570 -5.82470, 29.18020 -5.91830, 29.19060 -6.07940, 29.26340 -6.11580, 29.40370 -6.41200, 29.40890 -6.46920, 29.48160 -6.51590, 29.49200 -6.68750, 29.55960 -6.78620, 29.63240 -6.82780, 29.67910 -6.91610, 29.78830 -7.05650, 29.96500 -7.10840, 30.08970 -7.20200, 30.18330 -7.36310, 30.21450 -7.47220, 30.19890 -7.60740, 30.26640 -7.76330, 30.27160 -7.84650, 30.49510 -8.02840, 30.58870 -8.15310, 30.57510 -8.25140), (33.95130 -9.67570, 33.89420 -9.74350, 33.90450 -9.82660, 33.95130 -9.89420, 33.94090 -9.96180, 34.00330 -10.05530, 34.01370 -10.13330, 34.07090 -10.21640, 34.14360 -10.26320, 34.24240 -10.38270, 34.16970 -10.56950, 34.20080 -10.59580, 34.24210 -11.00060, 34.25280 -11.10520, 34.21640 -11.16750, 34.26320 -11.30790, 34.28390 -11.51570, 34.32550 -11.65610, 34.32030 -11.70290, 34.19040 -11.81720, 34.19040 -11.90030, 34.06570 -12.03550, 34.00530 -12.23060, 33.99810 -12.25380, 34.09680 -12.38890, 34.16960 -12.39930, 34.20600 -12.49800, 34.18000 -12.55000, 34.19560 -12.66440, 34.27880 -12.76310, 34.26320 -12.82550, 34.30470 -12.86180, 34.34110 -13.01260, 34.35150 -13.26200, 34.30990 -13.37120, 34.33240 -13.41000, 34.42430 -13.56870, 34.50740 -13.56350, 34.62700 -13.69340, 34.58020 -13.90130, 34.52300 -13.97410, 34.54900 -14.07800, 34.56390 -14.10210, 34.61660 -14.18720, 34.68410 -14.21310, 34.70490 -14.27550, 34.74010 -14.26570, 34.79850 -14.24950, 34.81930 -14.14040, 34.93360 -14.05200, 34.94920 -14.15080, 35.03760 -14.16120, 35.11550 -14.28070, 35.23510 -14.40540, 35.29220 -14.34310, 35.21950 -14.21310, 35.18310 -14.05200, 35.12590 -13.94810, 35.06870 -13.73500, 34.86080 -13.71420, 34.85050 -13.53750, 34.85620 -13.48180, 34.86600 -13.38680, 34.78810 -13.31920, 34.81410 -13.22050, 34.81410 -13.08530, 34.75690 -12.97100, 34.76210 -12.86700, 34.81930 -12.74750, 34.80370 -12.64880, 34.70490 -12.48760, 34.69970 -12.17580, 34.81930 -12.06670, 34.88160 -12.03030, 34.88680 -11.96270, 34.95960 -11.78600, 34.96370 -11.57070, 34.96440 -11.50890, 34.89060 -11.38310, 34.80560 -11.33220, 34.76360 -11.34500, 34.71030 -11.20110, 34.61500 -11.10940, 34.59390 -11.02830, 34.63970 -10.93140, 34.65750 -10.77530, 34.65690 -10.65470, 34.58000 -10.53280, 34.59250 -10.48170, 34.56560 -10.39670, 34.58610 -10.30080, 34.52390 -10.09670, 34.53750 -10.06360, 34.49640 -9.96310, 34.33810 -9.78750, 34.32530 -9.73280, 34.08330 -9.51860, 34.03940 -9.48280, 33.95720 -9.52670, 33.95130 -9.67570), (13.33890 13.69720, 13.35440 13.56120, 13.39080 13.41050, 13.48960 13.32730, 13.49690 13.31330, 13.54670 13.21820, 13.77020 13.06230, 13.85860 13.13500, 13.88460 13.10390, 13.81180 13.00510, 13.84820 12.98430, 13.86380 12.88560, 13.81180 12.85440, 13.86900 12.81280, 13.85440 12.74940, 13.84010 12.68750, 13.83780 12.67770, 13.94690 12.57890, 13.99890 12.49060, 14.10800 12.53730, 14.14750 12.52070, 14.17960 12.50720, 14.20680 12.49580, 14.25880 12.57890, 14.20680 12.64650, 14.26920 12.69850, 14.37310 12.66210, 14.47180 12.66730, 14.52380 12.79200, 14.52380 12.89080, 14.56690 12.88060, 14.61220 12.87000, 14.68490 12.90120, 14.75770 12.87000, 14.93440 12.89080, 14.99160 12.93750, 15.05390 12.91160, 15.09030 12.96350, 15.14230 12.93230, 15.19950 12.96870, 15.16830 13.04150, 15.06430 13.06750, 15.02850 13.06750, 14.92400 13.06750, 14.90320 13.17660, 14.59140 13.26500, 14.43550 13.24940, 14.37310 13.18180, 14.23280 13.16100, 14.14960 13.26500, 14.22240 13.28580, 14.16000 13.36890, 14.22760 13.47290, 14.18080 13.48850, 14.09760 13.41570, 13.99370 13.42090, 13.86380 13.64440, 13.85340 13.77430, 13.77020 13.87830, 13.68710 13.90940, 13.61950 13.99260, 13.57340 13.97550, 13.47920 13.94060, 13.37520 13.93540, 13.23490 13.87830, 13.25050 13.76910, 13.33360 13.74310, 13.33890 13.69720)), ((8.84830 3.51190, 8.77470 3.39640, 8.76710 3.31650, 8.67820 3.20860, 8.44980 3.27080, 8.41940 3.35580, 8.47140 3.47130, 8.56020 3.45990, 8.61480 3.64900, 8.71500 3.78730, 8.73530 3.75680, 8.90160 3.76320, 8.93330 3.63500, 8.84830 3.51190)), ((8.34430 4.60160, 8.31540 4.58750, 8.30910 4.60930, 8.32070 4.61150, 8.33220 4.63650, 8.34010 4.62570, 8.34430 4.60160)), ((40.17990 15.62660, 40.23700 15.61640, 40.32070 15.68870, 40.41210 15.63160, 40.42480 15.56190, 40.31950 15.56190, 40.12400 15.60250, 39.99080 15.77500, 40.01240 15.86510, 39.95780 15.88670, 40.08340 15.84990, 40.17990 15.62660)), ((-15.47510 11.56780, -15.45930 11.55610, -15.51070 11.56400, -15.53680 11.53700, -15.54460 11.50250, -15.57330 11.50170, -15.63260 11.52550, -15.61120 11.53560, -15.58990 11.56960, -15.55040 11.57550, -15.52230 11.61410, -15.45940 11.63350, -15.48000 11.59920, -15.47510 11.56780)), ((-16.05340 11.17350, -16.04170 11.19480, -15.98480 11.20630, -15.98530 11.17500, -15.96680 11.12330, -16.01450 11.06780, -16.03430 11.09870, -16.02260 11.12080, -16.04940 11.13490, -16.06360 11.15940, -16.05340 11.17350)), ((-15.89860 11.10480, -15.88060 11.05810, -15.94470 11.04570, -15.99290 11.06050, -15.96320 11.07450, -15.97730 11.08580, -15.95470 11.12280, -15.97880 11.16590, -15.95810 11.20340, -15.91180 11.16850, -15.89860 11.10480)), ((-15.69910 11.43680, -15.73220 11.44830, -15.70250 11.46490, -15.68520 11.49640, -15.66370 11.50490, -15.66660 11.48390, -15.64470 11.46510, -15.68050 11.43450, -15.69910 11.43680)), ((-15.86700 11.34230, -15.89600 11.32470, -15.88150 11.35560, -15.84980 11.38120, -15.84670 11.35760, -15.86700 11.34230)), ((-16.12290 11.41230, -16.09890 11.42680, -16.07290 11.42450, -16.06050 11.39390, -16.13970 11.36710, -16.15990 11.39690, -16.12290 11.41230)), ((-15.65900 11.30720, -15.66080 11.23080, -15.67370 11.25120, -15.69890 11.21250, -15.71900 11.22460, -15.72350 11.16850, -15.77420 11.16740, -15.77960 11.22480, -15.75210 11.25360, -15.75660 11.27050, -15.71460 11.29690, -15.65900 11.30720)), ((-15.84550 11.19940, -15.87510 11.19210, -15.90870 11.21590, -15.85890 11.29950, -15.83790 11.30860, -15.81950 11.28930, -15.84350 11.26170, -15.83190 11.22340, -15.84550 11.19940)), ((-16.20110 11.28280, -16.18090 11.29800, -16.14870 11.26870, -16.15130 11.25380, -16.19780 11.21610, -16.24830 11.21260, -16.28560 11.23690, -16.25050 11.28510, -16.20730 11.30720, -16.20110 11.28280)), ((-16.01980 11.33430, -16.02700 11.31940, -16.06990 11.31410, -16.10510 11.28840, -16.13180 11.31830, -16.12340 11.34450, -16.07840 11.33140, -16.06110 11.35090, -16.03350 11.35780, -16.01980 11.33430)), ((-15.79460 11.32120, -15.80140 11.30470, -15.83160 11.30690, -15.81830 11.35590, -15.77600 11.37670, -15.79460 11.32120)), ((-15.98000 11.51980, -16.01310 11.52360, -16.01270 11.54660, -15.98840 11.58420, -15.94780 11.54700, -15.98000 11.51980)), ((-15.96700 11.51340, -15.94820 11.50510, -15.93550 11.50610, -15.90790 11.50970, -15.90070 11.45220, -15.96050 11.42130, -15.99510 11.43700, -16.02660 11.42330, -16.07880 11.44580, -16.08160 11.45830, -16.05110 11.47330, -16.02180 11.51410, -15.99470 11.50520, -15.96700 11.51340)), ((-16.23770 11.50790, -16.16270 11.53060, -16.17120 11.48780, -16.22060 11.44170, -16.26960 11.44230, -16.30230 11.43250, -16.30310 11.45590, -16.27250 11.46860, -16.23770 11.50790)), ((-15.93280 11.51960, -15.94650 11.50580, -15.96710 11.52420, -15.95130 11.53810, -15.93280 11.51960)), ((-16.33550 11.54690, -16.28520 11.59300, -16.24670 11.57860, -16.24520 11.55420, -16.27000 11.48950, -16.30710 11.48400, -16.33790 11.50190, -16.38420 11.50250, -16.39450 11.49120, -16.41900 11.52830, -16.38860 11.56030, -16.33550 11.54690)), ((-15.94650 11.54720, -15.97960 11.58550, -15.95160 11.60930, -15.93100 11.57940, -15.91710 11.59230, -15.89640 11.53210, -15.93220 11.52320, -15.94650 11.54720)))&quot;</value>
                  <value>1.1237499713897705</value>
                  <value>29.444850921630859</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='sparklines'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Top 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[io:Top 10 Contries:nk]' type='filter' />
            <card param='[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Estimated incidence of TB cases who are HIV-positive, low bound Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aqvomm1r0ry4215pt6ck0gohqxd].[none:Country or territory name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%YEAR_OVER_YEAR_CHANGE' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Africa' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='America' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      CxdCzdTvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Eastern Medeteranian' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAa7UlEQVR4nO3deZBcx2Hf8W+/N/ex970AFucCWBwEINwCCZKACFA0JUoUbdmSVaajyE6l
      Kn/YlT9STqWSv1yVVFKppJzIZhzJFcaOypRIU6IoUeAF4oYWBwECBHaxOBZ7Ynf2mNm5X3f+
      GBDAYmb2xuwsXn/+QWHe7EzP7vtNH6+7nwiHw8rpdKJpduRwOp243e75LoemzQtjvgugafNJ
      B0CzNR0AzdZ0ADRb0wHQbE0HQLM1HQDN1nQANFvTAdBsTQdAszUdAM3WdAA0W9MB0GxNB0Cz
      NR0AzdZ0ADRb0wHQbE0HQLM1HQDN1nQANFvTAdBsTQdAszUdAM3WdAA0W9MB0GxNB0CzNR0A
      zdZ0ADRb0wHQbE0HQLM1HQDN1nQANFvTAdBsTQdAszUdAM3WdAA0W3PMdwHsZDAU4uKV65hC
      sX7NKsrKSue7SLbT3dtH0O/j2JlLDIXjOgCFkEqlOHXuMv90vIOU8GCkI3QNjPHKV5/k1NmL
      tKxaRklJcL6LuSAppUgkEng8nqxj7R03+OTsNQwDnA6TvlCErqEU7vQwMVcNGKYOQCH84tAR
      PmmLgeFFAMoZ5LNbQ0R/dogr3WMsW1yvAzBFhz45RWVZCSuXNnK9s5uPWtvpGYrz/I6VrFlW
      TyqVpqs/xOlLt+gYtJDCiRACSKOUiRULYQXqECLT+tcBeMTOX/iM420jYHjHPR62PFzoSrBv
      Qz21NdXzVLqFRUrJkQudRNIuTC6RwgWGE4wAb57sQhy7DkKgTBdCmGCYmS8cpZCRfpSSmMHa
      eyc/6E7wI1dbXU3aUlmPCyF4em0ZB/dum4dSLUy3u3vwOAyk4SJl+DMn/13CMMHpBYdn3AkO
      QDqBMpw4Suqzji3YGkApRTgSIRFPUF1dNd/FyWtoZBRluBA5jqWkwDD0d9BklFJcbbvGoVNX
      6E/6pv8CwgCyv4RgAdcAJ1o/5S//7n3e+M3p+S7KhKQCkevsB45dHeIf3/kIy7IKW6gF5uat
      Tn74zgXaQzM7XYXDhUrHcx5bsAE419ZDAi8dIcnHJ86hVCbhSimklCilaGtvn+dSQlmJH2Qq
      5zFluDjVPkQkEilwqRaWgD+AxyEQM6wtVSqO4fLnPLYgm0Ch0BDtvVFw+rFw8E+nujhz5TY1
      5QFu9Q2TTCtK/W4i0TjPDI3hdJhs37x+XsoaDPhxCIt0vicIk3g8TmmpviaQT1VVBX4XJHJ/
      j0xKpqIIpzfnsQUZgNMXriIdvvvtasNBZxg6wwkg80FHRkEpH2+c6EYoRUfXIC8f+DJOZ2E/
      8vXOblLCm7MPgFKsW+Sntra2oGVaaJRShMfi4Mp9Ek8uTxuUBdgESiaTnPq89+7Y7sSEEJle
      v2Fyqn2I0FCoACW8L5FIcKmj524n7CFKUeNN8Y19ehRoKmoDitRgB0rJaf+sSicQDnfOYwuu
      Bjh6+gKhpCtvxzIfZbgIDY1QW1PzaAr2kHQ6zf99+yMu9qrssEqLbct8fH3/XnzemX6r2cfh
      k+e5HS/BLPEhoyFM/9RG/WQijIyHMTyl2UOjgJkcXlg1wMBgiA8+7cr5YSYjDJNbvUOPoFS5
      fXLyHBd60rmHgKwkz2xvwevxkEzNsGFrE1JKWi/fQgkTlY7l/SZ/kLLSpEd7UErhKG3AcOfu
      AK9fUrowAmBJydHT5/kv//AJY9bkv4B8gr6Z/+x0JdMShJn7oNPLmx+e4/MrV/nPf/UjUjoE
      eV2/cZPOEbAidyCdwHBPMGVEKayxEFY0hBmsw/SUTPjaN0Op4m4CRSIRjp25xMlLXQylPCCy
      JzxNx83eIXbPUdkms23jKj44/zEpkbuJ03ZH0v6ry5S7yrjV2cWK5UsLVLKFQynFqUudmSkN
      Agx//sECmYohY8MY3nJM59TOk6GEs3gD0NnVw9/+/DQjKRdC+CbqyE9ZLJFGSlmQq69lpaUs
      r3bRdieFfOCS/T1CoBxeBi0PvzlxmTuDITa0rMbvz11d21E0GuWz9k62NgZo7SrN2ZxUSiLH
      BpHJMcxgHcYUT364O0gSj8eV2124psFUjIyG+e8/+ZhQIseJMwtOK8K/+/7z+P0zuJw+A1JK
      fv3xKd67ODRpvyU93ElJeRX7tyxhWWMNkbEYN3oGaFnRSGV5OcFgYEojX1MVj8cZCA1x+kIH
      AA1VQVqalxEIzO37zEY6nSYSGcMwDP7Da++i3PevlSilUMkIMhHB9FcDCis2hCMwvUGOogtA
      JDLGD984THdk7r+llVIsr4DvvrCL8gItRunp7eM//b/j4Jh4tCc1fBtn2SKUkggrBYYJhgOs
      BE7SbFhawdee+RKBgH9WNZhlWXx0/Cwfnb/FWMoER+YbUymJR8XY3VLL7+zbXTQhkFLy2k9+
      xcVrPTiCtQjTiZIWMtKPcPkxHmjnp0e6cZQ2TOv1i64J1HdngK7h1JR6+5P5YnoEqLstKMFQ
      OIHDzNM5fQRqa6p5cfsS3v1tJ2kju3pWUiLH7mC4MrWSEAY8+NlNNynctN6K8+mPfkOl32Tf
      tma2PrF22mVJJpP8+M2PuNxvIYR/3F9fCIOE8HOuvZ9nd8XweNwYhjHvQZBScq0njKOkHis6
      CFIihMAI1GRmgD5ApRPIRHjijvJDii4AV2/0gjk3TZ9yZ5wnNywi6HPjcJjc7h/B45AFawIB
      GIbBM7u30Ly0gf/x5kli6n4IZCqGjA5l5qgbE4dSCEHa9NMXh0Onr047AEop3jp0gs/vqAmb
      Y0MpL//2f/4cn8tgR8si6ir8KKXYsHYVPl/hfm9fkFKSkgphmBM2b2QyinB6kPFRZDwMgOEO
      jKshcimqALR33OSDi/0I4ZrV66h0nIAjzeJKH0/u2ITDkfmYm+aikDPUUF/L0movl/sztZJM
      jiHjo5gl9dP+lh2IWISGhqgoL5/yz0gpudoZ4oupInkJgfCUEQM+vDwCjABwq3eYV17YSzKZ
      xDRNzBnWokrluDA4AdM0CXqcPDxdUEkLGRu5N8vTcPkwg3UIIe5PjEyOkR7twfRXIfJ8qRZN
      AJRSvH/qCtYsT36AnSsCfPPgUzgcjnmvwr8ghKCprpRLfUMIyJz8d/9g02WZPn55+DzfOrAz
      51rYXAzDoKbMR+hO7nnx+coMoFIxfnupj1A4zs3+MKBorPSzqLqUlhWNLFlUz0T9yHg8zulz
      l3C7XRw+007L8jqam+pYmWfo9+GROocp4IEZ4+nRHgBMbzn4yrN+h1/8X7gDCJcPOTYAhhPD
      W5b13KIKQPdgGAjM7nWsFCsXN+J0zu0I0lxoqq+Ec4OZDu40vwkfJITgzK0YV/72XRoqvPi9
      LhqrgqxYUs+ihrp7Nd7DP7Nz/WIuf3Bj2lfSrXiYpL+KKwOAkWlfXxuCa0MRPr58kabyz1hU
      5Wfj6ibKSoJUVVVmmmzpNB8eP8fRz7oYSbnulsNL98VhPrsxyL7RCF6fF7/XQzKVZmhklIsd
      fdRXBjj49E4A+vrvMJIwx52ppr8aGRtCTGHIUwgDM1CDSsWwwj0IhxfTd7/mLJoAzNU3tTCd
      nP68i80bW4putdXixgbM9BmkqxRhmNNuDowjDMaUj7ZBgBRnOwcRrT3U+GHf1hVsWr8a50NB
      GInEmckFFdNbioyNYPorcxx0cnMUbozEOdJ2EUOlWVnrZfOqelqv9nJt0ALhGT+ELwQ9EZPX
      P76eKY6UKGGA4UAg6BroZd+XUzidTtpudCFN97hSC9OBcAexxgZzlykH4fTicHqRqShWpB/D
      X53pTE/7t/GIpFIpvK5ZjM4ohVPGWFMNe7esLLqTH8Dn81Fd4kZZ6btXN+eueSaEANNNf9zN
      3x++yWv/+D7hyBiQqV17+vp597edM3tPYU46C1MIgTBdKIePtgH4yfEeroXIPx1ECDBdYLgy
      63hNV6ZmEoJQzKCntx/Lsjh1uTtnmQ2nB+FwI+Oj0/oohtOH4a3ACveipFU8NYDL5eL5XWv4
      8QfXEMb0iqWUotqd4Acv76Wqcuodw/lQ7Yeu/gHM4KNbAyAMk/ZB+K9//wG7W+oZicQ40zFM
      XM1saNmKDk55BmamAGJWF+6V6eJCWyclwQDdQwmEO7tfqJRCJsKZfsA0CdOBGaxFRu4UTwAA
      bvQMTvvkN1Sa/Ruq2LfnS1lVfrGRUtIzYuEoqSvI+w0lXbxzbvDu/2Y2uKCUAiUnHaadMSsB
      5vhgCiFovdrDmqV1mVriwfJImZnmnBzD9ASn1A/IRQgDM1hbPE2g2919nGqbwnRlpVAynRn+
      kmn2rC7jwN7tRX/yQ2YkZu+W5TNa1DFfhBAgDJR8BGWWaTY05A7mcMLko+Nnsi6IWuFehOnA
      Eayd1gWvfIrirJFS8tP3W4nJPGO1KkltULBuaTWWVDTVV1AaDHDzdg9bN68vmqHOqdj6xFp+
      daqDKAtn0pvhcKGsJCLHlezZERhIDGkhjfFBEMLgZnc/0qxFODwIw8CKDGD4yjHyrO+diXkP
      gJSSXx9u5eawyBqgUEpR5UnznYNbWNJYn9WxXbxoevM+ioHH7WZRlY+rA/NdkqkTnjKscB+G
      c46bboaJ8lawqznJ0bbRcUtHK1xJcFaiIpnpDUgL01+BcMxtCOc1AD19/bz5/hnaB7MXjwiZ
      Yn2jh987+ORjN0XY7XQw7spOkctcXX00zbbbfYP8q9/9Mq1Xf01c3G/S+J2SzlET0zvxVIbZ
      mrc+QHdvP3/105O0h0TOobJFpYo/fnn/Y3fyA6TSC+fkf9QGo4qjrZdorPLDF5MXZZrFNUHU
      NAdEZqLgAUgkEhw7fY7X3j5NVOYfmTBmsO5XW3iEMDh0vo+dLYup9We+GHxGkqQ0UOLRB6Ag
      TaDI2Bhvv3+K7oEwfSNx0o4gYpIPt4D6tdPWVFfG53eG57sYRUOZbt46fp2v71rGL0924DQd
      bF7TxMZmxZtH2uZ8YdSDChKAU63nGRyN4XY5aKoOAAohLL7o9X5xst+bxAQ0VD6+++VHosn5
      LkLRGUs7sSzJn393P0PDIyxqrAcyV8//25tn52R9SC4FCcCzT+3m2UK80QKglKLt9iCTTku2
      GQWcuHSbzRvW3Dv5AZYuWcTmpjbO3k4+kuFu3dCeBzOdSz+fZje5YQqvLwQ3huDy1WtZj3/t
      mS0EHI+m1tQBKDAhBBuWF2Z3urmk8uyvP5eEYXKtK3v7yrKyMr65pxmh5n70TAegwK5eu8G5
      jjvzXYyidbb9DtFoNOvxzRvWsKpq7k9XHYACsiyL13/VSv/YvF+AL1oR6eFo62c5jz23ax0O
      mftGFzOlA1BApmlycEczsHAmwxWaEIIjF7sJh7NvGrJ86WI2NQUf2O1j9nQACmznlnW01Dnn
      9I/4uBlNu3n3cGvOYy89t4ulZXP3BaIDUGCGYfD87nVg6WsB+QghONMxRCiUPT3e5/Xy4lMb
      cTA3vz8dgHngdrswF9BkuPmQwMPh317KeaxpUT2lrrn5/ekAzIOqqiqebKlGJEYgFb0/CUy7
      RwjBqSv9jI2NZR1TShH0uubk91Z0e4PahVKKWCxONBrlZ++38nlXGFyz2xLmUUqNdOOc5r6b
      s6YU25f7+PYLT2Udar9+k797p5WxWS4s0gEoAlJKrnXc4IfvXESZxfm3mJcAAFgJvrmtlj27
      d4x7WClFIpHkyOlPee9cH2kxswlzuglUBAzDYOWKZays1qNDuTQtacx6TAiBx+Nm/5Pb+Mau
      JSiZ90a0E9IBKBJCCH73wE6e31hOc5XCTwTS8ZztXKUUThnliQYHPhF7zENjYFkTD3tu29RC
      Q2BmQ6P6kmQRqaws57m9mao+mUzS1z/A4dYrtN6MZdbPKoWHGNubq9m7fQcV5eWEIxEOn7rI
      0Us9xJR3QW0QMBXKcHCxvYulTUvyPsfhcLBr/WJ+eqJ72tu36D7AAvD+0TN8ePY6O9Y28NTW
      dZSWZq+THRkd5cMTFzh2uZ+UMfdBmLc+AOA1kry8ZwXrVq/EnWOTLMh8YfzHH71LKDW9RfM6
      AAtEMpnE5Zp8c6vh4WEOHfuUk1cHsRxzt5//fAYAMtuhb1ni5Q9efCrvdPI33v2EY9eyJ9JN
      RAfgMaSUIhQa4r1jn3KmYxjLnP3im2ToBuaDN6hQKrN078Hux8P/H1+qzD/SQsZHMHwV444a
      Tm9mw2Apkal8E94kKyrg1VcOEAyMHzJWSvHjnx7iQu/0+gK6D/AYEkJQWVnBt39nL8/03+G9
      Yxf49FYEac5iTx0rCanY3VWs029eCQTqbtlMbylKpu5lQgBWcizTz0lEMju+5WnCXetLc7ur
      h7WrV417XCnFaCwFTK8PoAPwGBNCUFdbwx++9Cxd3b38+thFLvfEs3ZhmwrD5Z/yVuQzIZTK
      hMxbNuH+sEpJegZGWbv6ofIZBrvWL+HGkVuIfDtS56CHQW1ACMGixnr++Fv7+ZcvbWZFuQRZ
      XHenF0IgHO5JN0cWwuDQ6Xa6e3qyjnlczmlPj9ABsBEhBMuWLOJf/P4BXv1KM3XeBMiFNylP
      CjPnZshrm5ezpGx6zTMdABsyDIMNa5v58z96gVd2LyJoRJmg91p0ErgJR7JHe5xOJ7/33Jdw
      qsSUX0sHwMZM02TX1o38xfdf4OCGcmoDAh6YUqCkhbTSSGtm0wweGSXxeHL3Yxrqavn+C5to
      rjZxMnm59TCodo+UkouX23j3xFV6Iwbp4U4Md2a40fAE53xn5hmTab5/YA0tq1dM+LRbnV38
      zduniar8w8C6BtDuMQyDjetW82ffO8jLuxrx+PyYgWrMQHXxnPyAQhCLT744fsniRr7zlY2Y
      Kv/qMR0ALYvT6WT31o2UlxXn9pTCMGnvnNoNFlavXMqyqvyLZ3QAtAXpeu8IqdTkQ7mGYbB7
      QxPkub+BDoCWlyjigaH+mIO//F8/58q1m5NOB1++pJEKT+7hXh0ALa8iPv9BmAxbfv7h0Kdc
      v9k54VNLSoI8vWlJzrvc6ABoC9po0slfv3WS0dGJb5i9fdNaVlSIrNpCB0DLq9jX1iiZxiui
      HNyxkmBw4g67y+XiB688yxON9zvESqZ1ALSFRymFacV4cUsN/+aPDvD0zk1TWgDkcrn47tee
      wi8yW63IeFgHQFt4lgQSfHffGp7ds41AwD/l1W9j0ShCCA5sXwFKoqykDoC2sCgl2bCygSfW
      r5n2zw4PD3Po/Q/ZuWU9DQELlU7q9QDaQiPw5ZkHNJnGhgYaGzLLOpsqXdweqtAB0BYWp4yx
      ZmX+HSKmqqysDOGUOgDafUopPjx+js7eENFEipGYLLpxwqYqD+VlZbN+nRu9wwghdAC0+5RS
      fNDaTlSUAAKM2e27OdeUkmxZ3TAnW744SIMyii3f2nz67EoHiSK+fatLRtm4dtXkT5yCzWuX
      gtLXAbS7+u8M8IsjF7FmuMlsISQtSCSnvtprIquWN+FUCR0ALaP1Yhv98eKZ85+T6WIgNDwn
      L+X1evE6hQ6AllkJlkim8k4ZLhaGTFFVPvsOMGSmSa9fVq0DoMGZ85f4+OrYtDeWLbSgx8Af
      mLuO+Z4tq3UANFi5bDFGenp7as6HJ5ZX4p7C/qhTJSi6UV6t0JLJJK//4ijKUVxDnlmsJE+s
      nv0FsAeVlAR1AOxuNBwhNBIhYMaL9kYbThVncSBJXU3N5E+eAqUU8USC9o6belsUu1NKoZTi
      rfeO8knbWMFvsJEJnUIgci9AkGl+/6mlbNu0bk7ez7Is/s9bHzIWS9IRkroGsDshBIZhsKVl
      GaLQ/YBkBE9qkFefXkyZGc75lKXlgq1PtMzZW350/Cznu1NcG87ccUcHQAOgvrYaUeANc8t9
      Jn/2vQM0r1pJOMf1LQ9xvve1PXNWK9241cV753pAQUAN880d9ToAWobL5eIrWwtbC4QSJuHw
      GJC9Vhegwm9SWjJ3exOdv3KDFC6QSaJJxdtHrugAaBlCCJ7esRG3WciOsCCWSOJyOakMju+H
      KqVoqAzMaZ/EaQpEKkpNQFBd5iORSuvZoNp9hmFQ6nMSj6pHviJeqDTPbqhmzarlCCFoKPcw
      0GOhhEnATLKjuYq1KxfP6Xvu37OVHU+EKSsr48PjZ+kbc+gaQLvP5XLxp688TbUvexMpkY5S
      6YyyvCw9vZtSy3TWFAulFOsbPHz16W2YpokQgu+9/BwHN9eCtGhuCPDCvl0sb1o02480jsvl
      orKyEtM0GQ7HUEJPh9YeUloS5BtPrUXI+xvKKqV4Ydti/uJPvsE/+9Y+FpdOrXYIGHFe3b+K
      r26qwsP9zWzr/BavHNyJYdw//YQQ7P/yFlZUQsA7d1d783lmx3oCDr0oXsthzarl1D5wYXh1
      tcHTu7YA4PV4+PZzX0JYcUBBagySYUhF73dkZZrl5YpNS0vY0NLM/ie38a+/s5cN9SYb6k3+
      9FtPEvBnX3kWQmAiWb+y8ZF/xsqKcv7g2RbdB9CySSlJWplmi1KS9cvqxn1b19fV8CcvbOBO
      aITm5YtxOp2MjoZ5/ZenSEnBxlVVvPTc+OHL8vIyXn15/6TvvXn1IpoWP/oAAKxpXqGvBGvZ
      Pvu8jf/93hWU4YRkmH///ecoKcm+O/3D0ul0ZtMq0xwXmGKmawAtS9DvY0mpJBSJsG5NDYGH
      bkqdjyPHjeuKna4BtLwsy8IwjILPDyqkhRdZrWBMs7gXyMyFhdFQ07RHRAdAszUdAM3WdAA0
      W9MB0GxNB0CzNR0AzdZ0ADRb0wHQbE0HQLOtm51deiqEZi+WZRGLxRgIDfPaz1t1ADT7iMVi
      /M0bH3DrThRluMDh0QHQ7EEpxZu/OcnNEQe47q9t0H0AzRbOXPic09cjWY/rAGiPvZu3e/jZ
      kXaEmX37Jx0A7bH3+jsniMncO03oAGiPvVgi/56nOgCarekAaLamA6A99iba7lcHQHusTXbb
      Jx0AzdZ0ALTHXr5djcrdaR0AzZ6CjiT//Os7dAC0x1umDzC+DvAaKX7w9e3U1VTpAGj2IqwE
      f/iVdTTW1wK6D6A95gzDYNOqOlAKpMVLu5pYs2rZ/ePzWDZNK4gXn91OfcBiVbXBnm0bxx3T
      u0NrttDT14/L6aSyonzc4zoAmq3pJpBmazoAmq3pAGi2pgOg2ZoOgGZrOgCarekAaLamA6DZ
      mg6AZms6AJqt6QBotqYDoNmaDoBmazoAmq3pAGi2pgOg2ZoOgGZrOgCarekAaLamA6DZmg6A
      Zms6AJqt6QBotqYDoNmaDoBmazoAmq3pAGi25kil8t9EWNMed/8fuf5eVNaunI0AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Europe' width='192'>
      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
      y5c/+xiapk1ZbL9hGPy3H75Mb96Pz45z//paHtmxZVryCFwBzCCGYaDrY2+Mb5abmZi2bfPL
      X/2GeFZSFPGx5c71lJaWXGfeHTp6ksOnL7Jt/RLWrVs7LQktUkrOnL/IwfpLPLB5FXXV05dQ
      7wpgHpHP58lms1d7FYwysc+cv4gQsHzJwjnTbPxWcAXgMiaG4URUzuZE91vl9pf4FNPa2koi
      kZjpYUw6+Xyeb//gWeLx2++7XYvr/7xFqqqqbktToaW1jQ0rF1JQMLMNM6YaVwC3yK2cQs5m
      jp5twcxPT4XomcQVgMuohIM+DO/t1xf4o7gCmESklNi2fVu8FdavWIhhjh+7cztw+xmv00hH
      RyeZTIbOzk4ABgcHOV1fP8OjmhwqKyuorbm1WqJzAdcNegsMDAwwMDBIMp1F0xQ8mkZtXS2e
      STjccpkeXAHcApZljfAA3c7+8tsVdw9wC9wOtv58x90DuMxrXAG4zGtcAbjMa1wBuMxrXAG4
      zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wB
      uMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtc
      AbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxr
      XAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGtcAbjM
      a1wBuMxrXAG4zGtcAbjMa1wBuMxrXAG4zGs0wzBmegwuLjPG/w+JgFuAPtk7UQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      fQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      7RXjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3hc133n/bllekEvJACiEgQL2KsoihItSqJsSS6SbbnJduzYaeuss9ns
      JrubaN/d5Em8zptkN7Ffv3Ycx1W2ZPVGWZZIFYqi2AtYABAESfQ6/fb9Y3hHg8EABClRjDz3
      8zx6RA7nnnu+55zvOb9T7h3BsiwLB4cCRBAEQbzemXBwuJ44BnAoaOTrnYFCw9ISdPdNUO63
      0H3llAU91ztLBY1jgPcYweXjxMHnEF1ebtiwml37TzFvfh2Dfb3Ma2hl+NxJfJWNrGxrvN5Z
      LQgEZxL83nPx5OscGS7GPXEcK1iOpoi4XUnGowKJRITP3n8vgiBc72z+xiMIguCMANeBUGk1
      De4glY2reOvkBcpLQsQ1iZpQCEmqdhr/e8h7NgKYpoko/mbOuR1t70/e02VQTdPeq1u95zja
      3r9kQqCJkQEu9A8SKK4iPnoBTQ7SUlvOkVPnuGHdSo4dOYQhB1ixrI1/SwO0ZVl0njzGZNyk
      rqaYvoExquqaifd1IFYsotKnceRUL5s3rLneWb0qus+cYHQ8RWNjNecvDFJWXYcZ6SPlqaCm
      SObcxQG8wVJaGmqud1avmLGhPvoGhwgWzyMycgHLE6KhuogTXX1sWL2MM6dOEVdgxaplSNco
      D5kRoLisiuKgD5dLxRuspdwlIheXUxL2YRhRAuE6Sl0iyjXKyNUiCAJ1C+rxeN1MRhRWrFxK
      bGyMhoYFmKZJqLiCkrDvemfzqqmrq8fj9TAxFmPpyhWkIhPU1TcgWDqh4nLKwgE8nvfnUmpJ
      xTzCfi8iSYrK6imWwFtaRVHQgyi5CAV9aKZ1TTerMmn3nTuD4S2hsrSCZGKMSUVB1FQURcEw
      ZOKJUSKKgusaZuZqsCyDjpNnaGxsQBZ0hodGwOUmlVJQFAXtkgZV0693Vq8CkxMdp2hobMDn
      hpGhYXRBQkmlUBSFwQtnSQg+qsqLr3dGr4rzXScRgxVUlpcSi40RVVS4VF+KksAXKseLimpe
      uzxkDBAsKsVIRoklDerrKqlpaEKNRygKFxFNmtTPL6e2sfmaDUXvhNKSEkaGR6lvaUXXobm+
      ivGESUBUiUbSGiKxxPXO5lVRVlrKyPAIVfXNoOu0ttQzHkkQdIu4AsUIWvJ9qy1cUoYanySl
      y9RUFVPX1EwqOklRuIhYQicVn6SmaSGeazgEZFaBksnkNZ3ta5qGy/Vvbfx4d3C0vT/xer1v
      7wOIonjNY8n3a6w6Fxxt709+Mxd4HRzmiGMAh4LGMYBDQeMYwKGgcQzgUNA4BnAoaBwDOBQ0
      jgEcChrHAA4FjWMAh4LGMYBDQeMYwKGgcQzgUNA4BnAoaBwDOBQ0jgEcChrHAA4FjWMAh4LG
      MYBDQeMYwKGgcQzgUNA4BnAoaBwDOBQ0jgEcChrHAA4FjWMAh4LGMYBDQeMYwKGgcQzgUNA4
      BnAoaBwDOBQ0jgEcChrHAA4FjWMAh4LGMYBDQeMYwKGgcQzgUNA4BnAoaBwDOBQ0jgEcChrH
      AA4FjWMAh4LGMYBDQeMYwKGgcQzgUNA4BnAoaBwDOBQ0jgEcChrHAA4FjWMAh4LGMYBDQeMY
      wKGgcQzgUNA4BnAoaBwDOBQ0jgEcChrHAA4FjWMAh4LGMYBDQeMYwKGgcQzgUNA4BnAoaBwD
      OBQ0sv0Hy7KwLOua3ehap389cbS9f8kYQBAEBEG4JjexLOuapv9vAUfb+xP58l9574lEo7x5
      5C2KQ0WsWroCSZKud5beNUzTZP/Rg0zGIqxfvpZwKHS9s/SuYZomR08eZ2B0iPXLVlNSUnK9
      s3RZrpsBLMvi4InDHOg6gt/t5c5Nt1EULuK111/j4Wcf4yLjuA2J+7d/hA9t23G9snlVWJbF
      2PgYz+x5gZga55b2G2lrWcTg4CDf+cH36Bg/i4nFniP7+KPP/z5+n/96Z3nOWJZFPB7n0d1P
      EVXibG5bz/K2ZUxOTvKtf/4Ox4e70ASDXftf40+++DWKwkXXO8uzcl0MoCgKP33hEV488yoJ
      l4pgQf/FAWRNpKe3h34mULwmnpTMW4cOsLptBfPmzZvTUKwoCrquEwgE3gMl07EsizePvMWP
      dj9MH6MgQEfvaZaVtnLx/EXOjfcRD+j4DRfnLvRy8tQplrQtxuv1XjZtXddJJpMEg8HrFpYc
      PX2MH7z4ED3mAAhw5Nxx1uxfRv/FfnpGLhANqHhNmYHhQY4eP8aq5SvnXBeRSAS/348sv3fN
      MrMK1Nffz/5jB9+Tm76w+1e8fPI1VFMDC8rHA1wcHeTXA/s56x4l7tWxsEi4NLqHz/Pgd7/B
      2Pj4rGnquk5/fz87X9jJ63teR9M0TNMkHo8zMTHBi6+9hGEY11xb59lOfrnrSQaMMUQDvHGJ
      UiXE052vclg9y1hQwZAs4rJGEo2//8X/z6tv7Zk1TcMw6O/v5/mdO9m7by/JVBLLsohGo8Ri
      MV589SVUVb3m2s73XeAXLzxKrz6IpAm4UyLz1FKeOfMqB5KdjARTGJJFUtJICRrfffLHPP/q
      i5dNd3x8nBMdHbzwqxfoPtsNQDQaxbIs9h85QNe5s9dMU8YAZ7rP8Nzunde0IC3Lovd8L08d
      fZFyNYwvJeMyJVqqG+lM9mFIFrpkgQCWAKpskpJ17l6/ndKseNI0TRRFIR6PY5omlmWRSCbZ
      /eorKIpCWVkZsixjmiZerxfTsnj8xae40HfxmmmDdKXt3PtrIqkYVRNBEKCtvJluZQBDTmsz
      xfSKiilaRDwKLcW13LR+85QyUlWVeDyOYRhYloWmaex+ZTeapuL3B/B6vJimic/nQ5Iknnzp
      Gbp6uq6pNkVR2PnaiwykRpk/FsaSLFqK6rmgjaLJZo42iLhVKn0l7Lhp+xRtuq4Tj8dRVTWz
      unTo8CHOnevBtExq5tdgWRYejwdBEDh66ji79u6+ZitRGQMsX9KO2+PhJ48+dE1uNjIywrET
      xzly6hj1/nmMqxEUt8Gd87ZgekRMIf89fT4fW2+8acqQbzd+URQzq0vhUIhP3Pdx7v3Yvaxe
      tRpBEFBVFUmSKAqH2bLhRn70y58wOjb6rmuzR58nX3ia6kAlcSVBXFaot6pob1iKIup5rxMQ
      uOXmW3C73VO0xWKxjC5BEPB6vXzi45/gw/d8mBs2bkIURRRFQZIkPB4P27d8gIeffYzzfRfe
      dW2maXKx7yKPPfcE1eEKNEUlKqao0orZ0LyGpKjNoA1u3rIVn8+X+cyyLCKRCIZhIIpvb0Hd
      cvMt7LhjB/d97L5MuGSP1lvX30jfyADP7dp5TdplJhclJSV87kP3o2sasVgs75evNgO9F3s5
      eOQQhm7gQqaxbAEL/NX4dTfN9c0c7eyY8VqvOT0edLvdyLI8Yxxs96J+f3pyKYoid23dwaKm
      VvoHBvLquFpt8UScE6c6OHn6JOXhUtSUwramTViayaYl6zl0/AhJXcl7rWgKuISpK1xutxtJ
      kmZdNra12d+59YZtrF6ykv7+vhm1XY0+RVE41Xmao8ePUV5URjQS5baFN2EZBmubV3K66wwx
      JZ5fmyXgZqo2QRAy+uzOK582SHd8lmVRX1fPx7d/lNGRUXQ9f0fyToyRaV0X+i7w5K5n2Tt0
      hM4f9vJfPvcfCAaDAJzp7mRkdISV7SvweX0zJpYPVVP5ySM/o31pO0c6jjIyNoJpmbiDXtaG
      l7Nq+Qq29KynZ7yPI0Nn0l1HFqIgThMoiiKBQCBvIUZjUR7d+QSN8+vZsvFGTNMkFovxzMvP
      89LZPezs3M2Xtc+ybsUaID3x2n/0AEsWLqaqsuqKtAG89NouRsZHMXUDUzVIqEkSqSTNVQ2s
      WbSCilAZvtMB9vYeQWVqBYqWkFdbMBjMqy2VSvHI849RUVTGbTdvxzRNkqkUz+/ayUtde0iq
      KeJ6ils23ARAPB5n35H9tNQ3UzNv/hVre+PAXk53n0EURGRLYjIRIZ5I0FjdwIbFa4gnExhu
      2Nd7jIQ11eSCJZDbLAVBwOfzTen9s3ll3+ucOHmcL37y85mJ8L6Db/Hiwd0cmzjDwEMjfP1T
      v48oiukl145jGIbB8iXtVzxxHp9IzykzV73Ss49dEwcQvSJjE+NEY1Fkl4zH7SEai3L2XA+m
      brJ50w1XdKOx8XGWLW9HS2jU1dbSvKCR/ccOoghJykrK8Hq8fPnjn2cyEuFr3/qvjGqRty+2
      QFM0PB7PlDQFQZixEB9++pesWb6GZYuWpJcjx8b4Hz/5Jr3WIKIk4tZFRkdHUFUVQRDQdZ0z
      XZ2gp3udcCg8Z22WZSF7XMwrryKajNNS18SBQwdQRA3LFCgtKaV+QT1bNm7mH372HV7ozJrs
      WiBaIObpBWfS9sTOp2mqa2TDynVYlsXExAT/78P/xPHUWQRRwCWIjI2MZnpRwzDo7OoEzcTr
      9lBeXj5nbQC6ZdBU18jIxBhLmhax/9ABVMFAVeNUlldSWlrKmhWr+cETP+XhIzunarBAzO3N
      srTlmvtsz1mOnTrGb33y80iShKIoPPfyTn506gksCQSvwOjIKIlkAlmScbvd9A30Y6g6IiIr
      l6+4Im1Do8NA9jLopfyIikVUSPJnP/krKvyl3LJ0Mzes2MDzL+1k09oNmV1dG9M0M6Ls3iz7
      3492Hufne5/go2vvZN/Bt0gKKm5DIhKbZNfAq7QsaGLVspUUhcO0lNUx2n88kxefKvHhzbdP
      iZEz2c3TcCYmJkglFdrblvLMi89hJDVePvk6511DIIJpmAiqyL/uf4RXOt/EK3n4j5/5Gm63
      G9MyCQVDU/SZpjklFMnVHo/H+fHrj7CpcQ16QuXCxQucH75IeUkpF4b6eeiph/mtT34eURRZ
      2biUF0/vwRTfLu7VpYtY0rZkTtriiTgDgwPcd9dHefn13UyMjLO38wBnpIsgpfMmKfBIx3Ps
      7zuGqRn8+Rf+hFAwRCKVpLi4+Iq0JVNJHtr7BMsqFyKbEi+9vovu4V6qSysZGh7mR4/9lN97
      4KvIssyK5qU8eugFjEuTYCxYFmhg1fKVc9JmWRYvv/EKH/7AXcRicX7x+MMIlsCLY3sxXRZY
      4EoJnLP6+c8/+B/IlsQXtt3PwoZmnnnpedavXT8l/3bIN1u73HX8dQCkv/iLv/gLgEM9xzg1
      0IUpge4ySQkqo/oknee7eXrvTnoZYl/XIU51nqK2eB6xaIzRsVH6+vqorKwkkUzw3Sf+lVPd
      p0nEE5SEiolGo0QnItQGqjkyepqOSDcfXnkHA5NDuN1uzptD7D9ziJpgFTXzarjY2cvJ4bOZ
      1QS/KjMvVMHK5SumVVA0GuWxJx+nq6uTRa2LEASBeCLO0NAwxaEifvDyQxzr6iBqJFD9ZqbV
      6W4TXTYZ0ScYTY7zqzdf4kSki30DR+ns7kJLqgQ9AfoH+unuOcu86nkA/PrNXTy6+ylS8SQu
      0YXH7aGn9xz1oRom4pPsGnmLlTVLwLCoqZjPycluumMXGL0wzMq25eiKxptvvUXSlQ6DZFNA
      njC54wO3ZWJ+m0QiwZPPPM3R40dpW9SWnvSmFIaGBgkFQjz02qMcPnmMcSOC7rWwLl2qu62M
      tgktykv7dnNk9DT7R45zpvsM0ckoJYEi+vv76entobysHFEUeePwm/zkxYdJxZMIlkDQH6D7
      bDe1gSp00+D5/tdpqWgg7A5QWVJB52QPvcoAvV3nWLtkFYIlsHfPG8Rd6QmxaAm4Jy1u2bI1
      s7+R3TgPHDzA4089wYLaOoLBIJZlMTQ0iGDB4e7jvHT0VboS55FMEc2TrjtDttBdFlErwaQV
      43DHEV7qeJ1O4wJHuo9zuusMTVX1DA0NMzw6QiwWo7i4mOGRYf7x8e8xNDhIMpmitKiEgcEB
      rJTJv37/Bw9mBU75J1yTciIzTowak+wZPszhX5xEUC00j8mdi26mpbmFHz37EL+6kHaVcAaq
      dhaTkjUSgkJI8tMaaKAyFebwmaNcGO+n3F/C9gWbOXThBE8dfIEVS5ZTO78G8UQ6H25TYlnz
      Yu68fcc092qaxjf+7n/RPXkRyydwZPw021o3032xh6gZ589/9tdYuoXHkhkPJxEFEdMyp2nT
      ZIMx3p7wvzV2jKN7TiK/KqGi0VS6gJraGkbGRvnunp+iiBqvDR8k+Cs3oaIwY+oksiCxqnwJ
      VdEwQ0NDjEXGiehxGv01zC+t5rW+A2zv20Z5WRl+j5cxkgDUBaq4/56P4Xa7p2izLIu//8d/
      oGOgC8MHhydPsWPJLfT2nydqJfh/fvFNMExclsR4KAmSwLRg+1KDGc3SdnDiJMfHOvnZvsfR
      TYP5xZX8QXkZmBb/5+V/ISmp7N13lMCLMkXFRYwqk0iCyJrKZVRGgky6x4kl4lyMDlLjrmRh
      TTMv9L3Oqe7TNNU1EgqEGDTTE+L5nlI+dvs9lBSXTOvxf/3SS/z4qYdIyjoHf3KK+zbcRXws
      ymBylF1n3mA8Ppme9wGpoIEgTJ8nAYx7Epk/n0v1cy7Rz74fHcVUDUSvxKfXfoR51fP4h8e+
      w/FkN2+MHEY8DPOeLyVCAvXSylyWAeY+k05ICvhA1OHN4/uZHBhHt3QkXcBwWViCxZgRQQuA
      SxFxTwhEa1TOx0bpTY2B3yI2GuPOm25nKD5K9/h5Xj/4BpIsoYoGAcvNvevv5N477uHRpx5D
      lXQ+fsfHMkNaz7keuuIX8YcCxPQ4yaEoD/U/yoB7HF0ywQUuQyRWLGCJYOVp/DOhSDqKpIMF
      I2Oj/PV3v8ktq2/ClRRQAoAAKhoDwhh4oHTYR6w6xVBRlAH1OIJPwB0T+EDTZmqranh98BCP
      v/QUX/ro50kKGoIFaysW84ef/iqdnZ1875c/4J6bP0hFWQUA/QP9nBw9izfsJ6LH0McUHt79
      BP2ucTTZABdIloBULKbDqStYAVFFHdWdrurJyUn+9of/m9tW34IrKZAMprVpgk4/aW1Voz7i
      lUmGi2MMmqcQPAJyUmBj2XKaGhtxXdzLk7ue5Wuf+V0UyUAwYGlxE3/06d9heHCYf/7lD7ht
      4weoq6kD0ubec2gvZrGMoJi4kyIv7nmZfmuUqCeVzqQL/LJMyn9p03Ku8kSIkwIfyKrBU688
      y2jfMEZMQxBItwPRYsgYR/eDL5pu+nmnzjO5DkAwQdZENLdJkRngj+77PSKRCN0D53gzcgyD
      qbutmsdkyBVjXkoEUQARSq0wd2zayrmz5wjJAUKal/Xta1FVleIX/KxrXsG9d9wDQE1tLT6/
      L9OT9A8M8N2f/4BAOIiEhGnAxcQQsbCKlTV31Lxzb/QZLJD09H1EUWTHsm2sWbKSoZFhPG4P
      MdRpFTJYHqdStJANEVU2ERDZ0bYVS4fRkRFqXRWsX7yWUCjEigWLOdB7nD/63O8TDASora1j
      KD5CcbgYgLHxMb71o+8i+V34PF4m4jEGEsPEwzqm9PaNDbc1rZznpM0QEEywJNjatJEPbLyF
      kdER/Cd8RFCmaRsqjVHptpA1EdVnAgK3Nm9G0kT6+/up98xjTesKAoEAa5vbGe94jX//ya9S
      UVaBS3JROVRBRXna2JZl8dNHf07HcDd1ZfPooo+oEmPEHUH1ZNWVAIngDPsms7RL0RCQdAHN
      bVIjlvOnX/w6g0NDjKYmOD16IX1d1qXJ4LQRIKus8tzEp7nwC142Na2h61QnNbV1fGzr3VRV
      VJJKpTjafQLJEGkyymmqa6Krt5vzyjCG51J6AkiqgO6z2Nq8kY/cfjed3V38+WPf4IMLbyae
      iFNeVs6///BvI2ZNzjasWgekJ22HDh0iEo9yYXKQuvJ5aIoKlp8JTzITB18NsikRNDyUe0po
      LWtkJDXO1nVbWLd0NbquE42nN6ZK4n5Wzl9CxB3j2MQZ1FB6tBNNATQL3FBmhbj/7k9gGAb/
      5ft/SVlpEW6XC4AH7v4kzW/uIXBpf6KqspIdlbdjmiZHjhxB0RS6R85TES4hgJdSK0DUo2Tm
      RFeDZIkENQ8hKcDamnZ6xy5y49ob2LxiI4ZhoCgpEAWKEj5WlC9C9WscHjxJqsjEEtINCx0w
      IWR6uX/HfXg8Hv7nD7+J6RMIBcNYlsXH7/gIJf4iysvKACguLuaumz+IZVkMDg6iKAovH3oN
      yRSo8JYwNjaGGjAx5LkbOV+7DChuPKKbW5s3c7DjCEuXLOUjN32IgD+Ax+NB2avgViVa3LVU
      1VRxvKuDIXcU61LLz5oEH+fUQFd6idFgSm9aKRTzzc8/yL1b76b74lkmjRh/cN9XKC4qyriy
      saYec0jhAxtu4e5bP8iGpWvZ9+s3iAaUdK9fVMKIMo6kilyMDBDET9Dt55XufRyPdiHETdpb
      llIzbz7VVdXThB44cIB9B9/i9ltv48T+oyyYX8fI0DBjrhiaP11ZmWmMCbIqYEpMmdrk0yYZ
      Ir+3+XP8u3u/SktVIz9581H+4J4vs6x1CaIoZnaSA4qHuvA8Hvj4Z7lp3WZGTw3QG+3DdEFJ
      uIQhZQy3KhITU0wOjlNXNp9D3Uc5EjlDV38PW9o2UFxcTFtL67S4uKuri2d2PseHdnyQziMn
      qSgpJxGPM2JMkgqZaQ32JRbIyty0iabA51Z8lD/51NdY1bicf37lZ/z2HZ9jbftqJElCkiSC
      gSDFZoBSIcRvfeoL3LjmBtS+OJ1D5zDcFqVFJQypo7hVkYSsMdI3TH15LcfPnuRw7DSnLnZy
      w8J1lBQXs7i1bdoSrmVZ/K+/+1s2bthAUPQxPDBITeV8eofOEy3TEBCxsgwuqSBYTK1P0rvm
      gsGUZxiXBpr4xpce5EMbbmfn0V00Vi/gUzs+js/ry6xwNVYtwBxSuG/HR9m+eRut85rZ//o+
      UiGDjmcOPpgxwOGzxzlzvguPKuMyZXTBwDsuYHgBzUQbSrJ6+SpOnDzBtrU3UVpcgiiKjI2N
      EYlEiEajrF+7nrraOgRBwOPx4Je9HDt/Ek02KA+WMhQfJTQqE/Mo7Os/zJmjpxn3xgGBs0Pn
      aAjWUFOdf8PmmV89x7FzJ1FjKd46f4yB6DCRVAxTMNOjjJwOzTAtXOMCqmXgiQjgSjcKwQRX
      SiSoeEi5NVwRMd1zSzDeM8KaJatIKUnchsy65WuRJAlVVRkcHGRifIIFdQtYt2ZtZoNqfvU8
      OjpOMi7FqAiWMRwfxaWKuBMiHUoP+w8fZEAZxZAsYmaC8d4R1revybsM2NnTxWuH3yAxGeet
      3mMMx8cYi0+gSwbIYLpA1kXQLVzjoGS0Cek1cgvklEgo6SHl0XBF0+GAJcNk7yjLGhcjyzLR
      0Um2btiCJEmZ4xuTk5NUVlayacOmzGpUbU0tJ491MCJGqAiltUm6gC8icca6wL4j++mPD6NJ
      JklB4eKZXm5cuSmvttOdZ3jz0FsMTAxzrLODkeQE3dELaKKBpApofhNREJFSAnJcQNMMpCS4
      NAHDndYmKRBIudNzHt3CFQHTC3pMJaC4aV3YytEjR/jQzTvw+9I75AMDA8TjcTRNY8sNN1JS
      kp6Ql5aWkhiLcWr8LCeeP/C2AY50HOd0VzeGZmJqOr5xkbjfxBsX0V0WFUYRa1evobqsigW1
      CzJHEdxuN0VFRZSWluJyuTKFIAgCDQ0NJPsinD3XQ6WvlPGhsfTmUUqgyPQz4J9EAEpGvNxQ
      t4YL53tZt3pdXgO0LVzEyVMdvNl3kGRcgZiO5BYIVvjwmTKqaSBOgmGkV6dMN2geCzkh4BsT
      sRTQ9fRhLHlSwAQsHaRLc5qN7esI+oOsWrIicxBLFEVCoRClpaUEAoEpFRwKhWiqqmfPK3so
      D5YwPjQGOogqhDQvEV8SVdLxR2TWhZcwMTxG++JlmeMZ2VRXVtPVeYY9/fuJR5IQ15EkgVCF
      D7/sQtEMpAnQDRPN9bY2KQn+UQkzZWHoJrquI0UAXUA3LWQjHfevaV1JOBRm9dJV+Hxv946h
      UIiSkhJCodAUbT6fj9a6Ft56bS/FvjDjQ2MIGoga+FMukn6NpKzii0ms9LWiRxWa65vynv0v
      KS4m4PHxYsduRibGMFI6QsokWOQhUO3BHDMRFVB1A0OwMDxguMHAIjAmIcTBNEBXdCzFwDsp
      EvcYeOIigkdivquctkVttCxopqKiIjMC+Xw+ioqKKCkpmbLMLAgCba2LuHDkLC88/fyDmQFF
      MNNxtiaZmCakvBaWaCGYIrc23UBROExvby8VFRVTCmu2MzkAy5e1kwobqAELpcgkUWaQKNHR
      kyplg178IyL1pTUsXNDMA5/83IzpDAwP4ivy4/F6KJNCBAUPmmHS5mulvWQpbkVidfUS/EkZ
      b0pC1MCbkpBSAnGfgWVaGIKJKpiYImguC0OyqHNVs3XZDXR1dxMKhaZsuomiOOOuLEBTYxOe
      Mh9qwEQptkiVmMQqDVKSSnG/m8CETJVUQomviK99+Q8oLirOm85EZAJvkR/Z7aLcFSYoetFN
      k3pXPauKluPRZFbMayOUcuNLyRltclIk6tfBsDAsE0VMh4KK28SQLKqFUra3b+Xc+V48Hs+U
      g2mX01ZbW0t4XsmlerNIFV/S5tEpuigTGJcpM8KU+Yr53c9/lao8YSukDwomjBSmaFLhLaFI
      DiBbIqRkNobWMS9YSaW/jCbXPPxxCVkVcCsivrhE3G1gYmEaBqpsgiGQ9KXrz627uLt9O4lU
      krGxMcouzT0g3chna5cul4u2xW1A1iRYc1voHgtJF9A9Fh5klojzWbNuJZvWbeKtQ2/R1NR0
      xQ9iSKKEgIBkZK11izBZoiJpAuvKl/HVT3yJYCA45TrLshgZGaG0tBRJkti95xXeGj3GVzZ+
      hsGhITrOnES82MeJwS5MF7jHBKygidtwoYsqZUNuUrJBLGxgyul1cXuFJ+k3aRXnEZL9fP2r
      X+Phx3/JPR+8O++O8+WQJRnRurS6cqk9JQI6itug2Azylft+i5bG5mnX2Sc+A4EAff397O5/
      kwdW3IuSUjl64hj9/f2cHb7AmcgF3BMCipgkJAUYMSOUDrtRRYNYkYkhW6QCaaWdjjMAABz1
      SURBVG2ildbWSAUhwccf/c4f8sSzT/HB2++c0wM3ueUvSzICIBqk5xyA4jMYkZMEDS9fvOuz
      LF/SPu3aRCKBruuEw2GGh4f58WsPs7SilS03bOLgsUP09fUzlpjkxa69uA0JYUKjqaGJCxND
      BCMyUgqiIQPdld78koz06pziMynGT4MR5mN334Msy9RX1FFdnd98syFL6aafCYEOdh2lo78L
      U367Iu9dfyfdXd309p3nli03X9Xzq6XFpVzsOY9iaYxERzNpWyJ4JBdfue0BKssrp51+tA9O
      2ed1UprCiUMd7OrahxlR+fz9n8PjdrNy4TLOn+lhQo/TZ44S9SrIioAim7gEEdVtpe8ppCvR
      njxualmNz3Rz8vRJ2ha30VjfcMXaBEEgLAfpHbrAcGQEyz78eOlet7dt5eZ1W6YcF7GxT0Ua
      hoGqa+x55Q32nj9KpH+MBz7xGYLBICsWLmOw5yIjqUmGhUnG3YmMNlkQ0VxWRk+2tvb5i6gp
      qqKjo4Pa+joWtbRelbYybzE9/b0MRoYzZWjfa3P9Oj500x15tblcLmRZxjAM3G43Bw4eonds
      gL2H97F94y1s3LCR8lAJYctP9/keEl6dC9YIGBaKbCIaApYHNDk9ObZEMOX0vSVD4OM33sWR
      w0eIJmNsvXELbteVd1zzK+fxl//zL9/eCZY1AV9SJOlNrzqYWJRXlPPhhfdQX18/63A5G5Ik
      8Tsf/i2+95PvE8SDFtNZ37yahvI6xkbGaKibOW1RTJ8E7ezs5PHnn2JQiKC7TI6PdvOfvv+X
      mIqOz+/FSKVQPRblRpAxOYFomhgyKEGTcERGFUwswSLlNTM9WVxJ8pmP3YfP5yP0Dh5M37xq
      I0Zc49yFcyiaSn1ZHctqFzPUP8CdG7bPeqxZkiSGh4d5cfevGRFiaJJJV7SPP/vR32ApOj6/
      DzOqoHotyo0Ak+4UomVgSJAKmQRjMlrKxBItFG86pEtrS/ClT3wWBCgtKb1qbSsXL8dIaJw9
      201SVZlfXM3K+qUM9Q9x75a7LqttdHSUXa+9wtnRiyR8Om63yD+9/GMkSSJguBFSJimfideQ
      CYhe4mIcSQMtaCLKIuGIjC6ZGBIol/Z1dMtg2ZKlLGxuob6+/qofDbWfw860PK8m43O7CMYk
      wpqXHYu20NLYTF1d3Zwaf/o8xxCmOX0DyufzcevmbbTPW4wn5OGBO+5n8YJFWAmd5557Dpj9
      1RuxRJwLyhBeQ0xveMgCgqZh6QbReBSv24PiNRmR4lQlgnzl7gfY2LACyysQm2cQxIPP7SIU
      l/EnZRaHG7hnyw7C4fCcG380GiUen372XRRFVrQv5872DyAUy2xbdiM3Ld/E4rpWfv7znzM5
      OTlr+blcLjr6OvEaEqIhIEgCoqaDbhKNR/G43ehui2E5TmnMxxduv59tizYieETi1QZ+2Y1P
      dhFMSPiTEgv9tdy37R68Xi8lxXN7K0MikSAajU77XBAEFi1axD1rdyAWydzQupZtq7eyqrmd
      Xzz8C4aGhmbV5vF4ONZ/CskCly5iieDWwDIMkokEChoet4eJgIorBlsa1/LbH/wMXtmNUmRi
      hQXChhevIBGISZRbIT61+R4CgQALFiyYU+M3TZPh4eEZN9AyIVDQH+DY0aNIhsnnb7+fWzdv
      49ChgzQ2Ns7ZZZIkYZpm3rPZ4XCYJQvaGBkZ4aVdL3Gx9wI7bttBJBphcGgQr9c77eFpTdMY
      Hx/noecfYSA+DH4Rf0pCqxSorQ7hlkUiQZ2A4KXcCCOoJrfdsI3bbtnOuhVreOXg67SWNPBf
      v/yfGOkfZnxyhDU17fzxl/+QvW++yaLWRXMe2dxuN4lEIm8sLQgCyxYtRYxZ7O84yCu7X+Gm
      TTdRXl5GT08PqqJSVlY2rRwHBwc5dvIEL554FcEr4lVEtAqoLg8S9LuZCGi4kKgVytCTKltX
      beZDt9/JmuWr2d9xkCpfOf/tC/8RNaYwNNLP4pJm/vR3/pjDhw6zsGXhnF8nI8syiWQi77Me
      lmWxpHUxAd3LgVOHePnXL7Fu9ToW1NbRc66HZDJJWVnZtHIcHByk51wPj+97HsElIgsiolfE
      5ZNoWljMiJZCC5m0WvOJxWI0Vyzg0x/9BMuXtCNZImcGz/L1O7/Khva1nDzdQbEU4Hfv/RI1
      FfMYHx+nsrJyTtog3Y68Xu+08n/wwQffXgaNTEYIugKkFIVlbctQFYUnnniSzZs3Tzs2m/3/
      7OUlO/bLh2EYhEIh1i9ew/rlaxkcGmQyMkn/2CDj2iTRiQhN9VPNJooiXq+XC2fPMT4yQtjw
      4XWLlBf5EXXQxw1ScQ3BZSFa0F63mPvu+mhGbGwsyvK6JTQtaCTkCTI6OEpRcTHLl7Szc+fz
      uF1uqqurpx1Gs8mdk8w0kdR1HZfLxeLGRdy4chPV5VXsefMNvAEfHedOEklGaaxpmLJMDOmR
      MRGPc+ZEB0WiH5cAlRVBJAWMqEkiqiJJAgY6i6ta+OSH78ssx2oxhfpwDe1tywh6Aoz2j+Lx
      edmwZj2v7N5NLBabFiLMpm2mB51sbS11TWxZtZmG2npe3fMawaIgR7qPEVMT1FbOz2w+ZWtT
      FIVTR44S8gYRJjWqG0O4EyCbMpMTKVwxgWgoSZ1cxT3bP8SihelNwiJ/mHMnz/KJO+/FMiz0
      mIam62xau4H+vn5eeuklNmyYejR/tnaZr/FDjgEkSWLPm29QUVJBSUkJTz73NIsWLqK4pIRA
      IJDpTexz5PZDzdm9jK7rM/aohmFM2TtY0raEWDTKT488zrmzPXT1dHL+XC+NCxoza+X2Wnxb
      axuVRRUsa11KQ10D46MjBCckBBkmUimq/MUkDZU7Nm1nYVNL5p6LGhbi8/oJh8N0dnfR09vD
      rTdt4/FnnqC0uBS3x01tTe0UDfZD9qlUCtelIwz25/kmfLZu2/iiKFJVVUVjfQM/3v0LTvV1
      0jvUy5E3D1FWWkZ15dsrFqIoUllZSWNNA4uaWmmsbWB8dBR/TEYURcaTCSq8IRQ0blm1hfYl
      yzLXNtY0EA6ECIfDnL9wnhOnOtix7Xaef+kFxEurS3V1dVM6JDs8TSaTU1a85qpNEATKy8pZ
      2LKQR159gqP9JznXf46jbx0i4AtkDr3Z2kpKSmha0MTSxsU0LWjEUHQE3cJj+RmLRwhZbnwB
      LyXBUj5y+92Z+/h8PhbVL8y0g5df3cXq9tVEIpPs2fcGdbV11NTU4Ha7M3m222UikZjS0ViW
      Ne0ZZJsHH3zwQcG6ZBlFUeg4fZKfP/0IJUUljE6OUSQEMHWDcFUJK5a0Ew6EaGxoJBwOZ57w
      d7lcmYcPch+ysLGf0bWf7IpGo0iSxCPPPsrOo7sIhlxI1TKYUJYoZe2iNdywYhNlJWXTMq3r
      Ov/883+ha/gc3a4B5g/72dy2guraFrbckF5xsRt0dg8Rj8f56299k/nFVZwaPYs/LlFRWoEl
      WMxvqmNV23IsC1oXLpymLbsw8xVkKpXKjA6WZTE8PMxEdJK/+tdvIorgrneDCJ6IzKrGVaxf
      tJa25rZp5WSaJj9+7Kd0nDvDafdFyse8bFi4lJrqRm69afuUDic7X4qi8Lff+XuKvWFOjnYT
      SLioLK3AsEyqG+azdukqTMOkra3tHWkDGBoaSp9z+vZ/x8TEtcCTju2jIqsaVrB24WpWtC3P
      2+MeOXGUJ3Y+yRHhLKICK3w1NNW1cuetdxHwBzJtJzdfz/96JweOHUrvJyR1Sj1FqKpKaW0F
      a9tXIyKybOlSXC5X5mF6SZIu2y4FQRAyI4BhGNTOr2HlkuW01DdTVzEft8vNkqVL8Hi8XOi7
      SCwaJRwKMzY2RmlpKbIsY1nWtKfCsp1oY48AkJ4cuVwuLCxePfMmkiogByQEr0DSm6I7dpYy
      SmioaZhWiKIoUlFczlMdO/GMWTQmJIKWRPPidlwe75ReIVuw2+1m46r11NctoK2uBUmUWL16
      NaqhoaQUJicnEBGZjExSXlaeybvde2SfRFQUZcozu7m9ZCAQwO328Eb3fpLRBKIoIIYlDL/F
      RaWP0eFR1i9aN63BCYJATcV8Hjv6DK5Jk/qkTJHLT33dQvyXNunyaZNlmfUr11JfV09bXSs+
      t5fly5ejmwaWYTI2MYahm0SjUcrKyjK9v11v2WnZj1Pa98nWBhAIBHC5XBzoPUZkMoJgCYgh
      CdMPF5UB+gb72LRoQ95QuLK8kn2dBxiZHKFkUqTG7aI4UMSCxtbMuat8y+HNjc0samplccMi
      KovLKS8vp2p+NUWhIrp7uolH4vh9PlRVJRwOZxp/PlNnj+wPPvjgg9MsX1ZaRkN9PatXryYm
      K3zr1R/x3MldHBs8zbZbttHc3ExjYyOdnZ3EYjHGxsZIpVKZzGqaRiqVmtPkcnlbOx9Zdydx
      Q2O0N4alpBuYW3Gxpm3NjNeNjo5QnhJZPSZSPaogTUYZmRjll88/nlk6zYfP52P+/PksW7qM
      1iWL+PaLP+QXp57n1Gg3gdIwmzZtYtnSZXR3d2MYBr29vZkXbNkkk8k5vWUhFAzy27c/gN8T
      ZCgexxi8dMTXgo0N62acK42Pj1OqCrRPyrRO6Ej9w2i6yg8f/9ms2jweD/PmzWPZ0qUsbl/K
      v+z+OT8/8zzHhzqxvCI3b91Ke3s758+fJ5VK0Xs+rS37TQvJZBLDMC676OH1evny7Z+l1F/K
      iBrHHNAy2tYvWDPtGW4b0zRRxieoirq4Oy6j9kRpKq7ie4/8K5Fo+lnwfPoEQaCqspKW5mbW
      r1/Pgb7jfP/AI+w69QZnxs9x91130dzcTDgc5ty5cwwNDZFMJqe0S0VRSKVS0xYG8rbSSDTC
      n3z7QX55cicxSeGCPkyn2cff/fL/I5lMoigKoVAIv99PSUlJZog0TROPx4PX653Trqooity2
      fhvupIikCOhjOpIisrluU+aNFPlY2NzCvUI5zYKIJgm0bd3GpJqkqb4RXddnbZyWZfEvj/+Y
      v3z6/9BvjaG6DI4muvn+np9zprsTePt4R21tLS6Xa8ow6vf78Xq9czJ4W1MrTaV1eOMS+qQB
      OiyglvbW6bunNgsWLOAT4QYWizKKCE3rb0CVRRpqF2RelDWbtkdeeJy/ePSbnNMH0WSDo8ku
      Hjr0NAePH870ri6Xi9qaWmRZzrxADMDv92c2Hy9HQ209i+cvxBeTMOMmaBY1VLGmbdWM10iS
      xD1ta7nVFUaQRYpLi2nctIVkKkl5WfmMrz2x6Tl/jj/81p/x+vBhUpJGR7KHY4mz/POTP0q/
      ISOZfvbZHuX8fn8mQvF6vXi93mkdz4zvkhhJjmMKFoIJSOnh/9joGfr6+2hpbsn7vsfsRjHX
      5cVYPIbqMUl5DAIRi9tXb2fHTbO/DNcfCDJcVEX1hUHU4hCLNt7AUlnODKOXI5qKkbr0dBak
      j97GUXj12F5amxfS1NSU+a6dXu6wPFcmk1ESYRPXhEGDVskff+rrs+bR4/EwXlxFmdiLUBRg
      8eYbCV86ZDaXV3/EU4nMK0qES9oUQWPX0ddZvWwljY2Nl9U2V32RRFqbNKFTFi/lT7/yx1PC
      3nz46lvQX/wVlbJA2bbthEMh/uTLX0cUxct2mqZhMKJOwqUTsEgCFha7Tu/lAeX+KW+9yC7j
      7BWhXG15SzQcCrOpfhW+gJ81zct5/OWneTPaQUj0Z9ZfDcNgcGiIeTnLiFfK8OgImmQgAIsq
      W9l+w/bLXiOKIss23cgosOG2HVMOeV0OQRBY3bIC1dDYsnQjvf0XeOTQsyQklZbqhsz3+vv7
      qaysfEevZtc0jeHoGJbXoiRYxKdvuX9O6S1Zt5H+eJRlN95CSUnpnMtXEARWtCxjYGKIG5as
      JxKJ8JO9jxGVUrRUv93w+wf6qSiveEcvoTUMg6HICJZgEfIHeWDbpy/b+AHqm1sYbFuCv3YB
      S7ZsyRydnwvz581nQ3U7LXVNNM9r4F+e/Snd1gA1RVWZNpBIJDJ7E3PCukQqlbJmIplMWj9+
      4iHrseeeyHymaZr1j9/5lqUoyozX2ZimOWP6P3z4J9bH/vsXrG/84B+s8Ynxy6b1bqPrurXv
      yH7rb779t1O0PPP8s9axjuNzSiOZTOb9vPtst/WJP/ui9Tvf/A/W0ZNzS+vdxDAM69jpE9Zf
      /dM3rEg0kvl896uvWG+8tXdOacykbXBo0Pr0n37J+uLf/Dtr3+H970p+r5TxiXHrf//w29ab
      B/dlPotGo9a3v/cdyzTNy14Pc3w9utfr5c6bbmN0bMw2Db989nFuu3X7nFw/G5MTk5S4Qvz2
      hx8gHJ77S6neLSRJYs2yVUiWkBmCT5w+iWJoLFm0+B2lPT45gWQJ3H/jh1m2aPr7f641oiiy
      pKUNLaUS8KdD1rO9PVwc7ufjd3/sHaU9GYmABR9dt4M17TPH/deS4qJi7t66A9+l/QJVVfnZ
      E7/g4x+5d86j5pzHwOKi4inn2W9at/mqjqFmY1kWA6ODNM9vzLwf5p2EU9nMtPabD0EQWLX8
      7UqsKCmjdXvLO87LwOggXreXtqbW66ptZfvbb00rCob5yI67r/pwo83gyCCiLLGs5d01tpXn
      JVazsaBuQebPoihyz/YPXdEv01xVECgIwjtu/HY6JRWllPlKpuwTXGkhzJT21V5fUVFx1ffN
      pqy0jJDkx+vxTtvcuV7aSkuv/nRoNiUlpfjxEA6E3lVt7wRZlq+47qbsBM91MnKlWDk7wdnE
      E3GOHjvG2tVr3lUDvJfk7pbamKbJoSOHWVBXR3nZ2ysU17ORXCkzabMsi+MdJygtLmH+/PlT
      Pn+/aBMEQbjuBvhNYKZG8pvAb7I2QRCEfzM/lG0YRt5nCX4TsC6dv7Eus3v8fuT9ri0zBzDN
      9FsF7LMv9hkR+3Rk9lmXdxPr0mk9+8z2O0nHNE0Mw8isTNnnd7L/zT4nYu+A2udhZvrBhneK
      ZVkkk8kZj+TOFbt+LqfNNE1cLtd7qs1+i8Y7SUdV1cwqXPa5K1uH/Xf7/Jn999wXC18pGQOk
      UikSibdfOJp7zto+BiDL8ju+aS6Kolx1A7ELwz7rYV06MenxeHC73cRisWk9lD2JzB5xvF4v
      Lpdr2pn9d4qmaZd9A8NM2NpUVc2cQZIkCZfLhc/nIxaLoWla5ruQX5tdFu+2Nl3XM0fWrwZ7
      1E8mk2ialnlZVyAQmKI5u+7s81DZBvD5fMiXTgJcqb4pq0DZzrMnM9lGsA3i8XjweDxXvJOY
      2wizG64oijPu6NqjBKQL3e4RMg+VZ/3gmv0dSZJIpVKZw13ZOuz/svWmUikURUGW5UyDudLC
      zJ28a5qWqcTZekn7jI9hGJk/z6ZNFEUikUimAWaXZz5tiqJkfi/Nrrt3qs3+yVbDMGYdue3R
      yS4P69IJTUEQMh2WnV/bEKlUKnOQLVubnV523g3DyDyq6vV68Xg8V7R7P6UFZxfcTCsxdqM1
      DGNOG1e5sWEymcy41XazXdkzXa/reuZnM+08ZRdc7miV3ZhyteXqzDWGruuZI8CXK8jc6+2T
      o6IoTnlAZrZDXvZPudo9+Vy02eHQ1Wizl5sv13ll15utzQ6z7DAkN6/50rB/ETIf2ddk162i
      KHlH7HztMvuzZDL96vl8Lx+bSdu0Ush3g9xKsH+ja7Yb2AVuVyyk4zdd16e422amYdSOM7Mb
      QG7jyMXuTWxye43cY8W5JrV/f2w2fXaDsO9jvwbErgQ7DJktRLA7k+wyutwm15Vqy8Xv989q
      7Gyj2Caz5035tM2UV1tbduOfy/K2nW6uqWb6e/bndmg4mza7zuwyn/H16NkZyb6hcOk4bb5C
      tL+b+zuwdgZVVZ220mOnlzuM2o0slUplhvpssbmmzE0z399zQ4Pc6219+cIf+3uqqpJIJDI6
      srVlf8++l91Z5KZnm0XTtCl5yg1pZtKWr5e/nDZgVm2apmV+ezn7Gjt0yQ5D7DAmX0dox/X2
      77DNpC3fyJFbv7k68um0/z5T2GqPmvF4PDMftL834+vRczOSXdDZYUI2qqqiquq0SaedXr7G
      7/P5MhNg26H2i2lzX0Nix4/ZlTFb/vMV4uWus6y3VyRyr4/FYpnCzHetrcn+syzLBIPBTDr2
      3EUQBKLR6JR08vVw+RrIbJ1ArrbcDgzSjTmftng8Pk1bvjDH/r8sy1N+qdO+VhCEzG8Bz9TT
      z1YH2XnPVxb253Y7yNZoj1y5nbM9V8n3PMWUsTnfEJU7zM007NmTM3uSml2AMxWEveqSPUxG
      o1F0XZ/Wo9r3nkvhzUa+HidbW76VBNv0giBMmXjmw86fJEl4vd4p2uzJXW6Pmi9fM312peTW
      W7782itV9miUe22uiezJdHZHpygKiUTisg/tZKczU37m+t18dZkbbqqqiizLmTLPTVfMTSBf
      5ecOfz6fb/qjZZcaTnaPN9PwZv/ZDonsiU924dnPnuab7OSSr4fI/n6+njH3WvvPLpdrxqE0
      EAhkJoCzYY929sqLrc2OO91uN16vd0oZvhva8o162d+TZTmvNnskth+Uz6cnm2xtqqpmVqsg
      PerZ7eNy5Z+dv1x9l8tDvvaQ72k2+yEp++mw3PTmvI6ZPfzNVFmCkF7ayp6Y5capuSQSicwv
      v0P6BVqmaWaG0ZnykY+5NMzLMVMasixnDJsvNMmXjt3r2Ea216tjsRiKouRtiDPdP3eym8vl
      /m22ssluyDOFXbn3sbXZx1vsxw3j8TipVCpv/c+Ut5m0zTVUmq1d2p/b+c1ti9OWJ7J33bIF
      Z5O7TGV/zw4RZlr1yJeWYRiZArPjbztmm0lMtoCZ0s4NbexrLjd/yA7hcrF3Je20L1dOdk9p
      p2fvC9iTw8tpy9c7XgttuTH8bCO3jd2oskNDey9ltnAlX4gz0/2yP79cu7TbTi52ZGKHd7nX
      TRsBZhqKsv+saVrmcFt2DGl/L9/kKTv93O+YpommaSiKMmPjm63BXencYKbv2/mKx+OZUC67
      4HJXR2ZrxNk67d4n3/KvZVnTli5z4/Yr1Wanm30P+//xeDzzgxj2Mqetzc7LTOnmy4dtZnuJ
      NPeeuS+uutyoN9O/z6VdJpPJzNsJs9tlvnZoM+uP5OXrZe2CSiQSma1rURSJxWKZa+YapmQ3
      FntXcK7MNjfIjYOzP8/uKfMVth0G2Kcg7ZDF3tHMvm/2S7hyNWY3Ynt1Ivde2WWVa553WxuQ
      6WiSyWQmTo/H45kVkuxOLN87g/Jps3duZ8vjTCPW5cydrzOZSbtdN9kGt6y3V+5mKtNZD3HM
      lGlbeCQSQVHSbyDwer2ZSp7J0TMN6bmVNtd4cDaTXS4cmCnOtRtBIpHIrBv7/f6MMbLTze4t
      sz/Prdh8eckd6eZq/ndDWzKZzJwj8vv9mU4tV9tMdZfdQc5V25XW6VzKI7td2ufTdF0nEolk
      Vn/sQ4+59ZNpa9alTycnJ+ec6dxhybKszEm+fHFYvvBhLvfKVxD5epd8118uzbnkw07bPoCW
      b+6Tm88ryUeuvuulzV4mnCn8fKfaZgut5pL/2crictd7PJ7MyJdLcXHxe/NAzHuR/vXE0fb+
      RBD+DT0Q4+BwPXAM4FDQOAZwKGgcAzgUNI4BHAoaxwAOBY1jAIeCxjGAQ0HjGMChoHEM4FDQ
      OAZwKGgcAzgUNI4BHAoaxwAOBY1jAIeCxjGAQ0HjGMChoHEM4FDQOAZwKGgcAzgUNI4BHAoa
      xwAOBY1jAIeCxjGAQ0HjGMChoHEM4FDQOAZwKGgcAzgUNI4BHAoaxwAOBY1jAIeCxjGAQ0Hj
      GMChoHEM4FDQOAZwKGgcAzgUNI4BHAoaxwAOBY1jAIeCxjGAQ0HjGMChoHEM4FDQOAZwKGgc
      AzgUNI4BHAoaxwAOBY1jAIeCxjGAQ0HjGMChoHEM4FDQOAZwKGgcAzgUNI4BHAoaxwAOBY1j
      AIeCxjGAQ0HjGMChoPm/km/8buLxosIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      4ET+AAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SouthEastAsia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5' width='192'>
      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
      J0Rs/R/oQy2mrILk2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Western Pacific' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sparklines' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
